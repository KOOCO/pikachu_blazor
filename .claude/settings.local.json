{
  "permissions": {
    "allow": [
      "Bash(dotnet build:*)",
      "Bash(dotnet test:*)",
      "Bash(dotnet run:*)",
      "Bash(dotnet ef database:*)",
      "mcp__atlassian__getJiraIssue",
      "mcp__atlassian__searchJiraIssuesUsingJql",
      "mcp__graphiti__search_memory_nodes",
      "mcp__graphiti__add_memory",
      "mcp__context7__resolve-library-id",
      "mcp__context7__get-library-docs",
      "mcp__atlassian__getAccessibleAtlassianResources",
      "mcp__graphiti__search_memory_facts",
      "Bash(find:*)",
      "mcp__atlassian__createJiraIssue",
      "mcp__atlassian__getJiraProjectIssueTypesMetadata",
      "mcp__atlassian__addCommentToJiraIssue",
      "Bash(git checkout:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(gh pr create:*)",
      "mcp__graphiti__get_episodes",
      "Bash(uv:*)",
      "mcp__noodle-memory__search_memory_nodes",
      "mcp__noodle-memory__search_memory_facts",
      "Bash(brew:*)",
      "Bash(afplay:*)",
      "mcp__noodle-memory__add_memory",
      "Bash(./.claude/hooks/stop.py:*)",
      "mcp__noodle-memory__get_episodes"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "pikachu-memory",
    "context7",
    "atlassian"
  ],
 "hooks": {
    "PreToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/pre_tool_use.py"
          }
        ]
      }
    ],
    "PostToolUse": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/post_tool_use.py"
          }
        ]
      }
    ],
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/notification.py --notify"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/stop.py --chat"
          }
        ]
      }
    ],
    "SubagentStop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/subagent_stop.py"
          }
        ]
      }
    ],
    "UserPromptSubmit": [
      {
        "hooks": [
          {
            "type": "command",
            "command": "uv run .claude/hooks/user_prompt_submit.py --log-only"
          }
        ]
      }
    ]
  }
}