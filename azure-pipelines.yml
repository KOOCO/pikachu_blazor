name: Build Pikachu

trigger:
- main


variables:
  - name: AZURE_WEBAPP_NAME
    value: pikachu-dev
  - name: AZURE_WEBAPP_PACKAGE_PATH
    value: 'src\Kooco.Pikachu.Blazor\published'
  - name: CONFIGURATION
    value: Release
  - name: DOTNET_CORE_VERSION
    value: '9.x'
  - name: WORKING_DIRECTORY
    value: 'src\Kooco.Pikachu.Blazor'
  - name: AZURE_WEBAPP_NAME_PRODUCTION
    value: 'pikachu-production'
  - name: CI  # 讓 PublicApiAnalyzers 知道這是 CI/CD 環境
    value: 'true'


jobs:
- job: build
  pool:
    name: KOOCO Build Agent
  #pool:
    #vmImage: 'windows-latest'

  steps:
  - checkout: self
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      includePreviewVersions: false
      version: ${{ variables.DOTNET_CORE_VERSION }}
      
  - script: dotnet restore "${{ variables.WORKING_DIRECTORY }}"
    displayName: 'Restore'

  - script: dotnet build "${{ variables.WORKING_DIRECTORY }}" --configuration ${{ variables.CONFIGURATION }} --no-restore 
    displayName: 'Build'

  # Public API Management
  - task: PowerShell@2
    displayName: 'Auto-update PublicAPI files'
    inputs:
      filePath: 'scripts/api-protection/auto-update-public-api.ps1'
      pwsh: false  # Use Windows PowerShell instead of PowerShell Core
    continueOnError: true  # 允許繼續，即使有變更

  - task: PowerShell@2
    displayName: 'Check for uncommitted PublicAPI changes'
    inputs:
      targetType: 'inline'
      script: |
        # 檢查是否有 PublicAPI 檔案變更
        $gitStatus = git status --porcelain | Where-Object { $_ -match "PublicAPI\.(Shipped|Unshipped)\.txt" }
        if ($gitStatus) {
          Write-Host "❌ 偵測到 PublicAPI 檔案變更:" -ForegroundColor Red
          $gitStatus | ForEach-Object { Write-Host "  $_" -ForegroundColor Red }
          Write-Host ""
          Write-Host "請執行以下步驟修復:" -ForegroundColor Yellow
          Write-Host "1. 在本地執行: pwsh scripts/api-protection/auto-update-public-api.ps1" -ForegroundColor Yellow
          Write-Host "2. 檢查並提交 PublicAPI 檔案變更" -ForegroundColor Yellow
          Write-Host "3. 重新推送到分支" -ForegroundColor Yellow
          exit 1
        } else {
          Write-Host "✅ 沒有 PublicAPI 檔案變更" -ForegroundColor Green
        }
      pwsh: false  # Use Windows PowerShell instead of PowerShell Core

  # Final API Validation - 必須通過
  - task: PowerShell@2
    displayName: 'Final PublicAPI Validation'
    inputs:
      filePath: 'scripts/api-protection/auto-update-public-api.ps1'
      arguments: '-CheckOnly'
      pwsh: false  # Use Windows PowerShell instead of PowerShell Core
    continueOnError: false  # 如果仍有 RS0016/RS0017 則失敗


  # 暫時停用測試，因為測試專案有需要修復的錯誤（與 PublicApiAnalyzers 無關）
  # - script: dotnet test "${{ variables.WORKING_DIRECTORY }}" --no-build
  #   displayName: 'Test'

    
  - script: dotnet publish "${{ variables.WORKING_DIRECTORY }}" --configuration ${{ variables.CONFIGURATION }} --no-build --output "${{ variables.AZURE_WEBAPP_PACKAGE_PATH }}"
    displayName: 'Publish'

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '${{ variables.AZURE_WEBAPP_PACKAGE_PATH }}'
      artifactName: 'webapp'

