@using Microsoft.AspNetCore.Components;
@using Volo.Abp.BlazoriseUI
@using Volo.Abp.BlazoriseUI.Components
@using Volo.Abp.AspNetCore.Components.Messages
@using Blazorise
@using Volo.Abp.AspNetCore.Components.Web.Theming.Layout
<style>
    /* Modal content container */
.custom-modal-content {
  width: 530px !important;
  border-radius: 16px;
  box-shadow: 0px 0px 1px #171a1f12, 0px 0px 2px #171a1f1F;
  overflow: hidden;
}

/* Top Red Rectangle */
.rectangle {
  background-color: #DE3B40;
  height: 100px;
  border-radius: 0;
}

/* Icon centered in red header */
.icon {
  font-size: 50px;
  color: #FFFFFF;
}

/* Cancel Button */
.cancel-button {
  height: 36px;
  padding: 0 12px;
  font-size: 14px;
  font-weight: 400;
  color: #379AE6;
  background: #FFFFFF;
  border-radius: 6px;
  border: 1px solid #007BFF;
  transition: all 0.2s ease;
}

.cancel-button:hover {
  color: #1466A4;
}

.cancel-button:active {
  color: #104F7F;
}

.cancel-button:disabled {
  opacity: 0.4;
}

/* Yes Button */
.yes-button {
  height: 36px;
  padding: 0 12px;
  font-size: 14px;
  font-weight: 400;
  color: #FFFFFF;
  background-color: #DE3B40;
  border-radius: 6px;
  border: none;
  transition: all 0.2s ease;
}

.yes-button:hover {
  background-color: #C12126;
}

.yes-button:active {
  background-color: #AA1D22;
}

.yes-button:disabled {
  opacity: 0.4;
}

</style>
@if(MessageType==UiMessageType.Confirmation)
{
    <Modal @ref="@ModalRef" Closing="@OnModalClosing">
    <ModalContent Class="custom-modal-content" Centered="@CenterMessage" Size="ModalSize.Large">

        @if (IsConfirmation)
        {
            <!-- Red warning header with icon -->
            <ModalHeader Class="rectangle d-flex justify-content-center align-items-center">
                <Icon Name="IconName.ExclamationTriangle" Class="icon" />
            </ModalHeader>
        }

        <ModalBody Class="text-center px-4 pt-3">
            <Paragraph TextAlignment="TextAlignment.Center" Margin="Margin.Is0.FromBottom"
                       Style="white-space: break-spaces; font-size: 1.1rem; font-weight: 500;">
                @if (!IsMessageHtmlMarkup)
                {
                    @Message
                }
                else
                {
                    @((MarkupString)Message)
                }
            </Paragraph>
        </ModalBody>

        <ModalFooter Class="d-flex justify-content-end px-4 pb-3">
            @if (IsConfirmation)
            {
                <button class="cancel-button me-2" @onclick="OnCancelClicked">
                    @CancelButtonText
                </button>
                <button class="yes-button" @onclick="OnConfirmClicked">
                    @ConfirmButtonText
                </button>
            }
        </ModalFooter>

    </ModalContent>
</Modal>

}
@if (MessageType != UiMessageType.Confirmation)
{ 
    ﻿<Modal @ref="@ModalRef" Closing="@OnModalClosing">
    <ModalContent Centered="@CenterMessage" >
        @if (!Title.IsNullOrEmpty())
        {
            <ModalHeader>
                <ModalTitle>
                    @Title
                </ModalTitle>
            </ModalHeader>
        }
        <ModalBody>
            @if ( ShowMessageIcon )
            {
                <DisplayHeading Size="DisplayHeadingSize.Is2" TextAlignment="TextAlignment.Center">
                    <Icon Name="@MessageIcon" Style="@MessageIconStyle" />                    
                </DisplayHeading>
            }
            <Paragraph TextAlignment="TextAlignment.Center" Margin="Margin.Is0.FromBottom" Style="white-space: break-spaces;">
                @if (!IsMessageHtmlMarkup)
                {
                    @Message
                }
                else
                {
                    @((MarkupString)Message)
                }
            </Paragraph>
        </ModalBody>
        <ModalFooter class="d-flex justify-content-center">
                @if ( IsConfirmation )
                {
                    <Button Color="Color.Primary" Outline Padding="Padding.Is3.OnX" Margin="Margin.Is1.OnX" Clicked="@OnCancelClicked">
                        @if ( Options?.CancelButtonIcon != null )
                        {
                            <Icon Name="@Options.CancelButtonIcon" Margin="Margin.Is2.FromEnd" />
                        }
                        @CancelButtonText
                    </Button>
                    <Button Color="Color.Primary" Padding="Padding.Is3.OnX" Margin="Margin.Is1.OnX" Clicked="@OnConfirmClicked">
                        @if ( Options?.ConfirmButtonIcon != null )
                        {
                            <Icon Name="@Options.ConfirmButtonIcon" Margin="Margin.Is2.FromEnd" />
                        }
                        @ConfirmButtonText
                    </Button>
                }
                else
                {
                    <Button Color="Color.Primary" Padding="Padding.Is3.OnX" Margin="Margin.Is1.OnX" Clicked="@OnOkClicked">
                        @if ( Options?.OkButtonIcon != null )
                        {
                            <Icon Name="@Options.OkButtonIcon" Margin="Margin.Is2.FromEnd" />
                        }
                        @OkButtonText
                    </Button>
                }
        </ModalFooter>
    </ModalContent>
</Modal>
}
