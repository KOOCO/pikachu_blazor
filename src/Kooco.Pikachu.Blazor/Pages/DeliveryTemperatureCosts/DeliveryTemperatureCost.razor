@page "/DeliveryTemperatureCost"

@using Kooco.Pikachu.DeliveryTemperatureCosts
@using Volo.Abp.MultiTenancy
@using Volo.Abp.Application.Dtos
@using Kooco.Pikachu.GroupBuys
@using Kooco.Pikachu.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using System.Text.Json;
@using System.ComponentModel;
@using Kooco.Pikachu.EnumValues;
@using Blazorise.Components;
@using Blazorise.LoadingIndicator;
@using Kooco.Pikachu.Items.Dtos;

@inherits PikachuComponentBase
@inject IStringLocalizer<PikachuResource> L
@inject NavigationManager NavigationManager
@attribute [Authorize]
@* <h3>@L["DeliveryTemperatureCost"]</h3> *@

<style>
    .costLabel {
        width: 4.333333% !important;
    }

    .costNumeric {
        width: 23.666667% !important;
    }

    .normalLabel {
        width: 5.333333% !important;
    }
</style>

<h3>@L["DeliveryByStoreSettings"]</h3>

<Card>
    <CardBody>
        <Div Class="d-flex mb-3">
            <Switch TValue="bool"
                    Checked="@IsLogisticProviderActivated"
                    CheckedChanged="OnLogisticProviderActivationChanged"
                    CheckedExpression="@(() => IsLogisticProviderActivated)">
                @L["ActivateLogisticProvider"]
            </Switch>
            <Switch TValue="bool"
                    Checked="@IsAllowOffshoreIslands"
                    CheckedChanged="OnAllowOffShoreChanged"
                    CheckedExpression="@(() => IsAllowOffshoreIslands)">
                @L["AllowOffshoreIslands"]
            </Switch>
        </Div>

        @foreach (DeliveryTemperatureCostDto item in temperatureCosts)
        {
            <Div Class="row mb-3 ">
                <Div Class="col-1 text-lg-start normalLabel">
                    <Label>@L[item.Temperature.ToString()]</Label>
                </Div>
                <Div hidden>
                    <Select Disabled
                            TValue="ItemStorageTemperature"
                            Class="form-select form-select-sm"
                            SelectedValue="@item.Temperature"
                            hidden>
                        <SelectItem Value="-1"></SelectItem>
                        @foreach (object enumValue in Enum.GetValues(typeof(ItemStorageTemperature)))
                        {
                            <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                        }
                    </Select>
                </Div>
                <Div Class="col-4">
                    <Select TValue="LogisticProviders?"
                            Class="form-select form-select-sm"
                            Disabled=!IsLogisticProviderActivated
                            @onchange=@((e) => OnLogisticProviderChange(e, item))>
                        <SelectItem Value="100">@L["SelectLogistics"]</SelectItem>
                        @foreach (object enumValue in GetLogisticsProviders(item.Temperature))
                        {
                            if (item.LogisticProvider is not null &&
                            item.LogisticProvider.ToString() == enumValue.ToString())
                            {
                                <SelectItem Value="@enumValue" selected>@L[enumValue.ToString()]</SelectItem>
                            }

                            else
                            {
                                <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                            }
                        }
                    </Select>
                </Div>
                <Div Class="col-6">
                    <Select TValue="DeliveryMethod"
                            Class="form-select form-select-sm"
                            Disabled=!IsLogisticProviderActivated
                            @onchange=@((e) => OnDeliveryMethodChange(e, item))>
                        <SelectItem Value="100">@L["SelectDeliveryMethod"]</SelectItem>
                        @foreach (object enumValue in GetDeliveryMethods(item.Temperature, item.LogisticProvider))
                        {
                            if (item.DeliveryMethod?.ToString() == enumValue.ToString())
                            {
                                <SelectItem Value="@enumValue" selected>@L[enumValue.ToString()]</SelectItem>
                            }

                            else
                            {
                                <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                            }
                        }
                    </Select>
                </Div>
            </Div>

            Index++;
        }
        <Div Class="row">
            <Div Class="col-12 text-lg-end">
                <PikachuButton Class="pk-btn-primary" Loading="IsLoading" Clicked="UpdateCostAsync" IconClass="fa fa-check">@L["Save"]</PikachuButton>
            </Div>
        </Div>
    </CardBody>
</Card>

@code {

}
