@page "/CashFlowDealerSettings"
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.PaymentGateways;
@using Microsoft.Extensions.Localization;
@using Volo.Abp.AspNetCore.Components.Messages;
@using Microsoft.Extensions.Configuration;
@using Volo.Abp.ObjectMapping;
@using Blazorise.LoadingIndicator;
@inherits PikachuComponentBase
@inject IConfiguration Configuration;
@inject IPaymentGatewayAppService _paymentGatewayAppService;
@inject IUiMessageService _uiMessageService;
@inject IJSRuntime JSRuntime;
@inject IObjectMapper ObjectMapper;
@inject IStringLocalizer<PikachuResource> L;
@attribute [Authorize]
<LoadingIndicator @ref="Loading" FullScreen>

</LoadingIndicator>
<style>
    .form-check-inline {
        margin: 0;
    }
</style>
<h3>@L["CashFlowDealerSettings"]</h3>
<Card>
    <CardHeader>
        <h4>@L["PaymentDeadline"]</h4>
    </CardHeader>
    <CardBody>

        <Validations @ref="orderValidations"
             Mode="ValidationMode.Manual"
             Model="@OrderValidity">

    <!-- Order Validity Unit -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 pt-2 text-end">
            <label class="form-label" for="ov-unit">
                @L["OrderValidityUnit"] <span class="text-danger">*</span>
            </label>
        </div>
        <div class="col-6">
            <Validation  Validator="ValidationRule.IsNotEmpty">
                <Select TValue="string"
                        Id="ov-unit"
                        
                        @bind-SelectedValue="OrderValidity.Unit">
                    <!-- Empty option to force selection -->
                            <SelectItem Value="@((""))">@L["PleaseSelect"]</SelectItem>
                            <SelectItem Value="@("Days")">@L["Days"]</SelectItem>
                            <SelectItem Value="@("Hours")">@L["Hours"]</SelectItem>
                            <SelectItem Value="@("Minutes")">@L["Minutes"]</SelectItem>
                </Select>

                <Feedback>
                   
                    <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                </Feedback>
             
            </Validation>
        </div>
    </div>

    <!-- Validity Period -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 pt-2 text-end">
            <label class="form-label" for="ov-period">
                @L["ValidityPeriod"] <span class="text-danger">*</span>
            </label>
        </div>
        <div class="col-6">
            <Validation Validator="ValidatePositiveInt">
                <NumericEdit TValue="int"
                             Id="ov-period"
                             Min="1"
                             @bind-Value="OrderValidity.Period"
                             Class="form-control" >
                <Feedback>
               
                    <ValidationError>@L["MustBeGreaterThanZero"]</ValidationError>
                </Feedback>
                </NumericEdit>
            </Validation>
        </div>
    </div>

    <div class="row mt-3">
        <div class="col-12 text-center">
            <Button Color="Color.Primary"
                    Size="Size.Small"
                    Clicked="OnOrderSubmitAsync">
                <i class="fa fa-check me-1"></i>
                @L["SaveChanges"]
            </Button>
        </div>
    </div>
</Validations>
    </CardBody>
</Card>
<Card>
    <CardHeader>
        <h4>@L["LinePay"]</h4>
    </CardHeader>
    <CardBody>


<Validations @ref="validations"   Mode="ValidationMode.Manual" Model="@LinePay">

    <!-- Enable / Disable -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 text-end">
            <label class="form-label" for="l-enable-disable-switch">
                @L["Enable/Disable"]
            </label>
        </div>
        <div class="col-6">
            <Switch TValue="bool"
                    Id="l-enable-disable-switch"
                    @bind-Checked="LinePay.IsEnabled"
                    Disabled="IsLinePayNotExists" />
        </div>
    </div>

    <!-- ChannelId (required) -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 pt-2 text-end">
            <label class="form-label" for="channel-id">
                @L["ChannelId"] <span class="text-danger">*</span>
            </label>
        </div>
        <div class="col-6">
            <Validation Validator="ValidationRule.IsNotEmpty">
                <TextEdit Id="channel-id"
                          class="form-control"
                          @bind-Text="LinePay.ChannelId"
                          Placeholder="@L["EnterChannelId"]">
                    <Feedback>
                     
                        <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                    </Feedback>
                </TextEdit>
            </Validation>
        </div>
    </div>

    <!-- ChannelSecretKey (required) -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 pt-2 text-end">
            <label class="form-label" for="channel-secret-key">
                @L["ChannelSecretKey"] <span class="text-danger">*</span>
            </label>
        </div>
        <div class="col-6">
            <Validation Validator="ValidationRule.IsNotEmpty">
                <TextEdit Id="channel-secret-key"
                          class="form-control"
                          @bind-Text="LinePay.ChannelSecretKey"
                          Placeholder="@L["EnterChannelSecretKey"]">
                    <Feedback>
                        
                        <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                    </Feedback>
                </TextEdit>
            </Validation>
        </div>
    </div>

    <!-- LinePointsRedemption -->
    <div class="row justify-content-center mb-2">
        <div class="col-2 text-end">
            <label class="form-label" for="l-points-redemption">
                @L["LinePointsRedemption"]
            </label>
        </div>
        <div class="col-6">
            <Switch TValue="bool"
                    Id="l-points-redemption"
                    @bind-Checked="LinePay.LinePointsRedemption"
                    Disabled="IsLinePayNotExists" />
        </div>
    </div>

    @if (IsLinePayNotExists)
    {
        <div class="row mt-3">
            <div class="col-12 text-center">
                <label class="form-label form-label-lg">
                    <span class="text-danger">@L["PleaseFillInTheRequiredInformation"]</span>
                </label>
            </div>
        </div>
    }

    <div class="row mt-3">
        <div class="col-12 text-center">
            <Button Color="Color.Primary"
                    Size="Size.Small"
                    Clicked="OnSubmitAsync">
                <i class="fa fa-check me-1"></i>
                @L["SaveChanges"]
            </Button>
        </div>
    </div>

</Validations>



    </CardBody>
</Card>

<!-- ===================== ChinaTrust ===================== -->
@if(Configuration["App.Environment"]!="Production")
{
<Card>
    <CardHeader>
        <h4>@L["ChinaTrust"]</h4>
    </CardHeader>
    <CardBody>
        <Validations @ref="validationsChinaTrust" Mode="ValidationMode.Manual" Model="@ChinaTrust">
            <!-- Enable/Disable -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 text-end">
                    <label class="form-label" for="c-enable-disable-switch">@L["Enable/Disable"]</label>
                </div>
                <div class="col-6">
                    <Switch TValue="bool" Id="c-enable-disable-switch" @bind-Checked="ChinaTrust.IsEnabled" />
                </div>
            </div>

            <!-- Code -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ct-code">@L["Code"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ct-code" class="form-control" @bind-Text="ChinaTrust.Code" >
                        <Feedback>
                           
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                    
                </div>
            </div>

            <!-- MerchantId -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ct-merchant-id">@L["MerchantId"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ct-merchant-id" class="form-control" @bind-Text="ChinaTrust.MerchantId" >
                        <Feedback>
                    
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- TerminalCode -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ct-terminal-code">@L["TerminalCode"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ct-terminal-code" class="form-control" @bind-Text="ChinaTrust.TerminalCode" >
                        <Feedback>
                          
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- CodeValue -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ct-code-value">@L["CodeValue"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ct-code-value" class="form-control" @bind-Text="ChinaTrust.CodeValue" >
                        <Feedback>
                      
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            @if (IsChinaTrustNotExists)
            {
                <div class="row mt-3">
                    <div class="col-12 text-center">
                        <label class="form-label form-label-lg"><span class="text-danger">@L["PleaseFillInTheRequiredInformation"]</span></label>
                    </div>
                </div>
            }

            <div class="row mt-3">
                <div class="col-12 text-center">
                    <Button Color="Color.Primary" Size="Size.Small" Clicked="OnSubmitChinaTrustAsync">
                        <i class="fa fa-check me-1"></i> @L["SaveChanges"]
                    </Button>
                </div>
            </div>
        </Validations>
    </CardBody>
</Card>
}
<!-- ===================== EcPay ===================== -->
<Card>
    <CardHeader>
        <h4>@L["EcPay"]</h4>
    </CardHeader>
    <CardBody>
        <Validations @ref="validationsEcPay" Mode="ValidationMode.Manual" Model="@EcPay">

            <!-- MerchantId -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ec-merchant-id">@L["MerchantId"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ec-merchant-id" class="form-control" @bind-Text="EcPay.MerchantId" >
                        <Feedback>
                         
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- HashKey -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ec-hash-key">@L["HashKey"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ec-hash-key" class="form-control" @bind-Text="EcPay.HashKey" >
                        <Feedback>
                      
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- HashIV -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ec-hash-iv">@L["HashIV"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ec-hash-iv" class="form-control" @bind-Text="EcPay.HashIV" >
                        <Feedback>
                          
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- TradeDescription -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ec-trade-desc">@L["TradeDescription"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ec-trade-desc" class="form-control" @bind-Text="EcPay.TradeDescription" >
                        <Feedback>
                           
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- CreditCheckCode -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="ec-credit-check">@L["CreditCheckCode"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidationRule.IsNotEmpty">
                        <TextEdit Id="ec-credit-check" class="form-control" @bind-Text="EcPay.CreditCheckCode" >
                        <Feedback>
                          
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </TextEdit>
                    </Validation>
                </div>
            </div>

            <!-- Credit Card toggle -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 text-end">
                    <label class="form-label" for="ec-cc-enable">@L["CreditCard"]</label>
                </div>
                <div class="col-6">
                    <Switch TValue="bool" Id="ec-cc-enable" @bind-Checked="EcPay.IsCreditCardEnabled" />
                </div>
            </div>

            @if (EcPay.IsCreditCardEnabled)
            {
                <div class="row justify-content-center mb-2">
                    <div class="col-2 text-end">
                        <label class="form-label">@L["InstallmentPeriods"]</label>
                    </div>
                    <div class="col-6">
                        @foreach (var period in Constant.InstallmentPeriods)
                        {
                            <Switch Inline TValue="bool"
                                    Checked="@EcPay.InstallmentPeriods.Contains(period)"
                                    CheckedChanged="(val) => OnInstallmentPeriodChange(val, period)">
                                @L[$"InstallmentPeriods.{period}"]
                            </Switch>
                        }
                    </div>
                </div>
            }

            <!-- Virtual Bank Transfer -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 text-end">
                    <label class="form-label" for="ec-vbank-enable">@L["VirtualBankTransfer"]</label>
                </div>
                <div class="col-6">
                    <Switch TValue="bool" Id="ec-vbank-enable" @bind-Checked="EcPay.IsBankTransferEnabled" />
                </div>
            </div>

            @if (IsEcPayNotExists)
            {
                <div class="row mt-3">
                    <div class="col-12 text-center">
                        <label class="form-label form-label-lg"><span class="text-danger">@L["PleaseFillInTheRequiredInformation"]</span></label>
                    </div>
                </div>
            }

            <div class="row mt-3">
                <div class="col-12 text-center">
                    <Button Color="Color.Primary" Size="Size.Small" Clicked="OnSubmitEcPayAsync">
                        <i class="fa fa-check me-1"></i> @L["SaveChanges"]
                    </Button>
                </div>
            </div>
        </Validations>
    </CardBody>
</Card>

<!-- ===================== Manual Bank Transfer ===================== -->
<Card>
    <CardHeader>
        <h4>@L["ManualBankTransfer"]</h4>
    </CardHeader>
    <CardBody>
        <Validations @ref="validationsManual" Mode="ValidationMode.Manual" Model="@ManualBankTransfer">
            <!-- Enable/Disable -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 text-end">
                    <label class="form-label" for="mbt-enable">@L["Enable/Disable"]</label>
                </div>
                <div class="col-6">
                    <Switch TValue="bool" Id="mbt-enable" @bind-Checked="ManualBankTransfer.IsEnabled" />
                </div>
            </div>

            @* Text required fields *@
            @foreach (var f in textFields)
            {
                 <div class="row justify-content-center mb-2">
        <div class="col-2 pt-2 text-end">
            <label class="form-label" for="@f.Id">@f.Label <span class="text-danger">*</span></label>
        </div>
        <div class="col-6">
            <Validation Validator="ValidationRule.IsNotEmpty">
                <TextEdit Id="@f.Id"
                          class="form-control"
                          Text="@f.Get()"
                          TextChanged="@(v => { f.Set(v); StateHasChanged(); })" >
                <Feedback>
                   
                    <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                </Feedback>
                </TextEdit>
            </Validation>
        </div>
    </div>
            }

            <!-- MinimumAmountLimit -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="mbt-min">@L["MinimumAmountLimit"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidatePositiveInt">
                        <NumericEdit TValue="int?" Id="mbt-min" Min="0" @bind-Value="ManualBankTransfer.MinimumAmountLimit" Class="form-control" >
                        <Feedback>
                           
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </NumericEdit>
                    </Validation>
                </div>
            </div>

            <!-- MaximumAmountLimit -->
            <div class="row justify-content-center mb-2">
                <div class="col-2 pt-2 text-end">
                    <label class="form-label" for="mbt-max">@L["MaximumAmountLimit"] <span class="text-danger">*</span></label>
                </div>
                <div class="col-6">
                    <Validation Validator="ValidatePositiveInt">
                        <NumericEdit TValue="int?" Id="mbt-max" Min="0" @bind-Value="ManualBankTransfer.MaximumAmountLimit" Class="form-control" >
                        <Feedback>
                         
                            <ValidationError>@L["ThisFieldIsRequired"]</ValidationError>
                        </Feedback>
                        </NumericEdit>
                    </Validation>
                </div>
            </div>

            @if (IsManualBankTransferNotExist)
            {
                <div class="row mt-3">
                    <div class="col-12 text-center">
                        <label class="form-label form-label-lg"><span class="text-danger">@L["PleaseFillInTheRequiredInformation"]</span></label>
                    </div>
                </div>
            }

            <div class="row mt-3">
                <div class="col-12 text-center">
                    <Button Color="Color.Primary" Size="Size.Small" Clicked="OnSubmitManualAsync">
                        <i class="fa fa-check me-1"></i> @L["SaveChanges"]
                    </Button>
                </div>
            </div>
        </Validations>
    </CardBody>
</Card>