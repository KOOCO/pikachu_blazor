@page "/Items/New"

@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.Items.Dtos;
@using Pikachu.Items;
@using Pikachu.Localization;
@using Microsoft.Extensions.Localization;
@using System.ComponentModel
@using Blazorise.Components;

@inject IItemAppService AppService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<PikachuResource> L
@inject IMessageService _message


<style>
    .row {
        margin-top: 10px;
    }

    .site-tag-plus {
        background: #fff;
        border-style: dashed;
    }
    /* you can make up upload button and sample style by using stylesheets */
    .ant-upload-select-picture-card i {
        color: #999;
        font-size: 32px;
    }

    .ant-upload-select-picture-card .ant-upload-text {
        margin-top: 8px;
        color: #666;
    }

    .anticon {
        vertical-align: 0.1em !important
    }

</style>


<div class="col-12">
    <div>
        <h3>@L["NewItem"]</h3>
    </div>
    <Card>
        <CardBody>
            <div>
                <div class=" col-12 row">
                    <div class="col-2">
                        <label>@L["ItemName"]</label>
                    </div>
                    <div class="col-9">
                        <TextEdit @bind-Text="@createItemDto.ItemName" MaxLength="@maxtextCount" />
                    </div>
                    <div class="col-1">
                        <span>
                            @(string.IsNullOrWhiteSpace(createItemDto.ItemName) ? 60 : (maxtextCount - createItemDto.ItemName.Count()))/@maxtextCount
                        </span>
                    </div>
                </div>
                <div class="col-12 row">
                    <div class="col-2">
                        <label>@L["ItemImage"]</label>
                    </div>
                    <div class="col-10 row">
                      @*   <Upload Action="https://www.mocky.io/v2/5cc8019d300000980a055e76"
                                Name="avatar"
                        @bind-FileList="itemImageList"
                                ListType="picture-card"
                                Multiple="true"
                                OnChange="ItemImageHandleChange">
                            <div>
                                <Icon Type="plus"></Icon>
                                <div className="ant-upload-text">@L["Upload"]</div>
                            </div>
                        </Upload> *@
                        @* <Field>
                            <FileEdit Changed="@ItemImageChangeEvent" accept=".jpg, .png, .jpeg" Multiple="true" />
                        </Field> *@
                        <Field>
                            @* <FilePicker @ref="filePickerCustom"
                                    Multiple
                                  
                                    Changed="ItemImageChangeEvent"
                                    Upload="ItemImageUploadEvent"
                                    ShowMode="FilePickerShowMode.List"
                                    Accept=".jpg, .jpeg, .png"
                                >
                                <FileTemplate>
                                    <Div Flex="Flex.JustifyContent.Between">
                                        <Div>
                                            <Heading Size="HeadingSize.Is5">@context.File.Name</Heading>
                                            <Paragraph>@FilePicker.GetFileSizeReadable(context.File)</Paragraph>
                                            @* <Image src="@FileDataUrls[context.File]" /> 
                                        </Div>
                                        <Div>
                                            <Button Class="btn btn-sm btn-danger" Clicked="() => RemoveImage(context.File)">
                                                <i class="fa fa-trash"></i>
                                            </Button>
                                        </Div>
                                    </Div>
                                </FileTemplate>
                                <ButtonsTemplate>
                                    <Button Clicked="@context.Upload" Color="Color.Primary"><Icon Name="IconName.FileUpload" /></Button>
                                </ButtonsTemplate>
                            </FilePicker> *@
                            <InputFile OnChange="@ItemImageChangeEvent" />
                        </Field>
                    </div>
                </div>
                <div Class="col-12 row">
                    <div class="col-2"></div>
                    <div class="col-10">
                        @foreach (var image in ItemImageList)
                        {
                            <Image Source="@image" Text="Item Image" Fluid Style="width:150px;"/>
                        } 
                    </div>
                </div>
                <div class=" col-12 row">
                    <div class="col-2">
                        <fieldLabel>@L["ItemDescription"]</fieldLabel>
                    </div>
                    <div class="col-9">
                        <div class="col-12">
                            <fieldLabel></fieldLabel>
                            <TextEdit Placeholder="@L["ItemDescriptionTitle"]" @bind-Text="@createItemDto.ItemDescriptionTitle" />
                        </div>
                        <div class=" col-12">
                            <Blazored.TextEditor.BlazoredTextEditor @ref="@quillHtml">
                                <ToolbarContent>
                                    <select class="ql-header">
                                        <option selected=""></option>
                                        <option value="1"></option>
                                        <option value="2"></option>
                                        <option value="3"></option>
                                        <option value="4"></option>
                                        <option value="5"></option>
                                    </select>
                                    <span class="ql-formats">
                                        <button class="ql-bold"></button>
                                        <button class="ql-italic"></button>
                                        <button class="ql-underline"></button>
                                        <button class="ql-strike"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <select class="ql-color"></select>
                                        <select class="ql-background"></select>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-list" value="ordered"></button>
                                        <button class="ql-list" value="bullet"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-link"></button>
                                    </span>
                                    <span class="ql-formats">
                                        <button class="ql-image"></button>
                                    </span>
                                     <span class="ql-formats">
                                        <button class="ql-video"></button>
                                    </span>
                                </ToolbarContent>
                            </Blazored.TextEditor.BlazoredTextEditor>
                        </div>
                    </div>
                    <div class="col-1">
                        <span>
                            @(string.IsNullOrWhiteSpace(createItemDto.ItemDescriptionTitle) ? 60 : (maxtextCount - createItemDto.ItemDescriptionTitle.Count()))/@maxtextCount
                        </span>
                    </div>
                </div>
                <div class="col-12 row">
                    <div class="col-2">
                        <fieldLabel>@L["ItemTags"]</fieldLabel>
                    </div>
                    <div class="col-10">
                   @*      @foreach (var tag in itemTags)
                        {
                            <Tag @key="tag" Closable OnClose="()=>OnTagClose(tag)">@tag</Tag>
                        }
                        @if (tagInputVisible)
                        {
                            <Input @ref="inputTagRef" Style="width: 78px" Size="small" @bind-Value="inputTagValue" OnBlur="HandleTagInputConfirm" OnPressEnter="HandleTagInputConfirm" AutoFocus />
                        }
                        else
                        {
                            <Tag Class="site-tag-plus" OnClick="@(() => tagInputVisible = !tagInputVisible)">
                                <Icon Type="plus" />@L["NewTag"]
                            </Tag>
                        } *@
                        <div class="form-control">
                            @foreach(var item in itemTags)
                            {
                                <Badge class="item-tags" CloseClicked="@(() => HandleTagDelete(item))">@item</Badge>
                            }
                    
                            <div class="input-container">
                                <input type="text" id="tag-input" class="tag-input" placeholder="New Tag"
                                @bind-value="TagInputValue"
                                @onkeyup="HandleTagInputKeyUp"/>
                                <i class="tag-input-placeholder-icon fa fa-plus"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-12 row">
                    <div class="col-2">
                        <label>@L["ItemStyle"]</label>
                    </div>
                    <div class="col-10">

                        @foreach(var customeField in customeFields)
                        {
                            <div class="input-group">
                                <TextEdit Placeholder="@L["ItemStyleKey"]" @bind-Text="@customeField.Name"/>
                                <Button Class="btn btn-danger" @onclick="()=>DeleteCustomeField(customeField)"><i class="fa fa-trash"></i></Button>
                            </div>
                            <div class="form-control border-radius-0 mb-2">
                                @foreach(var item in customeField.ItemTags)
                                {
                                    <Badge class="item-tags" CloseClicked="@(() => OnCustomFieldTagClose(customeField.Id, item))">@item</Badge>
                                }

                                <div class="input-container">
                                    <input type="text" class="tag-input" placeholder="New Tag"
                                    @bind-value="customeField.InputTagValue"
                                    @onkeyup="(e)=>HandleCustomFieldTagInputConfirm(customeField.Id, customeField.InputTagValue, e)"/>
                                    <i class="tag-input-placeholder-icon fa fa-plus"></i>
                                </div>
                            </div>
                        }
                
                     @*    @foreach (var customeField in customeFields)
                        { *@
                            @* <div style="margin:7px; border: 1px solid #cccccc;"> *@
                                @* <div> *@
                                  @*   <TextEdit Placeholder="@L["ItemStyleKey"]" @bind-Text="@customeField.Name"/> *@
                                @* </div>
                                <div style="padding-left:33px" class="row">
                                    <div class="col-11" style="background-color:white"> *@
                                     @*     @foreach (var tag in customeField.ItemTags)
                                                  {
                                                      <Tag @key="tag" Closable OnClose="()=>OnCustomFieldTagClose(customeField.Id, tag)">@tag</Tag>
                                                  }
                                                  @if (customeField.TagInputVisible)
                                                  {
                                                      <Input Id="@customeField.Id.ToString()" @ref="customeField.InputTagRef" Style="width:78px" Size="small" @bind-Value="customeField.InputTagValue" OnBlur="()=>HandleCustomFieldTagInputConfirm(customeField.Id, customeField.InputTagValue)" OnPressEnter="()=>HandleCustomFieldTagInputConfirm(customeField.Id, customeField.InputTagValue)" AutoFocus />
                                                  }
                                                  else
                                                  {
                                                      <Tag Class="site-tag-plus" OnClick="@(() => customeField.TagInputVisible = !customeField.TagInputVisible)">
                                                          <Icon Type="plus" />@L["NewTag"]
                                                      </Tag>
                                                  } *@
                                    @* </div>
                                    <div class="col-1"> *@
                                        @* <Button Danger Type="@ButtonType.Primary" Icon="@IconType.Outline.Delete" OnClick="()=>DeleteCustomeField(customeField)"/> *@
                                @*     </div>
                                </div>
                               </div> *@
                       @*  } *@
              
                        @* <div style="padding:0px 3px;">
                            <Button OnClick="AddCustomeField">@L["AddItemStyleButton"]</Button>
                        </div> *@
                    </div>
                </div>
                    <div class="col-12 row">
                        <div class="col-2"></div>
                        <div class="col-10">
                            <Button Class="btn btn-outline-primary" @onclick="AddCustomeField">@L["AddItemStyleButton"]</Button>
                        </div>
                    </div>
                <div class="col-12 row">
                    <div class="col-2">
                        <label>@L["PriceAndInventory"]</label>
                    </div>
                    <div class="col-10">
                        <div>
                     @*   <Table TItem="CreateItemDetailsDto"
                                   DataSource="@itemDetailList"
                                   Size="TableSize.Small"
                                   Bordered=@true
                                   HidePagination="@true">
                                <PropertyColumn Title="@L["ItemName"]" Property="item=>item.ItemName"/>
                                <PropertyColumn Title="@L["SKU"]" Property="item=>item.Sku">
                                    <Input @bind-Value="@context.Sku"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["SellingPrice"]" Property="item=>item.SellingPrice">
                                    <Input @bind-Value="@context.SellingPrice"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["GroupBuyPrice"]" Property="item=>item.GroupBuyPrice">
                                    <Input @bind-Value="@context.GroupBuyPrice"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["InventoryAccount"]" Property="item=>item.InventoryAccount">
                                    <Input @bind-Value="@context.InventoryAccount"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["SaleableQuantity"]" Property="item=>item.SaleableQuantity">
                                    <Input @bind-Value="@context.SaleableQuantity"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["PreorderQuantity"]" Property="item=>item.PreOrderableQuantity">
                                    <Input @bind-Value="@context.PreOrderableQuantity"></Input>
                                </PropertyColumn>
                                <PropertyColumn Title="@L["SaleablePreorderQuantity"]" Property="item=>item.SaleablePreOrderQuantity">
                                    <Input @bind-Value="@context.SaleablePreOrderQuantity"></Input>
                                </PropertyColumn>
                            </Table> *@

                            <Table>
                                <TableHeader>
                                    <TableRow>
                                        <TableHeaderCell Class="text-center">@L["ItemName"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["SKU"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["SellingPrice"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["GroupBuyPrice"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["InventoryAccount"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["SaleableQuantity"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["PreorderQuantity"]</TableHeaderCell>
                                        <TableHeaderCell Class="text-center">@L["SaleablePreorderQuantity"]</TableHeaderCell>
                                    </TableRow>
                                </TableHeader>
                                <TableBody>
                                    @foreach(var item in itemDetailList)
                                    {
                                        <TableRow>
                                            <TableRowCell>@item.ItemName</TableRowCell>
                                            <TableRowCell>
                                                <input class="form-control form-control-sm" style="min-width: 100px;" @bind-value="@item.Sku" />
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.SellingPrice"></NumericEdit>
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.GroupBuyPrice"></NumericEdit>
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.InventoryAccount"></NumericEdit>
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.SaleableQuantity"></NumericEdit>
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.PreOrderableQuantity"></NumericEdit>
                                            </TableRowCell>
                                            <TableRowCell>
                                                <NumericEdit Class="form-control form-control-sm" @bind-Value="@item.SaleablePreOrderQuantity"></NumericEdit>
                                            </TableRowCell>
                                        </TableRow>
                                    }
                                </TableBody>
                            </Table>

                        </div>
                
                    </div>
                </div>
                <div class="col-12 row">
                    <div class="col-2">
                        <label>@L["CommodityAttributes"]</label>
                    </div>
                    <div class="col-10">
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["TimeLimitPeriod"]</label>
                            </div>
                            <div class="col-3">
                                <DateEdit  @bind-Date="createItemDto.LimitAvaliableTimeStart" Style="width:100%" Placeholder="@L["StartDate"].ToString()" TValue="DateTime"  />
                            </div>
                            <div class="col-3">
                                <DateEdit @bind-Date="createItemDto.LimitAvaliableTimeEnd" Style="width:100%" Placeholder="@L["EndDate"].ToString()" TValue="DateTime"  />
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["LimitQuantity"]</label>
                            </div>
                            <div class="col-3">
                                <InputNumber class="form-control" TValue="int" @bind-Value="@createItemDto.LimitQuantity" />
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["ShareProfit"]</label>
                            </div>
                            <div class="col-3">
                                <InputNumber class="form-control" TValue="float" @bind-Value="@createItemDto.ShareProfit" />
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["FreeShipping"]</label>
                            </div>
                            <div class="col-3">
                                <Switch TValue="bool" @bind-Checked="@createItemDto.IsFreeShipping"></Switch>
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["Returnable"]</label>
                            </div>
                            <div class="col-3">
                                <Switch TValue="bool" @bind-Checked="createItemDto.IsReturnable"></Switch>
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["ShippingMethod"]</label>
                            </div>
                            <div class="col-3">
                                <SelectList TItem="EnumValueDto"
                                            TValue="int"
                                            Data="@shippingMethods"
                                            TextField="@((item)=>item.Text)"
                                            ValueField="@((item)=>item.Id)"
                                            @bind-SelectedValue="@createItemDto.ShippingMethodId"
                                             />
                            </div>
                        </div>
                        <div class="col-12 row">
                            <div class="col-3">
                                <label>@L["TaxType"]</label>
                            </div>
                            <div class="col-3">
                                <SelectList TItem="EnumValueDto"
                                            TValue="int"
                                            Data="@taxTypes"
                                            TextField="@((item)=>item.Text)"
                                            ValueField="@((item)=>item.Id)"
                                            @bind-SelectedValue="@createItemDto.TaxTypeId"
                                             />
                            </div>
                        </div>
                    </div>
                </div>
                <div style="text-align: right; margin-top:5px ;">
                    <Button Type="@ButtonType.Button" class="btn btn-danger me-1">@L["Cancel"]</Button>
                    <Button Type="@ButtonType.Button" class="btn btn-primary me-1" Clicked="CreateEntityAsync">
                        <i class="fa fa-check"></i>
                        @L["Save"]</Button>
                    <Button Type="@ButtonType.Button" class="btn btn-secondary me-1">@L["Preview"]</Button>
                </div>
            </div>
        </CardBody>
    </Card>
</div>

@code {
    private FilePicker filePickerCustom;
}