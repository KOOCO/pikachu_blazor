@page "/Items/New"
@using Pikachu.Items;
@using Pikachu.Localization;
@using Microsoft.Extensions.Localization;
@inject IItemAppService AppService
@inject NavigationManager NavigationManager
@inject IStringLocalizer<PikachuResource> L


<style>
    .row {
        margin-top: 10px;
    }

    .site-tag-plus {
        background: #fff;
        border-style: dashed;
    }
</style>

<div class="col-12">
    <div>
        <h3>@L["NewItem"]</h3>
    </div>
    <div>
        <div Class=" col-12 row">
            <div Class="col-2">
                <fieldLabel>@L["ItemName"]</fieldLabel>
            </div>
            <div Class="col-9">
                <FormItem Label="Username">
                    <Input @bind-Value="@NewEntity.ItemName" MaxLength="@maxtextCount" />
                </FormItem>
            </div>
            <div Class="col-1">
                <fpan>@(maxtextCount - NewEntity.ItemName.Count())/@maxtextCount</fpan>
            </div>
        </div>
        <div Class="col-12 row">
            <div Class="col-2">
                <fieldLabel>@L["ItemImage"]</fieldLabel>
            </div>
            <div Class="col-10">
                <AntDesign.Upload Name="@L["ItemImage"]"
                @bind-FileList="fileList"
                                  ShowButton="fileList?.Count < 8"
                                  ListType="picture-card"
                                  OnPreview="(file)=> {
                                                 Console.WriteLine(file.FileName);
                                                 Console.WriteLine(file.Url);
                                                 previewVisible = true;
                                                 previewTitle = file.FileName;
                                                 imgUrl = file.Url;
                                                 }"
                                  OnChange="HandleChange">
                    <div>
                        <Icon Type="plus"></Icon>
                        <div className="ant-upload-text">Upload</div>
                    </div>

                </AntDesign.Upload>
                <Modal Visible="previewVisible"
                       Title="previewTitle"
                       OnCancel="()=> previewVisible=false">
                    <img style="width: 100%" src="@imgUrl" />
                </Modal>
            </div>
        </div>
        <div Class=" col-12 row">
            <div Class="col-2">
                <fieldLabel>@L["ItemDescription"]</fieldLabel>
            </div>
            <div Class="col-9">
                <div class="col-12">
                    <fieldLabel></fieldLabel>
                    <Input Placeholder="@L["ItemDescription"]" @bind-Value="@NewEntity.ItemDescriptionTitle" />
                </div>
                <div Class=" col-12">
                    @*<RichTextEdit @ref="richTextEditRef"
                                  Theme="RichTextEditTheme.Snow"
                                  ContentChanged="@OnContentChanged"
                                  PlaceHolder="Type your post here..."
                                  ReadOnly="@readOnly"
                                  SubmitOnEnter="false"
                                  ToolbarPosition="Placement.Bottom">
                        <editor>My example content</editor>
                        <Toolbar>
                            <RichTextEditToolbarGroup>
                                <RichTextEditToolbarButton Action="RichTextEditAction.Bold" />
                                <RichTextEditToolbarButton Action="RichTextEditAction.Italic" />
                                <RichTextEditToolbarSelect Action="RichTextEditAction.Size">
                                    <RichTextEditToolbarSelectItem Value="small" />
                                    <RichTextEditToolbarSelectItem Selected />
                                    <RichTextEditToolbarSelectItem Value="large" />
                                    <RichTextEditToolbarSelectItem Value="huge">Very Big</RichTextEditToolbarSelectItem>
                                </RichTextEditToolbarSelect>
                                <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="ordered" />
                                <RichTextEditToolbarButton Action="RichTextEditAction.List" Value="bullet" />
                                <RichTextEditToolbarButton Action="RichTextEditAction.Image" Value="Image" />
                            </RichTextEditToolbarGroup>
                        </e>
                    </RichTextEdit>*@
                </div>
            </div>
            <div Class="col-1">
                <span>
                    @(maxtextCount - NewEntity.ItemDescriptionTitle.Count())/@maxtextCount
                </span>
            </div>
        </div>
        <div Class=" col-12 row">
            <div Class="col-2">
                <fieldLabel>@L["ItemTags"]</fieldLabel>
            </div>
            <div Class="col-10">
                <div>
                    <Tag>Unremovable</Tag>
                    @foreach (var item in lstTags)
                    {
                        <Tag @key="item" Closable OnClose="()=>OnClose(item)">@item</Tag>
                    }
                    @if (inputVisible)
                    {
                        <Input @ref="_inputRef" Style="width: 78px" Size="small" @bind-Value="_inputValue" OnBlur="HandleInputConfirm" OnPressEnter="HandleInputConfirm" AutoFocus />
                    }
                    else
                    {
                        <Tag Class="site-tag-plus" OnClick="@(() => inputVisible = !inputVisible)">
                            <Icon Type="plus" />New Tag
                        </Tag>
                    }
                </div>
            </div>
        </div>
    </div>
</div>



<Card>
    <CardBody>
        <Validations ValidateOnLoad="false">



        </Validations>
    </CardBody>
    <CardFooter>
        <Button Type="@ButtonType.Link" To="Items" Class="mr-3">
            @L["Cancel"]
        </Button>
        <Button Type="@ButtonType.Primary" HtmlType="submit" PreventDefaultOnSubmit="true" Clicked="CreateEntityAsync">
            @L["Save"]
        </Button>
    </CardFooter>
</Card>

@code {
    private bool inputVisible { get; set; } = false;
    string _inputValue;
    Input<string> _inputRef;
    List<string> lstTags { get; set; } = new List<string>();

    protected override void OnInitialized()
    {
        lstTags.Add("Tag 2");
        lstTags.Add("Tag 3");
    }

    void ValueChange(ChangeEventArgs value)
    {
        lstTags.Add(value.Value.ToString());
    }

    void OnClose(string item)
    {
        lstTags.Remove(item);
    }

    void HandleInputConfirm()
    {
        if (string.IsNullOrEmpty(_inputValue))
        {
            CancelInput();
            return;
        }

        string res = lstTags.Find(s => s == _inputValue);

        if (string.IsNullOrEmpty(res))
        {
            lstTags.Add(_inputValue);
        }

        CancelInput();
    }

    void CancelInput()
    {
        this._inputValue = "";
        this.inputVisible = false;
    }

}
