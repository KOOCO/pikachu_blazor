@page "/Items"

@using Volo.Abp.Application.Dtos
@using Kooco.Pikachu.Items.Dtos
@using Kooco.Pikachu.Items
@using Kooco.Pikachu.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using System.Text.Json;
@using System.ComponentModel
@using Blazorise.Components
@using Blazorise.LoadingIndicator;
@using System.Globalization

@inject IStringLocalizer<PikachuResource> L
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime;
@attribute [Authorize]

<style>
    .card-view-card {
        transition: transform 0.2s, box-shadow 0.2s;
        height: 100%;
        border-radius: 0.5rem;
    }
    
    .card-view-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .card-view-header {
        background-color: #f8f9fa;
        border-bottom: 1px solid #eaeaea;
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        padding: 0.5rem;
    }
    
    .card-view-body {
        padding: 0.5rem;
        font-size: 0.85rem;
    }
    
    .card-title {
        font-weight: 500;
        overflow: hidden;
        text-overflow: ellipsis;
        white-space: nowrap;
        max-width: 180px;
        font-size: 0.9rem;
    }
    
    .card-description {
        min-height: 36px;
        overflow: hidden;
        text-overflow: ellipsis;
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        margin-bottom: 0.3rem;
        font-size: 0.85rem;
        line-height: 1.2;
    }
    
    .text-secondary {
        color: #6c757d;
    }
    
    .card-label {
        min-width: 70px;
        display: inline-block;
        color: #6c757d;
    }

    .view-toggle-btn {
        margin-right: 10px;
    }
    
    .card-image-container {
        aspect-ratio: 1/1;
        display: flex;
        align-items: center;
        justify-content: center;
        overflow: hidden;
        padding: 0;
        background-color: #f8f9fa;
        border-bottom: 1px solid #eaeaea;
    }
    
    .card-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        display: block;
    }
    
    .card-image-contain {
        object-fit: contain;
    }
    
    .card-image-cover {
        object-fit: cover;
    }
    
    .no-image-placeholder {
        height: 120px;
        width: 120px;
        background-color: #e9ecef;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 0.25rem;
    }
    
    .no-image-icon {
        font-size: 3rem;
        color: #adb5bd;
    }
</style>

@if (Loading)
{
                                                <Skeleton Animation="SkeletonAnimation.Pulse">
                                                    <div class="row">
                                                        <div class="col-4">
                                                                <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                        </div>
                                                        <div class="col-8 text-lg-end">
                                                            <Div Class="d-inline-block">
                                                                    <SkeletonItem ColumnSize="ColumnSize.Is2" Class="mb-2" />
                                                            </Div>
                                                            <div class="custom-check-group me-1">
                                                                    <SkeletonItem ColumnSize="ColumnSize.Is2" Class="mb-2" />
                                                            </div>
                                                                <SkeletonItem ColumnSize="ColumnSize.Is2" Class="mb-2" />
                                                             <SkeletonItem ColumnSize="ColumnSize.Is2" Class="mb-2" />
                                                        </div>
                                                    </div>
                                                    <Card>
                                                        <CardBody>
                                                            <Div Class="form-group">
                                                                    <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                            </Div>
                                                            <Div Class="row">
                                                                <Div Class="col-3">
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                                </Div>
                                                                <Div Class="col-3">
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                                </Div>
                                                                <Div Class="col-2">
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                                </Div>
                                                                <Div Class="col-2">
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
                                                                </Div>
                                                                <Div Class="col-2 d-flex align-items-end">
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is6" Class="mb-2" />
                                                                        <SkeletonItem ColumnSize="ColumnSize.Is6" Class="mb-2" />
                                                                </Div>
                                                            </Div>
                                                        </CardBody>
                                                    </Card>
                                                    </Skeleton>
                                                    <Card>
                                                        <CardBody>
                                                            <Skeleton Animation="SkeletonAnimation.Pulse">
                                                                <!-- For example, 5 horizontal bars to represent the table rows -->
                                                                <SkeletonTable Rows="10" Columns="7" />
                                                            </Skeleton>
                                                        </CardBody>
                                                    </Card>
 

}
<div style="@($"display: {(Loading ? "none" : "block")};")">
<div class="row">
    <div class="col-4">
        <h3>@L["Items"]</h3>
    </div>
    <div class="col-8 text-lg-end">
        <Div Class="d-inline-block me-2">
            <ButtonGroup>
                <Button Size="Size.Small" Color="@(IsCardView? Color.Secondary: Color.Primary)" Clicked="@(() => ToggleViewMode(false))">
                    <i class="fas fa-table me-1"></i>@L["GridView"]
                </Button>
                <Button Size="Size.Small" Color="@(IsCardView? Color.Primary: Color.Secondary)" Clicked="@(() => ToggleViewMode(true))">
                    <i class="fas fa-th-large me-1"></i>@L["CardView"]
                </Button>
            </ButtonGroup>
        </Div>
        <Div Class="d-inline-block">
            <Span>@L["Display"]</Span>
            <Div Class="d-inline-block">
                <Select TValue="int" SelectedValue="@Filters.MaxResultCount" SelectedValueChanged="@OnPageSizeChanged" Class="form-select-sm bg-white">
                    <SelectItem TValue="int" Value="10">10</SelectItem>
                    <SelectItem TValue="int" Value="25">25</SelectItem>
                    <SelectItem TValue="int" Value="50">50</SelectItem>
                    <SelectItem TValue="int" Value="100">100</SelectItem>
                </Select>
            </Div>
            <Span>@L["Results"]</Span>
        </Div>
        <div class="custom-check-group me-1">
            <input type="checkbox" class="form-check-input" checked="@IsAllSelected" @onchange="HandleSelectAllChange"></input>
            <Label Class="form-label">@L["SelectAll"]</Label>
        </div>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="CreateNewItem">
            <i class="fa fa-plus"></i>
            @L["NewItem"]
        </Button>
        <Button Color="Color.Secondary" Size="Size.Small" Clicked="CopyAsync" Disabled="@(ItemList.Count(x => x.IsSelected) != 1)">
            @L["CopyItem"]
        </Button>
         <Button Color="Color.Secondary" Size="Size.Small" Clicked="DownloadExcel" Disabled="@(ItemList.Count(x => x.IsSelected)<1)">
            @L["DownloadExcel"]
        </Button>
       <Button Color="Color.Info" Size="Size.Small" Clicked="() => ShowImportModal = true">
    <Icon Name="IconName.File" />
    @L["ImportItems"]
</Button>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="DeleteSelectedAsync">
            @L["DeleteSelected"]
        </Button>
    </div>
</div>
<Card>
    <CardBody>
        <Div Class="form-group">
            <Label Class="form-label">@L["EnterItemName"]</Label>
            <Autocomplete TItem="KeyValueDto"
                          TValue="Guid ?"
                          Data="@ItemLookup"
                          TextField="@((item) => item.Name)"
                          ValueField="@((item) => item.Id)"
                          Placeholder="@L["Search"]"
                          Filter="AutocompleteFilter.StartsWith"
                          CustomFilter="@((item, searchValue) => item.Name.IndexOf(searchValue, 0, StringComparison.CurrentCultureIgnoreCase) >= 0)"
                          Immediate="true"
                          @bind-SelectedValue="Filters.ItemId"
                          @ref="Autocomplete">
                <NotFoundContent> @L["NotFound"] </NotFoundContent>
            </Autocomplete>
        </Div>
        <Div Class="row">
            <Div Class="col-3">
                <Label Class="form-label">@L["MinAvailableTime"]</Label>
                  <DateEdit Date="Filters.MinAvailableTime" DateChanged="(e) => OnDateChange(e, Filters.MaxAvailableTime)" TValue="DateTime?" />
                @* <InputDate  @bind-Value:format="CultureInfo.CurrentCulture" class="form-control form-control-sm" @bind-Value="Filters.MinAvailableTime"></InputDate> *@
            </Div>
            <Div Class="col-3">
                <Label Class="form-label">@L["MaxAvailableTime"]</Label>
                  <DateEdit Date="Filters.MaxAvailableTime" DateChanged="(e) => OnDateChange(Filters.MinAvailableTime, e)" TValue="DateTime?" />
                @* <InputDate class="form-control form-control-sm" @bind-Value="Filters.MaxAvailableTime"></InputDate> *@
            </Div>
            <Div Class="col-2">
                <Label Class="form-label">@L["FreeShipping"]</Label>
                <Select TValue="bool?" @bind-SelectedValue="Filters.IsFreeShipping" Class="form-select form-select-sm">
                    <SelectItem TValue="bool?" Value="null"></SelectItem>
                    <SelectItem TValue="bool?" Value="true">@L["Yes"]</SelectItem>
                    <SelectItem TValue="bool?" Value="false">@L["No"]</SelectItem>
                </Select>
            </Div>
            <Div Class="col-2">
                <Label Class="form-label">@L["Availability"]</Label>
                <Select TValue="bool?"
                        @bind-SelectedValue="Filters.IsAvailable"
                        Class="form-select form-select-sm">
                    <SelectItem TValue="bool?" Value="null"></SelectItem>
                    <SelectItem TValue="bool?" Value="true">@L["Yes"]</SelectItem>
                    <SelectItem TValue="bool?" Value="false">@L["No"]</SelectItem>
                </Select>
            </Div>
            <Div Class="col-2 d-flex align-items-end">
                <Button Class="btn btn-sm btn-primary me-1" Clicked="FilterAsync">
                    <i class="fas fa-filter"></i>
                    @L["Filter"]
                </Button>
                <Button Class="btn btn-sm btn-outline-primary" Clicked="ResetAsync">
                    <i class="fas fa-undo"></i>
                    @L["Reset"]
                </Button>
            </Div>
        </Div>
    </CardBody>
</Card>
<Card>
    <CardBody>
        @if (IsCardView)
        {
                                                            <div class="row g-2">
                                                                @foreach (var item in ItemList)
                                                                {
                                                                                                                    <div class="col-6 col-sm-4 col-md-3 col-lg-2 mb-2">
                                                                                                                        <Card Class="card-view-card">
                                                                                                                            <CardHeader Class="card-view-header">
                                                                                                                                <div class="d-flex justify-content-between align-items-center">
                                                                                                                                    <Button Class="btn-link hyperlink p-0 card-title" Clicked="() => OnEditItem(item)">@item.ItemName</Button>
                                                                                                                                    <InputCheckbox class="form-check-input" @bind-Value="@item.IsSelected" />
                                                                                                                                </div>
                                                                                                                            </CardHeader>
                                                                                                                            <div class="card-image-container">
                                                                                                                                @if (ItemImageUrls.ContainsKey(item.Id) && !string.IsNullOrEmpty(ItemImageUrls[item.Id]))
                                                                                                                                {
                                                                                                                                                                        <img src="@ItemImageUrls[item.Id]" class="card-image @(UseImageCover ? "card-image-cover" : "card-image-contain")" alt="@item.ItemName" />
                                                                                                                                }
                                                                                                                                else
                                                                                                                                {
                                                                                                                                                                        <div class="no-image-placeholder">
                                                                                                                                                                            <i class="fas fa-image no-image-icon"></i>
                                                                                                                                                                        </div>
                                                                                                                                }
                                                                                                                            </div>
                                                                                                                            <CardBody Class="card-view-body">
                                                                                                                                <p class="text-muted mb-1 card-description">
                                                                                                                                    <small class="text-secondary">@L["ItemDescription"]:</small> @item.ItemDescriptionTitle
                                                                                                                                </p>
                                                                                                                
                                                                                                                                <div class="d-flex mb-1">
                                                                                                                                    <div class="me-2">
                                                                                                                                        <small class="card-label">@L["CreatedTime"]:</small>
                                                                                                                                    </div>
                                                                                                                                    <div>
                                                                                                                                        <small>@item.CreationTime.ToShortDateString()</small>
                                                                                                                                    </div>
                                                                                                                                    @if (item.IsFreeShipping)
                                                                                                                                    {
                                                                                                                                                                                    <div class="ms-auto">
                                                                                                                                                                                        <Badge Color="Color.Success" Size="Size.Small">@L["FreeShipping"]</Badge>
                                                                                                                                                                                    </div>
                                                                                                                                    }
                                                                                                                                </div>
                                                                                                                
                                                                                                                                <div class="d-flex mb-1">
                                                                                                                                    <div class="me-2">
                                                                                                                                        <small class="card-label">@L["ShareProfit"]:</small>
                                                                                                                                    </div>
                                                                                                                                    <div>
                                                                                                                                        <small>@item.ShareProfit</small>
                                                                                                                                    </div>
                                                                                                                                </div>
                                                                                                                
                                                                                                                                <div class="d-flex align-items-center">
                                                                                                                                    <div class="me-2">
                                                                                                                                        <small class="card-label">@L["Availability"]:</small>
                                                                                                                                    </div>
                                                                                                                                    <Switch TValue="bool"
                                                                                                                                            Checked="@item.IsItemAvaliable"
                                                                                                                                            CheckedChanged="@(() => OnItemAvaliablityChange(item.Id))" 
                                                                                                                                            Size="Size.Small" />
                                                                                                                                </div>
                                                                                                                            </CardBody>
                                                                                                                        </Card>
                                                                                                                    </div>
                                                                }
                                                            </div>
        }
        else
        {
                                                            <DataGrid TItem="ItemListDto"
                                                                  Data="ItemList"
                                                                  ReadData="OnDataGridReadAsync"
                                                                  TotalItems="Total"
                                                                  ShowPager="true"
                                                                  PageSize="Filters.MaxResultCount"
                                                                  SortChanged="OnSortChange"
                                                                  Hoverable>
                                                            <DataGridColumns>
                                                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                                                    <DisplayTemplate>
                                                                        <InputCheckbox class="form-check-input"
                                                                                       @bind-Value="@context.IsSelected" />
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                                                <DataGridColumn Field="@nameof(ItemListDto.ItemName)"
                                                                                Caption="@L["ItemName"]">
                                                                    <DisplayTemplate>
                                                                        <Button Class="btn-link hyperlink" Clicked="() => OnEditItem(context)">@context.ItemName</Button>
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                                                <DataGridColumn Field="@nameof(ItemListDto.ItemDescriptionTitle)"
                                                                                Caption="@L["ItemDescription"]">
                                                                </DataGridColumn>
                                                                @*    <DataGridColumn Caption="@L["TimeLimitPeriod"]"
                                Sortable="false">
                    <DisplayTemplate>
                        @context.LimitAvaliableTimeStart.ToShortDateString() - @context.LimitAvaliableTimeEnd.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn> *@
                                                                <DataGridColumn Field="@nameof(ItemListDto.CreationTime)"
                                                                                Caption="@L["CreatedTime"]">
                                                                    <DisplayTemplate>
                                                                        @context.CreationTime.ToShortDateString()
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                                                <DataGridColumn Field="@nameof(ItemListDto.IsFreeShipping)"
                                                                                Caption="@L["FreeShipping"]">
                                                                    <DisplayTemplate>
                                                                        @if (context.IsFreeShipping)
                                                                        {
                                                                                                                            <i class="fa fa-check bg-success text-light p-1"></i>
                                                                        }
                                                                        else
                                                                        {
                                                                                                                            <i class="fa fa-times bg-danger text-light p-1"></i>
                                                                        }
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                                                <DataGridColumn Field="@nameof(ItemListDto.ShareProfit)"
                                                                                Caption="@L["ShareProfit"]">
                                                                </DataGridColumn>
                                                                <DataGridColumn Field="@nameof(ItemListDto.IsItemAvaliable)"
                                                                                Caption="@L["Availability"]">
                                                                    <DisplayTemplate>
                                                                        <Switch TValue="bool"
                                                                                Checked="@context.IsItemAvaliable"
                                                                                CheckedChanged="@(() => OnItemAvaliablityChange(context.Id))" />
                                                                    </DisplayTemplate>
                                                                </DataGridColumn>
                                                            </DataGridColumns>
                                                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                                                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                                                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                                                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                                                              <TotalItemsTemplate>
                                                                 
                @(getTotalItems())
            </TotalItemsTemplate>
                                                        </DataGrid>
        }
    </CardBody>
</Card>
<Modal @bind-Visible="ShowImportModal" Size="ModalSize.Large">
     <ModalContent IsCentered="true">
    <ModalHeader>
        <strong>@L["ImportItems"]</strong>
    </ModalHeader>

    <ModalBody>
        <Alert  Color="Color.Info" Visible>
            <AlertMessage>
            <p><strong>@L["Instructions"]:</strong></p>
            </AlertMessage>
            <AlertDescription>           <ul class="mb-0">
                <li>@L["DownloadTemplateInstruction"]</li>
                <li>@L["FillTemplateInstruction"]</li>
                            <li>@L["ItemDetailsInstructions"]</li>
                            <li>@L["TaxTypesInstructions"]</li>
                <li>@L["UploadTemplateInstruction"]</li>
            </ul>
            </AlertDescription>
 
        </Alert>

        <div class="my-3">
            <Button Color="Color.Secondary" Clicked="DownloadTemplate">
                <Icon Name="IconName.FileDownload" />
                @L["DownloadTemplate"]
            </Button>
        </div>

        <InputFile OnChange="OnFileSelected" />

        @if (UploadInProgress)
        {
            <div class="mt-3">
                <LoadingIndicator Visible="true" />
            </div>
        }
    </ModalBody>

    <ModalFooter>
        <Button Color="Color.Secondary" Clicked="() => ShowImportModal = false">
            <Icon Name="IconName.Times" />
            @L["Close"]
        </Button>
    </ModalFooter>
    </ModalContent>
</Modal>


</div>
@code {

}