@page "/Items"

@using Volo.Abp.Application.Dtos
@using Kooco.Pikachu.Items.Dtos
@using Kooco.Pikachu.Items
@using Kooco.Pikachu.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using System.Text.Json;
@using System.ComponentModel
@using Blazorise.Components
@using Blazorise.LoadingIndicator;

@inject IStringLocalizer<PikachuResource> L
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime;

<LoadingIndicator @ref="Loading" FullScreen></LoadingIndicator>
<div class="row">
    <div class="col-6">
        <h3>@L["Items"]</h3>
    </div>
    <div class="col-6 text-lg-end">
        <div class="custom-check-group me-1">
            <input type="checkbox" class="form-check-input" checked="@IsAllSelected" @onchange="HandleSelectAllChange"></input>
            <Label Class="form-label">@L["SelectAll"]</Label>
        </div>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="CreateNewItem">
            <i class="fa fa-plus"></i>
            @L["NewItem"]
        </Button>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-secondary">@L["CopyItem"]</Button>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="DeleteSelectedAsync">
            @L["DeleteSelected"]
        </Button>
    </div>
</div>
<Card>
    <CardBody>
        <DataGrid TItem="ItemListDto"
                  Data="ItemList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="Total"
                  ShowPager="true"
                  PageSize="PageSize"
                  RowDoubleClicked="OnEditItem"
                  SortChanged="OnSortChange">
            <DataGridColumns>
                <DataGridColumn Caption="@L["Select"]" Width="30px">
                    <DisplayTemplate>
                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.ItemName)"
                                Caption="@L["ItemName"]">
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.ItemDescriptionTitle)"
                                Caption="@L["ItemDescription"]">
                </DataGridColumn>
                <DataGridColumn Caption="@L["TimeLimitPeriod"]"
                                Sortable="false">
                                <DisplayTemplate>
                                    @context.LimitAvaliableTimeStart.ToShortDateString() - @context.LimitAvaliableTimeEnd.ToShortDateString()
                                </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.CreationTime)"
                                Caption="@L["CreatedTime"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.IsFreeShipping)"
                                Caption="@L["FreeShipping"]">
                    <DisplayTemplate>
                        @if (context.IsFreeShipping)
                        {
                            <i class="fa fa-check bg-success text-light p-1"></i>
                        }
                        else
                        {
                            <i class="fa fa-times bg-danger text-light p-1"></i>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.ShareProfit)"
                                Caption="@L["ShareProfit"]">
                </DataGridColumn>
                <DataGridColumn Field="@nameof(ItemListDto.IsItemAvaliable)"
                                Caption="@L["Availability"]">
                        <DisplayTemplate>
                            <Switch TValue="bool" Checked="@context.IsItemAvaliable" CheckedChanged="@(() => OnItemAvaliablityChange(context.Id))"></Switch>
                        </DisplayTemplate>
                </DataGridColumn>
   
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
@code {

}