@page "/Items"

@using Volo.Abp.Application.Dtos
@using Kooco.Pikachu.Items.Dtos
@using Kooco.Pikachu.Items
@using Kooco.Pikachu.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp
@using System.Text.Json;
@using System.ComponentModel
@using Blazorise.Components

@inject IStringLocalizer<PikachuResource> L
@inject NavigationManager NavigationManager

<div class="col-12 row">
    <div class="col-6">
        <h3>@L["Items"]</h3>
    </div>
    <div class="col-6 d-flex flex-row-reverse">
        <Button Danger Type="@ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="DeleteSelectedAsync">
                @L["DeleteItem"]
        </Button>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-secondary me-1">@L["CopyItem"]</Button>
        <Button Type="@ButtonType.Button" Class="btn btn-sm btn-primary me-1" Clicked="CreateNewItem">
            <i class="fa fa-plus"></i>    
            @L["NewItem"]
        </Button>
        <div class="me-2 p-2">
            <input type="checkbox" class="me-1" style="height: 15px; width: 15px;" checked="@IsAllSelected" @onchange="HandleSelectAllChange"></input>
            <Label Class="form-label">@L["SelectAll"]</Label>
        </div>
    </div>
</div>
<Card Class="mt-2">
    <CardBody>
        <DataGrid TItem="ItemDto"
                  Data="ItemList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="Total"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridColumn TItem="ItemDto" Caption="@L["Select"]">
                    <DisplayTemplate>
                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.ItemName)"
                                Caption="@L["ItemName"]">
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.ItemDescriptionTitle)"
                                Caption="@L["ItemDescription"]">
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Caption="@L["TimeLimitPeriod"]">
                                <DisplayTemplate>
                                    @context.LimitAvaliableTimeStart.ToShortDateString() - @context.LimitAvaliableTimeEnd.ToShortDateString()
                                </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.CreationTime)"
                                Caption="@L["CreatedTime"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToShortDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.IsFreeShipping)"
                                Caption="@L["FreeShipping"]">
                    <DisplayTemplate>
                        @if (context.IsFreeShipping)
                        {
                            <i class="fa fa-check bg-success text-light p-1"></i>
                        }
                        else
                        {
                            <i class="fa fa-times bg-danger text-light p-1"></i>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.ShareProfit)"
                                Caption="@L["ShareProfit"]">
                </DataGridColumn>
                <DataGridColumn TItem="ItemDto"
                                Field="@nameof(ItemDto.IsItemAvaliable)"
                                Caption="@L["Availability"]">
                        <DisplayTemplate>
                            <Switch TValue="bool" Checked="@context.IsItemAvaliable" CheckedChanged="@(() => OnItemAvaliablityChange(context.Id))"></Switch>
                        </DisplayTemplate>
                </DataGridColumn>
   
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
@code {

}