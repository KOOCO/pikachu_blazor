@page "/Website-Settings"
@using Kooco.Pikachu.Permissions
@using Kooco.Pikachu.WebsiteManagement
@attribute [Authorize(PikachuPermissions.WebsiteSettings.Default)]
@inherits PikachuComponentBase
@inject IWebsiteSettingsAppService WebsiteSettingsAppService
@inject NavigationManager NavigationManager

<Div>
    <Row>
        <Column ColumnSize="ColumnSize.Is6">
            <h3 class="text-dark">@L["WebsiteSettings"]</h3>
        </Column>
        @if (CanCreateWebsiteSettings)
        {
            <Column ColumnSize="ColumnSize.Is6" Class="text-end">
                <PikachuButton Class="pk-btn-sm pk-btn-primary" Clicked="@(() => NavigationManager.NavigateTo("Website-Settings/Create"))">
                    <Icon Name="IconName.Add"></Icon>
                    @L["AddNew"]
                </PikachuButton>
            </Column>
        }
    </Row>
</Div>
<Card>
    <CardBody>
        <Div Class="input-group">
            <TextEdit @bind-Text="Filters.Filter" />
            <Button Color="Color.Primary" Clicked="ApplyFilters">
                <Icon Class="fas fa-search"></Icon>
            </Button>
        </Div>
    </CardBody>
</Card>
<Card>
    <CardBody>
        <DataGrid TItem="WebsiteSettingsDto"
                  Data="WebsiteSettingsList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
                  CurrentPage="CurrentPage"
                  Hoverable
                  Narrow
                  Responsive
                  Striped>
            <DataGridColumns>
                <DataGridColumn Width="150px"
                                TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.Id)"
                                Sortable="false"
                                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditWebsiteSettings)
                                {
                                    <DropdownItem Clicked="() => Edit(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteWebsiteSettings)
                                {
                                    <DropdownItem Clicked="() => DeleteAsync(context)">
                                        @L["Delete"]
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.StoreTitle)"
                                Caption="@L["StoreTitle"]">
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.NotificationBar)"
                                Caption="@L["NotificationBar"]">
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.Facebook)"
                                Caption="@L["Facebook"]">
                    <DisplayTemplate>
                        <Copy Text="@context.Facebook" ShouldDisplayText="false" IsLink></Copy>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.Instagram)"
                                Caption="@L["Instagram"]">
                    <DisplayTemplate>
                        <Copy Text="@context.Instagram" ShouldDisplayText="false" IsLink></Copy>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.Line)"
                                Caption="@L["Line"]">
                    <DisplayTemplate>
                        <Copy Text="@context.Line" ShouldDisplayText="false" IsLink></Copy>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.ReturnExchangePolicy)"
                                Caption="@L["ReturnExchangePolicy"]">
                </DataGridColumn>
                <DataGridColumn TItem="WebsiteSettingsDto"
                                Field="@nameof(WebsiteSettingsDto.ReturnExchangePolicy)"
                                Caption="@L["Logo"]"
                                HeaderTextAlignment="TextAlignment.Center"
                                TextAlignment="TextAlignment.Center">
                    <DisplayTemplate>
                        @{
                            var url = !context.LogoUrl.IsNullOrWhiteSpace() ? context.LogoUrl : "https://e7.pngegg.com/pngimages/799/987/png-clipart-computer-icons-avatar-icon-design-avatar-heroes-computer-wallpaper-thumbnail.png";
                        }
                        <Div Class="text-center">
                            <img class="img-fluid" style="height: 40px;" src="@url" alt="Alternate Text" />
                        </Div>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
