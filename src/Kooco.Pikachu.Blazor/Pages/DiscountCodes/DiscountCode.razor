@page "/discount-code"
@attribute [Authorize]
@using Kooco.Pikachu.Localization
@using Kooco.Pikachu.DiscountCodes
@using Kooco.Pikachu.Permissions
@using Microsoft.Extensions.Localization
@inherits PikachuComponentBase
@inject IDiscountCodeAppService DiscountCodeAppService
@inject IMessageService _message
@inject NavigationManager NavigationManager

<Div>
    <Row>
        <Column ColumnSize="ColumnSize.Is6">
            <h3 class="text-dark">@L["DiscountCodes"]</h3>
        </Column>
        <Column ColumnSize="ColumnSize.Is6" TextAlignment="TextAlignment.End">
            <Button  Type="ButtonType.Button" Size="Size.Small" Color="Color.Primary" Clicked="CreateNewDiscountCode">
                <Icon Name="IconName.Add"></Icon>
                @L["AddNewDiscountCode"]
            </Button>
        </Column>
    </Row>
</Div>
<Card>
    <CardBody>

        @{
            var columnSize = ColumnSize.Is2.OnQuadHD.Is3.OnFullHD.Is4.OnDesktop.Is6.OnTablet.Is12;
        }
        <Row VerticalGutter="10">
            <Column ColumnSize="ColumnSize.Is12">
                <TextEdit @bind-Text="Filters.Filter" Placeholder="@L["Search"]"></TextEdit>
            </Column>
            <Column ColumnSize="columnSize">
                <Label>@L["From"]</Label>
                <DateEdit TValue="DateTime?" @bind-Date="Filters.StartDate" Size="Size.Small"></DateEdit>
            </Column>
            <Column ColumnSize="columnSize">
                <Label>@L["To"]</Label>
                <DateEdit TValue="DateTime?" @bind-Date="Filters.EndDate" Size="Size.Small"></DateEdit>
            </Column>
            <Column ColumnSize="ColumnSize.Is12.IsAuto.OnTablet" Class="d-flex align-items-end justify-content-center justify-content-sm-start">
                <Button Clicked="ResetFilters" Class="btn-sm btn-outline-primary me-1">
                    <Icon Class="fa-undo"></Icon>
                    @L["Reset"]
                </Button>
                <Button Clicked="ApplyFilters" Class="btn-sm btn-primary">
                    <Icon Class="fa-filter"></Icon>
                    @L["Filter"]
                </Button>
            </Column>
        </Row>
    </CardBody>
</Card>
<Card>
    <CardBody>
        <DataGrid TItem="DiscountCodeDto"
                  Data="DiscountCodeList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
                  CurrentPage="CurrentPage"
                  Hoverable
                  Narrow
                 
                  Striped
                
                  SelectionMode="DataGridSelectionMode.Multiple"
                  
                  RowSelectable="RowSelectableHandler">
            <DataGridColumns>
                @*   <DataGridMultiSelectColumn TItem="AddOnProductDto" Width="30px"></DataGridMultiSelectColumn> *@
                <DataGridCommandColumn TItem="DiscountCodeDto" />
                <DataGridColumn TItem="DiscountCodeDto"
                                Field="@nameof(DiscountCodeDto.EventName)"
                                Caption="@L["Name"]">

                </DataGridColumn>
                <DataGridColumn TItem="DiscountCodeDto"
                                Field="@nameof(DiscountCodeDto.AvailableQuantity)"
                                Caption="@L["Quantity"]">
                    <DisplayTemplate>
                        <Progress ShowValue=false Value="100">
                            <ProgressBar Color="Color.Danger" Value="@((int)(((double)context.TotalQuantity / (context.AvailableQuantity + context.TotalQuantity)) * 100))"   />
                            <ProgressBar Color="Color.Success" Value="@((int)(((double)context.AvailableQuantity / (context.AvailableQuantity + context.TotalQuantity)) * 100))" />
                           
                        </Progress>
                       

                      
                         <br />
                        <Span>@context.TotalQuantity @L["Used"]</Span> 
                        <br />
                        <Span>@context.AvailableQuantity @L["UnUsed"]</Span>
                    </DisplayTemplate>
                </DataGridColumn>

                <DataGridColumn TItem="DiscountCodeDto"
                                Field="@nameof(DiscountCodeDto.SpecifiedCode)"
                                Caption="@L["Code"]">
                    <DisplayTemplate>
                        <Copy Text="@context.SpecifiedCode"></Copy>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="DiscountCodeDto"
                                Field="@nameof(DiscountCodeDto.StartDate)"
                                Caption="@L["Time"]">
                    <DisplayTemplate>
                        @context.StartDate-@context.EndDate
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="DiscountCodeDto" Field="@nameof(DiscountCodeDto.Status)"
                                Caption="@L["Status"]">
                    <DisplayTemplate>
                        <Switch TValue="bool" Checked="@context.Status" CheckedChanged="@(() => UpdateStatus(context.Id))"></Switch>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridEntityActionsColumn TItem="DiscountCodeDto">
                    <DisplayTemplate>
                        <EntityActions TItem="DiscountCodeDto">
                            <EntityAction TItem="DiscountCodeDto"
                                          Text="@L["Edit"]" Clicked="()=>NavigateToEditPage(context.Id)" />
                            <EntityAction TItem="DiscountCodeDto"
                                          Text="@L["Delete"]"
                                          Clicked="()=>DeleteAddOn(context.Id)" />
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>


