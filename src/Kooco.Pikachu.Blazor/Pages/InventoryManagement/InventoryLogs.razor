@page "/Inventory-Management/Inventory-Logs/{ItemId:guid}/{ItemDetailId:guid}"
@using Kooco.Pikachu.InventoryManagement
@inherits PikachuComponentBase
@inject IInventoryAppService InventoryAppService
@inject IInventoryLogAppService InventoryLogAppService
@inject NavigationManager NavigationManager
@inject ExcelDownloadHelper ExcelDownloadHelper

<style>
    .table.table-striped > tbody > tr:nth-of-type(odd) > td, .table.table-bordered > tbody > tr:nth-of-type(odd) > td {
        background-color: transparent;
        color: #1f1f1f !important;
        font-weight: 500;
    }

    .table.table-striped > tbody > tr:nth-of-type(even) > td, .table.table-bordered > tbody > tr:nth-of-type(even) > td {
        background-color: transparent;
        color: #1f1f1f !important;
        font-weight: 500;
    }
</style>

<PageHeader Title="" BreadcrumbItems="@BreadcrumbItems"></PageHeader>
<Div Class="d-flex justify-content-between align-items-center">
    <PikachuButton Clicked="Close">
        <Icon Name="IconName.ArrowLeft" Class="me-1"></Icon>
        <h4 class="d-inline-block m-0">@PageTitle</h4>
    </PikachuButton>
    <Div Class="d-flex align-items-end justify-content-end gap-1">
        <PikachuButton Class="pk-btn-sm"
                       Clicked="Refresh"
                       Loading="IsLoading"
                       Disabled="IsExporting"
                       IconClass="fas fa-refresh">
            @L["Refresh"]
        </PikachuButton>
        <PikachuButton Class="pk-btn-sm pk-btn-primary"
                       Clicked="Export"
                       Loading="IsExporting"
                       Disabled="IsLoading || InventoryLogList is not { Count: > 0 }"
                       IconClass="fas fa-file-download">
            @L["ExportAll"]
        </PikachuButton>
        <PikachuButton Class="pk-btn-sm pk-btn-secondary"
                       Clicked="AdjustStock"
                       Disabled="IsExporting || IsLoading">
            @L["AdjustStock"]
        </PikachuButton>
    </Div>
</Div>
<Card>
    <CardBody>
        <DataGrid TItem="InventoryLogDto"
                  Data="InventoryLogList"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize"
                  CurrentPage="CurrentPage"
                  Hoverable
                  Narrow
                  Responsive
                  Bordered>
            <DataGridColumns>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.Sku)"
                                Caption="@L["SKU"]">
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.CreationTime)"
                                Caption="@L["Timestamp"]">
                    <DisplayTemplate>
                        @context.CreationTime.ToString("MM/dd/yyyy HH:mm:ss")
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.ActionType)"
                                Caption="@L["Action"]">
                    <DisplayTemplate>
                        @switch (context.ActionType)
                        {
                            case InventoryActionType.AddStock:
                                @L["StockAdded"]
                                break;
                            case InventoryActionType.DeductStock:
                                @L["StockDeducted"]
                                break;
                            case InventoryActionType.ItemSold:
                                @L["ItemSold", context.OrderNumber]
                                break;
                            case InventoryActionType.AddOnProductSold:
                                @L["AddOnProductSold", context.OrderNumber]
                                break;
                        }
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.StockOnHand)"
                                Caption="@L["CurrentStock"]">
                    <DisplayTemplate>
                        <InventoryLogsAmountComponent Value="@context.StockOnHand" />
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.SaleableQuantity)"
                                Caption="@L["AvailableStock"]">
                    <DisplayTemplate>
                        <InventoryLogsAmountComponent Value="@context.SaleableQuantity" />
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.PreOrderQuantity)"
                                Caption="@L["PreOrderQuantity"]">
                    <DisplayTemplate>
                        <InventoryLogsAmountComponent Value="@context.PreOrderQuantity" />
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Field="@nameof(InventoryLogDto.SaleablePreOrderQuantity)"
                                Caption="@L["AvailablePreOrderQuantity"]">
                    <DisplayTemplate>
                        <InventoryLogsAmountComponent Value="@context.SaleablePreOrderQuantity" />
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="InventoryLogDto"
                                Sortable="false"
                                Caption="@L["View"]"
                                Width="100px"
                                TextAlignment="TextAlignment.Center">
                    <DisplayTemplate>
                        <Button Class="pk-btn-icon indigo" Clicked="() => View(context)">
                            <Icon Name="IconName.Eye"></Icon>
                        </Button>
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
            <LoadingTemplate>
                <Div Class="text-center pt-3">
                    <Div Class="spinner-border text-primary" Style="height: 3rem; width: 3rem;"></Div>
                </Div>
            </LoadingTemplate>
            <EmptyTemplate>
                <Div Class="text-center pt-3">
                    <h5 class="text-muted">@L["NoStockAdjustmentDescription"]</h5>
                </Div>
            </EmptyTemplate>
             <NextPageButtonTemplate>@L["NextPage"]</NextPageButtonTemplate>
    <PreviousPageButtonTemplate>@L["PrevPage"]</PreviousPageButtonTemplate>
    <LastPageButtonTemplate>@L["LastPage"]</LastPageButtonTemplate>
    <FirstPageButtonTemplate>@L["FirstPage"]</FirstPageButtonTemplate>
            <TotalItemsTemplate>
                @(string.Format(
                         L["Range"],
                         ((CurrentPage - 1) * PageSize) + 1,
                         (CurrentPage * PageSize > TotalCount ? TotalCount : CurrentPage * PageSize),
                         TotalCount
                         ))
            </TotalItemsTemplate>
        </DataGrid>
    </CardBody>
</Card>

<AdjustStockModal @ref="AdjustStockModalRef" OnClosed="OnStockAdjustment" />

<Modal @ref="ViewModalRef">
    <ModalContent Centered Size="ModalSize.Large">
        <Form>
            <ModalHeader>
                <ModalTitle>
                    <h4 class="text-dark m-0">@SelectedLog?.Sku</h4>
                </ModalTitle>
            </ModalHeader>
            <ModalBody>
                <h5>@L["Description"]</h5>
                <h5 class="text-dark" style="font-size: 1rem; line-height: 1.5;">
                    @SelectedLog?.Description
                </h5>
                <Divider></Divider>
                <Div Class="mt-3 d-flex align-items-center justify-content-between">
                    <h5>
                        @L["Editor"]:
                        <span class="text-dark">
                            @SelectedCreatorName
                        </span>
                    </h5>
                    <h5>
                        @L["EditedAt"]:
                        <span class="text-dark">
                            @SelectedLog?.CreationTime.ToString("yyyy/MM/dd HH:mm")
                        </span>
                    </h5>
                </Div>
            </ModalBody>
            <ModalFooter>
                <PikachuButton Class="pk-btn-sm pk-btn-danger"
                               Clicked="ViewModalRef.Hide"
                               Style="width: 75px;">
                    @L["Close"]
                </PikachuButton>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>