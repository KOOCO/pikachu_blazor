@page "/Inventory-Management/Inventory"
@using Kooco.Pikachu.InventoryManagement;

@inherits PikachuComponentBase
@inject IInventoryAppService InventoryAppService
@inject ExcelDownloadHelper ExcelDownloadHelper
@inject NavigationManager NavigationManager

<style>
    .entry-row .content-header-title {
        margin-bottom: 0;
        margin-top: 0;
    }
</style>

<PageHeader Title="@PageTitle" BreadcrumbItems="@BreadcrumbItems">
    <Div Class="d-flex align-items-end justify-content-end gap-1">
        <PikachuButton Class="pk-btn-sm pk-btn-primary"
                       Clicked="() => ExportAsync(exportAll: false)"
                       Disabled="Selected == null || Selected.Count == 0 || IsExportingAll"
                       Loading="IsExportingSelected"
                       IconClass="fas fa-file-download">
            @L["Export"]
        </PikachuButton>
        <PikachuButton Class="pk-btn-sm pk-btn-primary"
                       Clicked="() => ExportAsync(exportAll: true)"
                       Disabled="IsExportingSelected || TotalCount == 0"
                       Loading="IsExportingAll"
                       IconClass="fas fa-file-download">
            @L["ExportAll"]
        </PikachuButton>
    </Div>
</PageHeader>

<InventoryFiltersComponent @bind-Filters="Filters" OnFilter="ApplyFilters" />

<Card>
    <CardBody>
        @if (IsLoading)
        {
            <SkeletonTable Rows="10" Columns="10" />
        }
        <Div Visibility="IsLoading? Visibility.Invisible: Visibility.Visible">
            <DataGrid TItem="InventoryDto"
                      Data="InventoryList"
                      ReadData="OnDataGridReadAsync"
                      TotalItems="TotalCount"
                      ShowPager="true"
                      PageSize="PageSize"
                      CurrentPage="CurrentPage"
                      Hoverable
                      Narrow
                      Responsive
                      SelectionMode="DataGridSelectionMode.Multiple"
                      @bind-SelectedRows="Selected"
                      RowSelectable="RowSelectableHandler">
                <DataGridColumns>
                    <DataGridMultiSelectColumn TItem="InventoryDto" Width="30px"></DataGridMultiSelectColumn>
                    <DataGridCommandColumn TItem="InventoryDto" />
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.ItemName)"
                                    Caption="@L["ItemName"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.Attributes)"
                                    Caption="@L["Attributes"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.Sku)"
                                    Caption="@L["Sku"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.Warehouse)"
                                    Caption="@L["Warehouse"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.CurrentStock)"
                                    Caption="@L["CurrentStock"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.AvailableStock)"
                                    Caption="@L["AvailableStock"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.PreOrderQuantity)"
                                    Caption="@L["PreOrderQuantity"]">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Field="@nameof(InventoryDto.AvailablePreOrderQuantity)"
                                    Caption="@L["AvailablePreOrderQuantity"]"
                                    Width="200px">
                    </DataGridColumn>
                    <DataGridColumn TItem="InventoryDto"
                                    Sortable="false"
                                    Caption="@L["Edit"]"
                                    Width="30px">
                        <DisplayTemplate>
                            <Button Class="pk-btn-icon indigo" Clicked="() => Edit(context)">
                                <Icon Name="IconName.Pen"></Icon>
                            </Button>
                        </DisplayTemplate>
                    </DataGridColumn>
                </DataGridColumns>
                 <NextPageButtonTemplate>@L["NextPage"]</NextPageButtonTemplate>
    <PreviousPageButtonTemplate>@L["PrevPage"]</PreviousPageButtonTemplate>
    <LastPageButtonTemplate>@L["LastPage"]</LastPageButtonTemplate>
    <FirstPageButtonTemplate>@L["FirstPage"]</FirstPageButtonTemplate>
            <TotalItemsTemplate>
                @(string.Format(
                         L["Range"],
                         ((CurrentPage - 1) * PageSize) + 1,
                         (CurrentPage * PageSize > TotalCount ? TotalCount : CurrentPage * PageSize),
                         TotalCount
                         ))
            </TotalItemsTemplate>
            </DataGrid>
        </Div>
    </CardBody>
</Card>