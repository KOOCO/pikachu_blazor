@page "/Orders/OrderDetails/{id}"
@using Kooco.Pikachu.Blazor.Pages.LogisticsManagement
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.OrderItems;
@using Kooco.Pikachu.Orders;
@using Kooco.Pikachu.OrderDeliveries;
@using Kooco.Pikachu.StoreLogisticOrders;
@using Kooco.Pikachu.Refunds;
@using Microsoft.Extensions.Localization;
@using Blazorise;
@using Volo.Abp.AspNetCore.Components.Messages;
@using Volo.Abp.Users;
@using Blazorise.LoadingIndicator;
@using Kooco.Pikachu.LogisticsProviders;

@inject IJSRuntime JSRuntime;
@inject IStringLocalizer<PikachuResource> L;
@inject NavigationManager NavigationManager;
@inject IUiMessageService _uiMessageService;
@inject IOrderAppService _orderAppService;
@inject IRefundAppService _refundAppService;
@inject IOrderDeliveryAppService _orderDeliveryAppService;
@inject IStoreLogisticsOrderAppService _storeLogisticsOrderAppService;
@inject ICurrentUser CurrentUser;
@inject IModalService ModalService;
<style>

    table tr td {
        padding-bottom: 0.5rem;
        padding-right: 1rem;
    }

        table tr td:first-child {
            width: 1px;
            white-space: nowrap;
        }

</style>

<h3>@L["OrderDetails"]</h3>
<LoadingIndicator @ref="loading" FullScreen FadeIn>
    <div class="row">
        <div class="col-md-6 col-sm-12">
            <Card>
                <CardBody>
                    @if (Order != null)
                    {
                        <div class="row">
                            <div class="col-12">
                                <table class="w-100">
                                    <tbody>
                                        <tr>
                                            <td>@L["GroupBuyName"]</td>
                                            <td>@Order.GroupBuy?.GroupBuyName</td>
                                        </tr>
                                        <tr>
                                            <td>@L["OrderInformation"]</td>
                                            <td>@Order.OrderNo</td>
                                        </tr>
                                        <tr>
                                            <td>@L["CustomerName"]</td>
                                            <td>@Order.CustomerName</td>
                                        </tr>
                                        <tr>
                                            <td>@L["Telephone"]</td>
                                            <td>@Order.CustomerPhone</td>
                                        </tr>
                                        <tr>
                                            <td>@L["Email"]</td>
                                            <td>@Order.CustomerEmail</td>
                                        </tr>
                                        @if ((Order.GroupBuy?.IsEnterprise == null || !Order.GroupBuy.IsEnterprise))
                                        {
                                            <tr>
                                                <td>@L["PaymentMethod"]</td>
                                                <td>@L[Order.PaymentMethod.ToString()]</td>
                                            </tr>
                                        }
                                        <tr>
                                            <td>@L["Invoice"]</td>
                                            <td>@Order.InvoiceNumber</td>
                                        </tr>
                                        <tr>
                                            <td>@L["CarrierNumber"]</td>
                                            <td>@(Order.UniformNumber != "/" ? Order.UniformNumber : "")</td>
                                        </tr>
                                        <tr>
                                            <td>@L["TaxTitle"]</td>
                                            <td>@Order.TaxTitle</td>
                                        </tr>
                                        <tr>
                                            <td>@L["TaxNumber"]</td>
                                            <td>@(Order.CarrierId != "/" ? Order.CarrierId : "")</td>
                                        </tr>
                                        <tr>
                                            <td>@L["InvoiceCarrier"]</td>
                                            <td>@L[Order.InvoiceType.ToString()]</td>
                                        </tr>
                                        <tr>
                                            <td>@L["ShippingMethod"]</td>
                                            <td>@L[Order.DeliveryMethod.ToString()] @Order.ShippingNumber </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        @*   <div class="row">
                    <div class="col-12 text-end"> *@
                        @*   <Button Type="ButtonType.Button" @onclick="OpenShipmentModal" Class="btn btn-sm btn-primary me-1">
                    @L["ShipmentNotify"]
                    </Button> *@
                        @*  @if (Order.PaymentMethod == PaymentMethods.CreditCard && Order.IsRefunded == false)
                    {
                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="ApplyRefund">
                    @L["ApplyRefund"]
                    </Button>
                    }
                    else
                    {
                    <Button Type="ButtonType.Button" Disabled Class="btn btn-sm btn-danger" Clicked="ApplyRefund">
                    @L["ApplyRefund"]
                    </Button>
                    }
                    </div>
                    </div>  *@
                        <Divider></Divider>

                        @if (Order.DeliveryMethod is not DeliveryMethod.DeliveredByStore) 
                        {
                            <div class="row">
                                <div class="col-12">
                                    <table class="w-100">
                                        <tbody>
                                            <Div Width="Width.Max100">
                                                <select class="form-select form-select" @onchange=ChangeStore>
                                                    <option value="homeDelivery">@L["OrderDetailsHomeDelivery"]</option>
                                                    <option value="convenienceStore">@L["ConvenienceStore"]</option>
                                                </select>
                                            </Div>
                                            <br />
                                            <tr>
                                                <td>@L["Recipient"]</td>
                                                @if (ModificationTrack.IsNameInputVisible)
                                                {
                                                    <td>
                                                        <div class="input-group">

                                                            @{
                                                                var errorClass = ModificationTrack.IsInvalidName ? "invalid" : "";
                                                            }
                                                            <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewName" />


                                                            <Button Type="ButtonType.Button" @onclick="SaveRecipientName" Class="btn btn-sm btn-primary">
                                                                <i class="fa fa-check"></i>
                                                            </Button>
                                                        </div>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="d-flex justify-content-between">
                                                        @if (ModificationTrack.IsNameModified)
                                                        {
                                                            @ModificationTrack.NewName
                                                        }
                                                        else
                                                        {
                                                            @Order.RecipientName
                                                        }
                                                        @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                        {
                                                            <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientName">
                                                                <i class="fa fa-pencil text-secondary"></i>
                                                            </span>
                                                        }
                                                    </td>
                                                }
                                            </tr>
                                            <tr>
                                                <td>@L["RecipientPhoneNumber"]</td>
                                                @if (ModificationTrack.IsPhoneInputVisible)
                                                {
                                                    <td>
                                                        <div class="input-group">
                                                            @{
                                                                var errorClass2 = ModificationTrack.IsInvalidPhone ? "invalid" : "";
                                                            }
                                                            <input type="text" class="form-control form-control-sm @errorClass2" @bind-value="@ModificationTrack.NewPhone" />
                                                            <Button Type="ButtonType.Button" @onclick="SaveRecipientPhone" Class="btn btn-sm btn-primary">
                                                                <i class="fa fa-check"></i>
                                                            </Button>
                                                        </div>
                                                    </td>
                                                }
                                                else
                                                {
                                                    <td class="d-flex justify-content-between">
                                                        @if (ModificationTrack.IsPhoneModified)
                                                        {
                                                            @ModificationTrack.NewPhone
                                                        }
                                                        else
                                                        {
                                                            @Order.RecipientPhone
                                                        }
                                                        @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                        {
                                                            <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientPhone">
                                                                <i class="fa fa-pencil text-secondary"></i>
                                                            </span>
                                                        }
                                                    </td>
                                                }
                                            </tr>
                                            <br />
                                            <tr>
                                                <td>@L["DeliveryTime"]</td>
                                                <td>
                                                    <div class="input-group">
                                                        @if (Order.ReceivingTime is not null) {
                                                            <span>@Order.ReceivingTime?.ToString()</span>
                                                        }
                                                    </div>
                                                </td>
                                            </tr>

                                            @if (IsShowConvenienceStoreDetails)
                                            {
                                                <tr>
                                                    <td>@L["CVSStoreId"]</td>
                                                    @if (ModificationTrack.IsCVSStoreIdInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">

                                                                @{
                                                                    var errorClass = ModificationTrack.IsInvalidCVSStoreId ? "invalid" : "";
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCVSStoreId" />


                                                                <Button Type="ButtonType.Button" @onclick="SaveCVSStoreId" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check"></i>
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsCVSStoreIdModified)
                                                            {
                                                                @ModificationTrack.NewCVSStoreId
                                                            }
                                                            else
                                                            {
                                                                @Order.StoreId
                                                            }
                                                            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditCVSStoreId">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["CVSStoreOutSide"]</td>
                                                    @if (ModificationTrack.IsCVSStoreOutsideInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">

                                                                @{
                                                                    var errorClass = ModificationTrack.IsInvalidCVSStoreOutside ? "invalid" : "";
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCVSStoreOutside" />


                                                                <Button Type="ButtonType.Button" @onclick="SaveCVSStoreOutside" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check"></i>
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsCVSStoreOutsideModified)
                                                            {
                                                                @ModificationTrack.NewCVSStoreOutside
                                                            }
                                                            else
                                                            {
                                                                @Order.CVSStoreOutSide
                                                            }
                                                            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditCVSStoreOutside">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                            }

                                            else
                                            {
                                                <tr>
                                                    <td>@L["RecipientPostalCode"]</td>

                                                    @* <td>@Order.PostalCode</td> *@
                                                    @if (ModificationTrack.IsPostalCodeInputVisible)
                                                    {
                                                        <td>

                                                            <div class="row">
                                                                <div class="col-12">
                                                                    <div class="input-group">
                                                                        @{
                                                                            var errorClass = ModificationTrack.IsInvalidPostalCode ? "invalid" : "";
                                                                        }
                                                                        <input class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewPostalCode" />
                                                                        <Button Type="ButtonType.Button" @onclick="SaveRecipientPostalCode" Class="btn btn-sm btn-primary">
                                                                            <i class="fa fa-check"></i>
                                                                        </Button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsPostalCodeModified)
                                                            {
                                                                @(ModificationTrack.NewPostalCode)
                                                                @* +", " + ModificationTrack.NewRoad + ", " + ModificationTrack.NewDistrict + ", " + ModificationTrack.NewCity *@
                                                            }
                                                            else
                                                            {
                                                                @(Order.PostalCode)
                                                                @*  + ", " + Order.Road + ", " + Order.District + ", " + Order.City *@
                                                            }
                                                            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientPostalCode">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["RecipientCity"]</td>
                                                    @if (ModificationTrack.IsCityInputVisible)
                                                    {
                                                        <td>
                                                            <div class="row">
                                                                <div class="col-12">
                                                                    <div class="input-group">
                                                                        @{
                                                                            string errorClass = ModificationTrack.IsInvalidCity ? "invalid" : "";
                                                                        }
                                                                        @* <input class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCity" /> *@

                                                                        <select class="form-select form-select-sm @errorClass" @onchange=@((e) => ModificationTrack.NewCity = Convert.ToString(e.Value))>
                                                                            <option value=""> Select City </option>
                                                                            @foreach (var city in LogisticsConsts.MainIslands)
                                                                            {
                                                                                <option value="@city">@city</option>
                                                                            }
                                                                        </select>

                                                                        <Button Type="ButtonType.Button" @onclick="SaveRecipientCity" Class="btn btn-sm btn-primary">
                                                                            <i class="fa fa-check"></i>
                                                                        </Button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsCityModified)
                                                            {
                                                                @L[ModificationTrack.NewCity]
                                                                @* +", " + ModificationTrack.NewRoad + ", " + ModificationTrack.NewDistrict + ", " + ModificationTrack.NewCity *@
                                                            }
                                                            else
                                                            {
                                                                @L[Order.City ?? ""]
                                                                @*  + ", " + Order.Road + ", " + Order.District + ", " + Order.City *@
                                                            }
                                                            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientCity">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["RecipientAddress"]</td>
                                                    @if (ModificationTrack.IsAddressInputVisible)
                                                    {
                                                        <td>
                                                            @* <div class="row mb-1">
                                            <div class="col-4">
                                            <InputSelect class="form-select form-select-sm" @bind-Value="@ModificationTrack.NewRoad">
                                            <option disabled="disabled" selected="selected">選擇城市</option>
                                            <option value="臺北市">臺北市</option>
                                            <option value="桃園市">桃園市</option>
                                            <option value="嘉義市">嘉義市</option>
                                            </InputSelect>
                                            </div>
                                            <div class="col-4">
                                            <InputSelect class="form-select form-select-sm" @bind-Value="@ModificationTrack.NewDistrict">
                                            <option disabled="disabled" selected="selected">選擇地區</option>
                                            <option value="石碇區">石碇區</option>
                                            <option value="坪林區">坪林區</option>
                                            <option value="烏來區">烏來區</option>
                                            </InputSelect>
                                            </div>
                                            <div class="col-4">
                                            <InputSelect class="form-select form-select-sm" @bind-Value="@ModificationTrack.NewCity">
                                            <option disabled="disabled" selected="selected">選擇城市</option>
                                            <option value="臺北市">臺北市</option>
                                            <option value="桃園市">桃園市</option>
                                            <option value="嘉義市">嘉義市</option>
                                            </InputSelect>
                                            </div>
                                            </div> *@
                                                            <div class="row">
                                                                <div class="col-12">
                                                                    <div class="input-group">
                                                                        @{
                                                                            var errorClass = ModificationTrack.IsInvalidAddress ? "invalid" : "";
                                                                        }
                                                                        <input class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewAddress" />
                                                                        <Button Type="ButtonType.Button" @onclick="SaveRecipientAddress" Class="btn btn-sm btn-primary">
                                                                            <i class="fa fa-check"></i>
                                                                        </Button>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsAddressModified)
                                                            {
                                                                @(ModificationTrack.NewAddress)
                                                                @* +", " + ModificationTrack.NewRoad + ", " + ModificationTrack.NewDistrict + ", " + ModificationTrack.NewCity *@
                                                            }
                                                            else
                                                            {
                                                                @(Order.AddressDetails)
                                                                @*  + ", " + Order.Road + ", " + Order.District + ", " + Order.City *@
                                                            }
                                                            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientAddress">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                </tr>
                                            }
                                            <tr>
                                                <td>@L["RecipientComments"]</td>
                                                <td>@Order.Remarks</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            @if (ModificationTrack.IsModified)
                            {
                                <div class="row">
                                    <div class="col-12 text-end">
                                        <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="CancelChanges">
                                            @L["Cancel"]
                                        </Button>
                                        <Button Type="ButtonType.Button" Clicked="SaveChangesAsync" Class="btn btn-sm btn-primary">
                                            <i class="fa fa-check"></i>
                                            @L["SaveChanges"]
                                        </Button>
                                    </div>
                                </div>
                            }
                        }

                        else 
                        {
                            <div class="row">
                                <div class="col-12">
                                    <table class="w-100">
                                        <tbody>
                                            <Div Width="Width.Max100">
                                                <select class="form-select form-select" @onchange=ChangeStore>
                                                    <option value="homeDelivery">@L["OrderDetailsHomeDelivery"]</option>
                                                    <option value="convenienceStore">@L["ConvenienceStore"]</option>
                                                </select>
                                            </Div>

                                            <Div Width="Width.Max100">
                                                <select class="form-select form-select my-1" @onchange=TemperatureControlChange>
                                                    <option value="">@L["SelectTemperatureControl"]</option>
                                                    @foreach (string temperature in Enum.GetNames<ItemStorageTemperature>()) 
                                                    {
                                                        if (temperature == ItemStorageTemperature.Normal.ToString())
                                                        {
                                                            <option value="@temperature" selected>@L[temperature]</option>
                                                        }

                                                        else 
                                                        {
                                                            <option value="@temperature">@L[temperature]</option>
                                                        }
                                                    }
                                                </select>
                                            </Div>
                                            <br />
                                            <tr>
                                                <td>@L["Recipient"]</td>
                                                @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                {
                                                    @if (ModificationTrack.IsRecipientNameDbsNormalInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientNameDbsNormal ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientNameDbsNormal" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientNameDbsNormal" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientNameDbsNormalModified)
                                                            {
                                                                @ModificationTrack.NewRecipientNameDbsNormal
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientNameDbsNormal
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientNameDbsNormal">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                {
                                                    @if (ModificationTrack.IsRecipientNameDbsFreezeInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientNameDbsFreeze ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientNameDbsFreeze" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientNameDbsFreeze" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientNameDbsFreezeModified)
                                                            {
                                                                @ModificationTrack.NewRecipientNameDbsFreeze
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientNameDbsFreeze
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientNameDbsFreeze">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                {
                                                    @if (ModificationTrack.IsRecipientNameDbsFrozenInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientNameDbsFrozen ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientNameDbsFrozen" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientNameDbsFrozen" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientNameDbsFrozenModified)
                                                            {
                                                                @ModificationTrack.NewRecipientNameDbsFrozen
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientNameDbsFrozen
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientNameDbsFrozen">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }
                                            </tr>
                                            <tr>
                                                <td>@L["RecipientPhoneNumber"]</td>
                                                @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                {
                                                    @if (ModificationTrack.IsRecipientPhoneDbsNormalInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientPhoneDbsNormal ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientPhoneDbsNormal" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientPhoneDbsNormal" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientPhoneDbsNormalModified)
                                                            {
                                                                @ModificationTrack.NewRecipientPhoneDbsNormal
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientPhoneDbsNormal
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientPhoneDbsNormal">
                                                                    <i class="fa fa-pencil text-secondary"></i>
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                {
                                                    @if (ModificationTrack.IsRecipientPhoneDbsFreezeInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientPhoneDbsFreeze ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientPhoneDbsFreeze" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientPhoneDbsFreeze" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientPhoneDbsFreezeModified)
                                                            {
                                                                @ModificationTrack.NewRecipientPhoneDbsFreeze
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientPhoneDbsFreeze
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientPhoneDbsFreeze">
                                                                    <i class="fa fa-pencil text-secondary" />
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                {
                                                    @if (ModificationTrack.IsRecipientPhoneDbsFrozenInputVisible)
                                                    {
                                                        <td>
                                                            <div class="input-group">
                                                                @{
                                                                    string errorClass = ModificationTrack.IsInvalidRecipientPhoneDbsFrozen ? "invalid" : string.Empty;
                                                                }
                                                                <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewRecipientPhoneDbsFrozen" />

                                                                <Button Type="ButtonType.Button" @onclick="SaveRecipientPhoneDbsFrozen" Class="btn btn-sm btn-primary">
                                                                    <i class="fa fa-check" />
                                                                </Button>
                                                            </div>
                                                        </td>
                                                    }
                                                    else
                                                    {
                                                        <td class="d-flex justify-content-between">
                                                            @if (ModificationTrack.IsRecipientPhoneDbsFrozenModified)
                                                            {
                                                                @ModificationTrack.NewRecipientPhoneDbsFrozen
                                                            }
                                                            else
                                                            {
                                                                @Order.RecipientPhoneDbsFrozen
                                                            }
                                                            @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                            {
                                                                <span class="text-secondary cursor-pointer me-2" @onclick="EditRecipientPhoneDbsFrozen">
                                                                    <i class="fa fa-pencil text-secondary" />
                                                                </span>
                                                            }
                                                        </td>
                                                    }
                                                }
                                            </tr>

                                            <tr>
                                                <td>@L["DeliveryTime"]</td>
                                                @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                {
                                                    <td>
                                                        <div class="input-group">
                                                            @if (Order.ReceivingTimeNormal is not null) {
                                                                <span>@Order.ReceivingTimeNormal?.ToString()</span>
                                                            }
                                                        </div>
                                                    </td>
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                {
                                                    <td>
                                                        <div class="input-group">
                                                            @if (Order.ReceivingTimeFreeze is not null) {
                                                                <span>@Order.ReceivingTimeFreeze?.ToString()</span>
                                                            }
                                                        </div>
                                                    </td>
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen) {
                                                    <td>
                                                        <div class="input-group">
                                                            @if (Order.ReceivingTimeFrozen is not null)
                                                            {
                                                                <span>@Order.ReceivingTimeFrozen?.ToString()</span>
                                                            }
                                                        </div>
                                                    </td>
                                                }
                                            </tr>

                                            @if (IsShowConvenienceStoreDetails)
                                            {
                                                <tr>
                                                    <td>@L["CVSStoreId"]</td>
                                                    @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                    {
                                                        @if (ModificationTrack.IsStoreIdNormalInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidStoreIdNormal ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewStoreIdNormal" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveStoreIdNormal" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsStoreIdNormalModified)
                                                                {
                                                                    @ModificationTrack.NewStoreIdNormal
                                                                }
                                                                else
                                                                {
                                                                    @Order.StoreIdNormal
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditStoreIdNormal">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                    {
                                                        @if (ModificationTrack.IsStoreIdFreezeInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidStoreIdFreeze ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewStoreIdFreeze" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveStoreIdFreeze" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsStoreIdFreezeModified)
                                                                {
                                                                    @ModificationTrack.NewStoreIdFreeze
                                                                }
                                                                else
                                                                {
                                                                    @Order.StoreIdFreeze
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditStoreIdFreeze">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                    {
                                                        @if (ModificationTrack.IsStoreIdFrozenInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidStoreIdFrozen ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewStoreIdFrozen" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveStoreIdFrozen" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsStoreIdFrozenModified)
                                                                {
                                                                    @ModificationTrack.NewStoreIdFrozen
                                                                }
                                                                else
                                                                {
                                                                    @Order.StoreIdFrozen
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditStoreIdFrozen">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["CVSStoreOutSide"]</td>
                                                    @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                    {
                                                        @if (ModificationTrack.IsCVSStoreOutSideNormalInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCVSStoreOutSideNormal ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCVSStoreOutSideNormal" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCVSStoreOutSideNormal" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCVSStoreOutSideNormalModified)
                                                                {
                                                                    @ModificationTrack.NewCVSStoreOutSideNormal
                                                                }
                                                                else
                                                                {
                                                                    @Order.CVSStoreOutSideNormal
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCVSStoreOutSideNormal">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                    {
                                                        @if (ModificationTrack.IsCVSStoreOutSideFreezeInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCVSStoreOutSideFreeze ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCVSStoreOutSideFreeze" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCVSStoreOutSideFreeze" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCVSStoreOutSideFreezeModified)
                                                                {
                                                                    @ModificationTrack.NewCVSStoreOutSideFreeze
                                                                }
                                                                else
                                                                {
                                                                    @Order.CVSStoreOutSideFreeze
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCVSStoreOutSideFreeze">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                    {
                                                        @if (ModificationTrack.IsCVSStoreOutSideFrozenInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCVSStoreOutSideFrozen ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCVSStoreOutSideFrozen" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCVSStoreOutSideFrozen" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCVSStoreOutSideFrozenModified)
                                                                {
                                                                    @ModificationTrack.NewCVSStoreOutSideFrozen
                                                                }
                                                                else
                                                                {
                                                                    @Order.CVSStoreOutSideFrozen
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCVSStoreOutSideFrozen">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }

                                            else
                                            {
                                                <tr>
                                                    <td>@L["RecipientPostalCode"]</td>
                                                    @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                    {
                                                        @if (ModificationTrack.IsPostalCodeDbsNormalInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidPostalCodeDbsNormal ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewPostalCodeDbsNormal" />

                                                                    <Button Type="ButtonType.Button" @onclick="SavePostalCodeDbsNormal" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsPostalCodeDbsNormalModified)
                                                                {
                                                                    @ModificationTrack.NewPostalCodeDbsNormal
                                                                }
                                                                else
                                                                {
                                                                    @Order.PostalCodeDbsNormal
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditPostalCodeDbsNormal">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                    {
                                                        @if (ModificationTrack.IsPostalCodeDbsFreezeInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidPostalCodeDbsFreeze ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewPostalCodeDbsFreeze" />

                                                                    <Button Type="ButtonType.Button" @onclick="SavePostalCodeDbsFreeze" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsPostalCodeDbsFreezeModified)
                                                                {
                                                                    @ModificationTrack.NewPostalCodeDbsFreeze
                                                                }
                                                                else
                                                                {
                                                                    @Order.PostalCodeDbsFreeze
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditPostalCodeDbsFreeze">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                    {
                                                        @if (ModificationTrack.IsPostalCodeDbsFrozenInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidPostalCodeDbsFrozen ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewPostalCodeDbsFrozen" />

                                                                    <Button Type="ButtonType.Button" @onclick="SavePostalCodeDbsFrozen" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsPostalCodeDbsFrozenModified)
                                                                {
                                                                    @ModificationTrack.NewPostalCodeDbsFrozen
                                                                }
                                                                else
                                                                {
                                                                    @Order.PostalCodeDbsFrozen
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditPostalCodeDbsFrozen">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["RecipientCity"]</td>
                                                    @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                    {
                                                        @if (ModificationTrack.IsCityDbsNormalInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCityDbsNormal ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCityDbsNormal" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCityDbsNormal" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCityDbsNormalModified)
                                                                {
                                                                    @ModificationTrack.NewCityDbsNormal
                                                                }
                                                                else
                                                                {
                                                                    @Order.CityDbsNormal
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCityDbsNormal">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                    {
                                                        @if (ModificationTrack.IsCityDbsFreezeInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCityDbsFreeze ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCityDbsFreeze" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCityDbsFreeze" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCityDbsFreezeModified)
                                                                {
                                                                    @ModificationTrack.NewCityDbsFreeze
                                                                }
                                                                else
                                                                {
                                                                    @Order.CityDbsFreeze
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCityDbsFreeze">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                    {
                                                        @if (ModificationTrack.IsCityDbsFrozenInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidCityDbsFrozen ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewCityDbsFrozen" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveCityDbsFrozen" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsCityDbsFrozenModified)
                                                                {
                                                                    @ModificationTrack.NewCityDbsFrozen
                                                                }
                                                                else
                                                                {
                                                                    @Order.CityDbsFrozen
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditCityDbsFrozen">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["RecipientAddress"]</td>
                                                    @if (SelectedTemperatureControl is ItemStorageTemperature.Normal)
                                                    {
                                                        @if (ModificationTrack.IsAddressDetailsDbsNormalInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidAddressDetailsDbsNormal ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewAddressDetailsDbsNormal" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveAddressDetailsDbsNormal" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsAddressDetailsDbsNormalModified)
                                                                {
                                                                    @ModificationTrack.NewAddressDetailsDbsNormal
                                                                }
                                                                else
                                                                {
                                                                    @Order.AddressDetailsDbsNormal
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditAddressDetailsDbsNormal">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze)
                                                    {
                                                        @if (ModificationTrack.IsAddressDetailsDbsFreezeInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidAddressDetailsDbsFreeze ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewAddressDetailsDbsFreeze" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveAddressDetailsDbsFreeze" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsAddressDetailsDbsFreezeModified)
                                                                {
                                                                    @ModificationTrack.NewAddressDetailsDbsFreeze
                                                                }
                                                                else
                                                                {
                                                                    @Order.AddressDetailsDbsFreeze
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditAddressDetailsDbsFreeze">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }

                                                    else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen)
                                                    {
                                                        @if (ModificationTrack.IsAddressDetailsDbsFrozenInputVisible)
                                                        {
                                                            <td>
                                                                <div class="input-group">
                                                                    @{
                                                                        string errorClass = ModificationTrack.IsInvalidAddressDetailsDbsFrozen ? "invalid" : string.Empty;
                                                                    }
                                                                    <input type="text" class="form-control form-control-sm @errorClass" @bind-value="@ModificationTrack.NewAddressDetailsDbsFrozen" />

                                                                    <Button Type="ButtonType.Button" @onclick="SaveAddressDetailsDbsFrozen" Class="btn btn-sm btn-primary">
                                                                        <i class="fa fa-check" />
                                                                    </Button>
                                                                </div>
                                                            </td>
                                                        }
                                                        else
                                                        {
                                                            <td class="d-flex justify-content-between">
                                                                @if (ModificationTrack.IsAddressDetailsDbsFrozenModified)
                                                                {
                                                                    @ModificationTrack.NewAddressDetailsDbsFrozen
                                                                }
                                                                else
                                                                {
                                                                    @Order.AddressDetailsDbsFrozen
                                                                }
                                                                @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                                                                {
                                                                    <span class="text-secondary cursor-pointer me-2" @onclick="EditAddressDetailsDbsFrozen">
                                                                        <i class="fa fa-pencil text-secondary" />
                                                                    </span>
                                                                }
                                                            </td>
                                                        }
                                                    }
                                                </tr>
                                            }
                                            <tr>
                                                <td>@L["RecipientComments"]</td>
                                                @if (SelectedTemperatureControl is ItemStorageTemperature.Normal) 
                                                {
                                                    <td>@Order.RemarksDbsNormal</td>
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Freeze) {
                                                    <td>@Order.RemarksDbsFreeze</td>
                                                }

                                                else if (SelectedTemperatureControl is ItemStorageTemperature.Frozen) {
                                                    <td>@Order.RemarksDbsFrozen</td>
                                                }
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                            @if (ModificationTrack.IsModified)
                            {
                                <div class="row">
                                    <div class="col-12 text-end">
                                        <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="CancelChanges">
                                            @L["Cancel"]
                                        </Button>
                                        <Button Type="ButtonType.Button" Clicked="SaveChangesAsync" Class="btn btn-sm btn-primary">
                                            <i class="fa fa-check"></i>
                                            @L["SaveChanges"]
                                        </Button>
                                    </div>
                                </div>
                            }
                        }
                    }
                </CardBody>
            </Card>
        </div>

        <div class="col-md-6 col-sm-12">
            <div class="row mb-2">
                <div class="col-md-6 col-sm-12">
                    @*  @if (Order?.ShippingStatus != ShippingStatus.WaitingForPayment || Order?.OrderStatus == OrderStatus.Closed)
                    {
                    var text = Order?.OrderStatus == OrderStatus.Closed ? "Closed" : "CancelOrder";
                    <Button Type="ButtonType.Button" disabled Class="btn btn-sm btn-danger">@L[text]</Button>
                    }
                    else
                    {
                    <Button Type="ButtonType.Button" @onclick="CancelOrder" Class="btn btn-sm btn-danger">@L["CancelOrder"]</Button>
                    } *@
                    @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                    {
                        @if (Order.ShippingStatus is not ShippingStatus.WaitingForPayment && Order.IsRefunded is false)
                        {
                            <Button Type="ButtonType.Button" 
                                    Class="btn btn-sm btn-danger" 
                                    Clicked="OpenRefundModal">
                                @L["ApplyRefund"]
                            </Button>
                        }
                        else
                        {
                            <Button Type="ButtonType.Button"
                                    Disabled 
                                    Class="btn btn-sm btn-danger" 
                                    Clicked="OpenRefundModal">
                                 @L["ApplyRefund"]
                            </Button>
                        }
                        @if (Order?.OrderStatus is not OrderStatus.Returned && 
                             Order?.OrderStatus is not OrderStatus.Exchange && 
                             Order?.ShippingStatus is not ShippingStatus.WaitingForPayment && 
                             Order?.ShippingStatus is not ShippingStatus.PrepareShipment && 
                             Order.OrderStatus is not OrderStatus.Refund)
                        {
                            <Button Type="ButtonType.Button" 
                                    Clicked="ReturnOrder" 
                                    Class="btn btn-sm btn-secondary me-1">
                                @L["ReturnOrder"]
                            </Button>
                            <Button Type="ButtonType.Button" 
                                    Clicked="ExchangeOrder" 
                                    Class="btn btn-sm btn-secondary me-1">
                                @L["ExchangeItem"]
                            </Button>
                        }
                    }
                </div>
                <div class="col-md-6 col-sm-12 text-lg-end">
                    @if (Order.Id != Guid.Empty)
                    {
                        @if (Order.OrderType is not OrderType.MargeToNew && Order.OrderStatus is not OrderStatus.Refund)
                        {
                            @if (Order.ShippingStatus is ShippingStatus.PrepareShipment && Order.OrderItems.Any(x => x.IsSelected == true) && Order.OrderType is null)
                            {
                                <Button Clicked="SplitOrder" 
                                        Type="ButtonType.Button" 
                                        Class="btn btn-sm btn-secondary me-1">
                                    @L["SplitOrder"]
                                </Button>
                            }
                            else if (Order.ShippingStatus is ShippingStatus.WaitingForPayment && Order.OrderItems.Any(x => x.IsSelected == true) && Order.OrderType is null)
                            {
                                <Button Clicked="SplitOrder" 
                                        Type="ButtonType.Button" 
                                        Class="btn btn-sm btn-secondary me-1">
                                    @L["SplitOrder"]
                                </Button>
                            }
                            else
                            {
                                <Button Type="ButtonType.Button"
                                        Disabled 
                                        Class="btn btn-sm btn-secondary me-1">
                                     @L["SplitOrder"]
                                </Button>
                            }
                        }
                    }
                    <Button Type="ButtonType.Button" 
                            @onclick="NavigateToOrderShipmentDetails" 
                            Class="btn btn-sm btn-primary">
                        <Icon Class="fa fa-print" />
                        @L["PrintOrder"]
                    </Button>
                </div>
            </div>
            <Card>
                <CardBody>
                    <div class="row">
                        <div class="col-12 d-flex justify-content-between">
                            <p class="fw-bold">@L["Date"]</p>
                            <p class="fw-bold">@L["Editor"]</p>
                            <p class="fw-bold">@L["OrderStatus"]</p>
                        </div>
                    </div>
                    <div class="row">
                        @if (Order?.ShippingStatus == ShippingStatus.WaitingForPayment)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p></p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                        }
                        @if (Order?.ShippingStatus == ShippingStatus.PrepareShipment)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p></p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.PaymentDate?.ToShortDateString()</p>
                                <p>@Order?.PrepareShipmentBy</p>
                                <p>@L[ShippingStatus.PrepareShipment.ToString()]</p>
                            </div>
                        }
                        @if (Order?.ShippingStatus == ShippingStatus.Shipped)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.PaymentDate?.ToShortDateString()</p>
                                <p>@Order?.PrepareShipmentBy</p>
                                <p>@L[ShippingStatus.PrepareShipment.ToString()]</p>
                            </div>
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.ShippingDate?.ToShortDateString()</p>
                                <p>@Order?.ShippedBy</p>
                                <p>@L[ShippingStatus.Shipped.ToString()]</p>
                            </div>
                        }
                        @if (Order?.ShippingStatus == ShippingStatus.Completed)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                            @if (Order?.PaymentDate != null && Order?.PrepareShipmentBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.PaymentDate?.ToShortDateString()</p>
                                    <p>@Order?.PrepareShipmentBy</p>
                                    <p>@L[ShippingStatus.PrepareShipment.ToString()]</p>
                                </div>
                            }
                            @if (Order?.ShippingDate != null && Order?.ShippedBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.ShippingDate?.ToShortDateString()</p>
                                    <p>@Order?.ShippedBy</p>
                                    <p>@L[ShippingStatus.Shipped.ToString()]</p>
                                </div>
                            }
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CompletionTime?.ToShortDateString()</p>
                                <p>@Order?.CompletedBy</p>
                                <p>@L[ShippingStatus.Completed.ToString()]</p>
                            </div>
                        }
                        @if (Order?.ShippingStatus == ShippingStatus.Exchange)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                            @if (Order?.PaymentDate != null && Order?.PrepareShipmentBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.PaymentDate?.ToShortDateString()</p>
                                    <p>@Order?.PrepareShipmentBy</p>
                                    <p>@L[ShippingStatus.PrepareShipment.ToString()]</p>
                                </div>
                            }
                            @if (Order?.ShippingDate != null && Order?.ShippedBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.ShippingDate?.ToShortDateString()</p>
                                    <p>@Order?.ShippedBy</p>
                                    <p>@L[ShippingStatus.Shipped.ToString()]</p>
                                </div>
                            }
                            @if (Order?.CompletionTime != null && Order?.CompletedBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.CompletionTime?.ToShortDateString()</p>
                                    <p>@Order?.CompletedBy</p>
                                    <p>@L[ShippingStatus.Completed.ToString()]</p>
                                </div>
                            }
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.ExchangeTime?.ToShortDateString()</p>
                                <p>@Order?.ExchangeBy</p>
                                <p>@L[ShippingStatus.Exchange.ToString()]</p>
                            </div>
                        }
                        @if (Order?.ShippingStatus == ShippingStatus.Closed)
                        {
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CreationTime.ToShortDateString()</p>
                                <p>@L[ShippingStatus.WaitingForPayment.ToString()]</p>
                            </div>
                            @if (Order?.PaymentDate != null && Order?.PrepareShipmentBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.PaymentDate?.ToShortDateString()</p>
                                    <p>@Order?.PrepareShipmentBy</p>
                                    <p>@L[ShippingStatus.PrepareShipment.ToString()]</p>
                                </div>
                            }
                            @if (Order?.ShippingDate != null && Order?.ShippedBy != null)
                            {
                                <div class="col-12 d-flex justify-content-between">
                                    <p>@Order?.ShippingDate?.ToShortDateString()</p>
                                    <p>@Order?.ShippedBy</p>
                                    <p>@L[ShippingStatus.Shipped.ToString()]</p>
                                </div>
                            }
                            <div class="col-12 d-flex justify-content-between">
                                <p>@Order?.CancellationDate?.ToShortDateString()</p>
                                <p>@Order?.ClosedBy</p>
                                <p>@L[ShippingStatus.Closed.ToString()]</p>
                            </div>
                        }
                    </div>
                </CardBody>
            </Card>
            @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
            {
                <Card>
                    <CardBody>
                        <div class="row">
                            <div class="col-12 d-flex justify-content-between">
                                <p class="fw-bold">@L["ManualStatusUpdate"]</p>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12 d-flex justify-content-between">
                                <Select TValue="ShippingStatus"
                                        Class="form-select form-select-sm"
                                        SelectedValue="@Order.ShippingStatus"
                                        SelectedValueChanged="@(e => ShippingStatusChanged(e))">
                                    @if (Order.ShippingStatus is not ShippingStatus.Exchange)
                                    {
                                        <SelectItem />
                                        @foreach (var enumValue in Enum.GetValues(typeof(ShippingStatus)))
                                        {
                                            @if (enumValue.ToString() is not "Exchange")
                                            {
                                                <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                                            }
                                        }
                                    }
                                </Select>
                            </div>
                        </div>
                    </CardBody>
                </Card>
            }
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            <h4 class="d-inline-block">@L["OrderItems"]</h4>
        </div>
        @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
        {
            <div class="col-6 text-end">
                @if (IsItemsEditMode)
                {
                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger" Clicked="CancelOrderItemChanges">
                        @L["Cancel"]
                    </Button>
                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="SubmitOrderItemChanges">
                        <i class="fa fa-pencil"></i>
                        @L["SaveChanges"]
                    </Button>
                }
                else
                {
                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="ToggleEditMode">
                        <i class="fa fa-pencil"></i>
                        @L["Edit"]
                    </Button>
                }
            </div>
        }
        <div class="col-12">
            <Card>
                <CardBody>
                    <table class="table table-responsive table-striped text-center">
                        <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>@L["Quantity"]</th>
                                <th>@L["UnitPrice"]</th>
                                <th>@L["Subtotal"]</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Order is not null && Order.OrderItems is not null)
                            {
                                @foreach (OrderItemDto item in Order.OrderItems)
                                {
                                    <tr>
                                        <td>
                                            <InputCheckbox class="form-check-input" @bind-Value="item.IsSelected" />
                                        </td>
                                        <td class="text-start" style="width: 50%;">
                                            @if (item.ItemType is ItemType.Item)
                                            {
                                                string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                @if (!string.IsNullOrEmpty(firstImage))
                                                {
                                                    <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                }
                                                @item.Item?.ItemName
                                                <br />
                                                @item.Spec
                                            }

                                            @if (item.ItemType is ItemType.SetItem)
                                            {
                                                string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                <Div>
                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                    {
                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                    }
                                                    @item.SetItem?.SetItemName
                                                    <br />
                                                    @item.Spec
                                                </Div>
                                            }

                                            @if (item.ItemType is ItemType.Freebie)
                                            {
                                                string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                @if (!string.IsNullOrEmpty(firstImage))
                                                {
                                                    <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                }
                                                @item.Freebie?.ItemName
                                                <br />
                                                @item.Spec
                                            }
                                        </td>
                                        @if (item.IsSelected && IsItemsEditMode)
                                        {
                                            UpdateOrderItemDto? thisItem = EditingItems.FirstOrDefault(e => e.Id == item.Id);

                                            @if (thisItem != null)
                                            {
                                                <td>
                                                    <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsQuantiyError ? "invalid" : "")" @bind-value="thisItem.Quantity" @onblur="() => CalculateTotal(thisItem)" />
                                                </td>
                                                <td>
                                                    <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsItemPriceError ? "invalid" : "")" @bind-value="thisItem.ItemPrice" @onblur="() => CalculateTotal(thisItem)" />
                                                </td>
                                                <td>
                                                    $@thisItem.TotalAmount.ToString("N2")
                                                </td>
                                            }
                                        }
                                        else
                                        {
                                            <td>
                                                @item.Quantity
                                            </td>
                                            <td>
                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                            </td>
                                            <td>
                                                $@item.TotalAmount.ToString("N2")
                                            </td>
                                        }
                                    </tr>

                                    if (item.ItemType is ItemType.SetItem &&
                                    item.SetItem is not null &&
                                    item.SetItem.SetItemDetails is { Count: > 0 })
                                    {
                                        @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                        {
                                            <tr>
                                                <td colspan="5">
                                                    <Table>
                                                        <tr>
                                                            <td style="width: 10%; text-align: right;">
                                                                <InputCheckbox class="form-check-input" @bind-Value="setItem.IsSelected" />
                                                            </td>
                                                            <td class="text-start" style="width: 90%;">
                                                                @{
                                                                    string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                }

                                                                <Div>
                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @setItem.Item?.ItemName
                                                                </Div>
                                                            </td>
                                                        </tr>
                                                    </Table>
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                                <tr>
                                    <td colspan="2" class="text-end">
                                        @L["Subtotal"]
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                        $@Order.OrderItems.Sum(x => x.TotalAmount).ToString("N2")
                                    </td>
                                </tr>
                                <tr>
                                    <td colspan="2" class="text-end">
                                        @L["DeliveryFee"]
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    @* <td> *@
                                        @if (Order.DeliveryCost is null) 
                                        {
                                            <td>$0</td>
                                        }

                                        else 
                                        {
                                            <td>$@(Order.DeliveryCost?.ToString("N2"))</td>
                                        }
                                        @* $@((Order.TotalAmount - Order.OrderItems.Sum(x => x.TotalAmount)).ToString("N2")) *@
                                    @* </td> *@
                                </tr>
                                @if (Order.RefundAmount > 0) 
                                {
                                    <tr>
                                        <td colspan="2" class="text-end">
                                            @L["RefundAmount"]
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                        </td>
                                        <td>
                                            $@Order.RefundAmount.ToString("N2")
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td colspan="2" class="text-end">
                                        @L["Total"]
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                    </td>
                                    <td>
                                        $@Order.TotalAmount.ToString("N2")
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </CardBody>
            </Card>
        </div>
    </div>

    <div class="row">
        <div class="col-6">
            <h4 class="d-inline-block">@L["OrderDelivery"]</h4>
        </div>

        <div class="col-12">
            <Card>
                <CardBody>
                    <DataGrid TItem="OrderDeliveryDto"
                              Data="@OrderDeliveries"
                              @bind-SelectedRow="@SelectedOrder"
                              DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                    Responsive
                               RowClicked="ToggleRow">
                         <DataGridColumns>
                             <DataGridCommandColumn />

                             <DataGridColumn Field="@nameof(OrderDeliveryDto.DeliveryNo)" Caption="@L["DeliveryNo"]">
                                 <DisplayTemplate>
                                     @{
                                        var isExpanded = ExpandedRows.Contains(context.Id);
                                        var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                    }
                                    <i class="@chevronClass"></i>
                                    @context.DeliveryNo
                                </DisplayTemplate>
                            </DataGridColumn>

                            <DataGridColumn Field="@nameof(OrderDeliveryDto.DeliveryMethod)" Caption="@L["DeliveryMethod"]">
                                <DisplayTemplate>
                                    @if (context.DeliveryMethod is DeliveryMethod.DeliveredByStore && context.ActualDeliveryMethod is not null)
                                    {
                                        @(L[context.DeliveryMethod.ToString()] + " (" + L[context.ActualDeliveryMethod.ToString()] + ")")
                                    }
                                    else
                                    {
                                        @L[context.DeliveryMethod.ToString()]
                                    }
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDeliveryDto.LastModificationTime)" Caption="@L["LastUpdatedDate"]">
                                <DisplayTemplate>
                                    @context.LastModificationTime
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDeliveryDto.Editor)" Caption="@L["Editor"]">
                                <DisplayTemplate>
                                    @context.Editor
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDeliveryDto.DeliveryStatus)" Caption="@L["DeliveryStatus"]">
                                <DisplayTemplate>
                                    @L[context.DeliveryStatus.ToString()]
                                </DisplayTemplate>

                            </DataGridColumn>
                            <DataGridColumn Caption="@L["DeliveryTemperature"]">
                                <DisplayTemplate>
                                    @if (context.Items.Count > 0)
                                    {
                                        @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                    }
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Caption="@L["AllPayLogisticsID"]">
                                <DisplayTemplate>
                                    @context.AllPayLogisticsID
                                </DisplayTemplate>
                            </DataGridColumn>

                            <DataGridColumn Width="300px"
                                            TItem="OrderDeliveryDto"
                                            Field="@nameof(OrderDeliveryDto.Id)"
                                            Sortable="false"
                                            Caption="@L["Actions"]">
                                <DisplayTemplate>
                                    @if (Order.OrderType != OrderType.MargeToNew && Order.OrderStatus != OrderStatus.Refund)
                                    {

                                        <div class="btn-group me-1" role="group" aria-label="Button group with nested dropdown">
                                            @if (CheckForDeliveryMethod(context.DeliveryMethod))
                                            {
                                                <Button Type="ButtonType.Button" Clicked="()=>CreateOrderLogistics(context)" Class="btn btn-primary">@L["ShipmentNotify"]</Button>
                                            }
                                            else
                                            {
                                                <Button Disabled Type="ButtonType.Button" Clicked="()=>CreateOrderLogistics(context)" Class="btn btn-primary">@L["ShipmentNotify"]</Button>
                                            }
                                            <Button Type="ButtonType.Button" Clicked="() => OpenShipmentModal(context)" style="margin-left: 1px;" Class="btn btn-primary"><Icon Class="dropdown-toggle"></Icon></Button>


                                        </div>
                                        @*   <Button Type="ButtonType.Button" Clicked="() => OpenShipmentModal(context)" Class="btn btn-sm btn-primary me-1">
                                    @L["ShipmentNotify"]
                                    </Button> *@
                                        <Button Type="ButtonType.Button"
                                                Clicked="() => TestLabel(context)"
                                                Class="btn btn-sm btn-secondary me-1"
                                                hidden>
                                            Test Label
                                        </Button>
                                        @if (context.DeliveryStatus is DeliveryStatus.ToBeShipped)
                                        {
                                            <Button Type="ButtonType.Button"
                                                    Clicked="() => OrderItemShipped(context)"
                                                    Class="btn btn-sm btn-secondary me-1">
                                                @L["Shipped"]
                                            </Button>
                                        }
                                        else
                                        {
                                            <Button Type="ButtonType.Button"
                                                                Disabled
                                                     Clicked="() => OrderItemShipped(context)"
                                                     Class="btn btn-sm btn-secondary me-1">
                                                 @L["Shipped"]
                                            </Button>
                                        }

                                    }
                                </DisplayTemplate>
                            </DataGridColumn>
                        </DataGridColumns>
                        <DetailRowTemplate>
                            @{
                                isDeliveryCostDisplayed = false;

                                isNormal = context.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Normal);

                                isFreeze = context.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Freeze) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0;

                                isFrozen = context.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Frozen) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0 &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Freeze)) is 0;
                            }
                            <table class="table table-responsive table-striped text-center">
                                <thead>
                                    <tr>
                                        <th></th>
                                        <th>@L["Temperature"]</th>
                                        <th>@L["DeliveryCost"]</th>
                                        <th>@L["Quantity"]</th>
                                        <th>@L["UnitPrice"]</th>
                                        <th>@L["Subtotal"]</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @if (context.Items is not null && context.Items.Count is not 0)
                                    {
                                        @foreach (OrderItemDto item in context.Items)
                                        {
                                            <tr>
                                                <td class="text-start" style="width: 50%;">
                                                    @if (item.ItemType is ItemType.Item)
                                                    {
                                                        string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                        {
                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                        }
                                                        @item.Item?.ItemName
                                                    }

                                                    @if (item.ItemType is ItemType.SetItem)
                                                    {
                                                        string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                        <Div>
                                                            @if (!string.IsNullOrEmpty(firstImage))
                                                            {
                                                                <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                            }
                                                            @item.SetItem?.SetItemName
                                                        </Div>
                                                    }

                                                    @if (item.ItemType is ItemType.Freebie)
                                                    {
                                                        string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                        {
                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                        }
                                                        @item.Freebie?.ItemName
                                                    }
                                                </td>
                                                @if (item.IsSelected && IsItemsEditMode)
                                                {
                                                    var thisItem = EditingItems.FirstOrDefault(e => e.Id == item.Id);
                                                    @if (thisItem != null)
                                                    {
                                                        <td>
                                                            <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsQuantiyError ? "invalid" : "")" @bind-value="thisItem.Quantity" @onblur="() => CalculateTotal(thisItem)" />
                                                        </td>
                                                        <td>
                                                            <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsItemPriceError ? "invalid" : "")" @bind-value="thisItem.ItemPrice" @onblur="() => CalculateTotal(thisItem)" />
                                                        </td>
                                                        <td>
                                                            $@thisItem.TotalAmount.ToString("N2")
                                                        </td>
                                                    }
                                                }
                                                else
                                                {
                                                    <td>
                                                        @L[item.DeliveryTemperature.ToString()]
                                                    </td>
                                                    <td>
                                                        @if (!isDeliveryCostDisplayed && isNormal ||
                                                       !isDeliveryCostDisplayed && isFreeze ||
                                                       !isDeliveryCostDisplayed && isFrozen)
                                                        {
                                                            if (Order.DeliveryMethod == DeliveryMethod.DeliveredByStore)
                                                            {
                                                                @GetDeliveryCost(item.DeliveryTemperature).ToString("N2")
                                                            }
                                                            else
                                                            {
                                                                @(OrderDeliveryCost?.ToString("N2") ?? "0.00")
                                                            }

                                                            isDeliveryCostDisplayed = true;
                                                        }
                                                        else
                                                        {
                                                            @(0.00.ToString("N2"))
                                                        }
                                                    </td>
                                                    <td>
                                                        @item.Quantity
                                                    </td>
                                                    <td>
                                                        <span>$@item.ItemPrice.ToString("N2")</span>
                                                    </td>
                                                    <td>
                                                        $@CalculateItemTotal(item, !isDeliveryCostDisplayed && isNormal ||
                                                                !isDeliveryCostDisplayed && isFreeze ||
                                                                !isDeliveryCostDisplayed && isFrozen).ToString("N2")
                                                    </td>
                                                }
                                            </tr>

                                            if (item.ItemType is ItemType.SetItem &&
                                            item.SetItem is not null &&
                                            item.SetItem.SetItemDetails is { Count: > 0 })
                                            {
                                                @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                {
                                                    <tr>
                                                        <td colspan="6">
                                                            <Table>
                                                                <tr>
                                                                    <td></td>
                                                                    <td class="text-start" style="width: 100%;">
                                                                        @{
                                                                            string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                        }

                                                                        <Div>
                                                                            @if (!string.IsNullOrEmpty(firstImage))
                                                                            {
                                                                                <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                            }
                                                                            @setItem.Item?.ItemName
                                                                        </Div>
                                                                    </td>
                                                                </tr>
                                                            </Table>
                                                        </td>
                                                    </tr>
                                                }
                                            }
                                        }
                                        @if (Order.DeliveryMethod is DeliveryMethod.DeliveredByStore)
                                        {
                                            <tr>
                                                <td class="text-center" style="width: 50%;" />
                                                <td class="text-center" style="width: 10%;">Delivery Cost</td>
                                                <td class="text-center" style="width: 10%;" />
                                                <td class="text-center" style="width: 10%;" />
                                                <td class="text-center" style="width: 10%;" />
                                                <td>
                                                    $@(context.Items.GroupBy(s => s.DeliveryTemperatureCost)
                                                       .Select(s => s.Key)
                                                       .FirstOrDefault())
                                                </td>
                                            </tr>
                                        }
                                        <tr>
                                            <td class="text-center" style="width: 50%;" />
                                            <td class="text-center" style="width: 10%;">Total</td>
                                            <td class="text-center" style="width: 10%;" />
                                            <td class="text-center" style="width: 10%;" />
                                            <td class="text-center" style="width: 10%;" />
                                            <td>
                                                @{
                                                    SetTotalAmount(context); Task.Delay(500);
                                                }

                                                $@(
                                                   (context.Items.Sum(s => s.TotalAmount)
                                                   + (Order.DeliveryMethod is DeliveryMethod.DeliveredByStore
                                                   ? context.Items.GroupBy(s => s.DeliveryTemperatureCost)
                                                   .Select(s => s.Key)
                                                   .FirstOrDefault()
                                                   : context.TotalAmount!.Value)).ToString("N2")
                                                   )
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </DetailRowTemplate>
                    </DataGrid>
                </CardBody>
            </Card>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h4>@L["StoreComments"]</h4>
            <Card>
                <CardBody>
                    <div class="row">
                        <EditForm Model="@StoreComments" OnValidSubmit="SubmitStoreCommentsAsync">
                            <DataAnnotationsValidator />
                            <div class="col-12 mb-2">
                                <InputTextArea class="form-control" @bind-Value="@StoreComments.Comment"></InputTextArea>
                                <ValidationMessage For="@(() => StoreComments.Comment)" />
                            </div>
                            @if (Order.OrderType != OrderType.MargeToNew)
                            {
                                <div class="col-12 text-end">
                                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger me-1" Clicked="() => StoreComments = new()">
                                        @L["Cancel"]
                                    </Button>
                                    @if (StoreComments.Id == null)
                                    {
                                        <Button Type="ButtonType.Submit" Class="btn btn-sm btn-primary">
                                            <i class="fa fa-check"></i>
                                            @L["Save"]
                                        </Button>
                                    }
                                    else
                                    {
                                        <Button Type="ButtonType.Submit" Class="btn btn-sm btn-primary">
                                            <i class="fa fa-check"></i>
                                            @L["Update"]
                                        </Button>
                                    }
                                </div>
                            }
                        </EditForm>
                    </div>
                </CardBody>
            </Card>
        </div>
        <div class="col-6">
            <h4>@L["StoreCommentsHistory"]</h4>
            <Card>
                <CardBody>
                    <div class="row">
                        @if (Order != null && Order.StoreComments != null)
                        {
                            @foreach (var comment in Order.StoreComments)
                            {
                                <div class="col-12">
                                    <span class="fw-bold me-2">
                                        @comment.User?.Email
                                    </span>
                                    <span class="me-2">
                                        @comment.CreationTime
                                    </span>
                                    @if (comment.CreatorId == CurrentUser.Id)
                                    {
                                        <span>
                                            <i class="fa fa-pencil text-secondary cursor-pointer" @onclick="() => EditStoreComment(comment.Id, comment.Comment)"></i>
                                        </span>
                                    }
                                    <p class="me-2">@comment.Comment</p>
                                </div>
                            }
                        }
                    </div>
                </CardBody>
            </Card>
        </div>
    </div>
    <div class="row">
        <div class="col-6">
            <h4>@L["StoreCustomerServiceReply"]</h4>
            <Card>
                <CardBody>
                    <div class="row">
                        <EditForm Model="@StoreCustomerService" OnValidSubmit="SubmitCustomerServiceReplyAsync">
                            <DataAnnotationsValidator />
                            <div class="col-12 mb-2">
                                <InputTextArea class="form-control" @bind-Value="@StoreCustomerService.Message"></InputTextArea>
                                <ValidationMessage For="@(() => StoreCustomerService.Message)" />
                            </div>
                            @if (Order.OrderType != OrderType.MargeToNew)
                            {
                                <div class="col-12 text-end">
                                    <Button Type="ButtonType.Button" Class="btn btn-sm btn-danger me-1" Clicked="() => StoreCustomerService = new()">
                                        @L["Cancel"]
                                    </Button>
                                    @*   @if (StoreCustomerService.Id == null)
                                { *@
                                    <Button Type="ButtonType.Submit" Class="btn btn-sm btn-primary">
                                        <i class="fa fa-check"></i>
                                        @L["Save"]
                                    </Button>
                                    @*  }
                                else
                                {
                                <Button Type="ButtonType.Submit" Class="btn btn-sm btn-primary">
                                <i class="fa fa-check"></i>
                                @L["Update"]
                                </Button>
                                } *@
                                </div>
                            }
                        </EditForm>
                    </div>
                </CardBody>
            </Card>
        </div>
        <div class="col-6">
            <h4>@L["CustomerServiceHistory"]</h4>
            <Card>
                <CardBody>
                    <div class="row">
                        @if (CustomerServiceHistory.Count > 0)
                        {
                            @foreach (var comment in CustomerServiceHistory)
                            {
                                <div class="col-12">
                                    <span class="fw-bold me-2">
                                        @comment.SenderName
                                    </span>
                                    <span class="me-2">
                                        @comment.Timestamp
                                    </span>
                                    @*  @if (comment.CreatorId == CurrentUser.Id)
                            {
                            <span>
                            <i class="fa fa-pencil text-secondary cursor-pointer" @onclick="() => EditStoreComment(comment.Id, comment.Comment)"></i>
                            </span>
                            } *@
                                    <p class="me-2">@comment.Message</p>
                                </div>
                            }
                        }
                    </div>
                </CardBody>
            </Card>
        </div>
    </div>
    <Modal @ref="CreateShipmentModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true">
            <EditForm Model="@shipments" OnValidSubmit="ApplyShipmentAsync">
                <ModalHeader>
                    <ModalTitle>@L["ShipmentNotify"]</ModalTitle>
                        <CloseButton Clicked="CloseShipmentModal" onv />
                    </ModalHeader>
                    <ModalBody>

                        <DataAnnotationsValidator />
                        <div class="row my-2">
                            <label class="form-label">@L["ShippingMethod"]</label>
                        <div class="col-12">
                            <InputSelect class="form-select" @bind-Value="@shipments.ShippingMethod">
                                @foreach (DeliveryMethod option in Enum.GetValues(typeof(DeliveryMethod)))
                                {
                                    <option value="@option">
                                        @L[option.ToString()]
                                    </option>
                                }
                            </InputSelect>
                        </div>
                    </div>
                    <div class="row my-2">
                        <label class="form-label">@L["ShippingNumber"]</label>
                        <div class="col-12 mb-2">
                            <InputText class="form-control" @bind-Value="@shipments.ShippingNumber"></InputText>

                        </div>
                    </div>
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary"
                            Clicked="CloseShipmentModal">
                        @L["Cancel"]
                    </Button>
                    <Button Type="ButtonType.Submit" Class="btn btn-primary">
                        <i class="fa fa-check"></i>
                        @L["Save"]
                    </Button>
                </ModalFooter>
            </EditForm>
        </ModalContent>
    </Modal>

    <Modal @ref="RefundModal">
        <ModalBackdrop />
        <ModalContent IsCentered="true" Size="ModalSize.Large">
            <EditForm Model="@refunds" OnValidSubmit="ApplyRefundAsync">
                <ModalHeader>
                    <ModalTitle>@L["Refund"]</ModalTitle>
                        <CloseButton Clicked="CloseRefundModal" onv />
                    </ModalHeader>
                    <ModalBody>

                        <DataAnnotationsValidator />
                        <Div Class="row">
                            <Div Class="col-6">
                                <Label>
                                    @L["RefundChannel"]: @(GetRefundChannel())
                            </Label>
                        </Div>
                        <Div Class="col-6">
                            <Label>
                                @L["PaymentStatus"]: @(PaymentStatus)
                            </Label>
                        </Div>
                    </Div>

                    <div class="row my-2">
                        <label class="form-label">@L["RefundWholeOrder"]</label>
                        <div class="col-12">
                            <input type="checkbox" class="form-check-input" checked="@refunds.IsRefundOrder" @onchange="() => UpdateCheckState(1)" />
                        </div>
                    </div>
                    <div class="row my-2">
                        <label class="form-label">@L["SelectItemForRefund"]</label>
                        <div class="col-12 mb-2">
                            <input type="checkbox" class="form-check-input" checked="@refunds.IsRefundItems" @onchange="() => UpdateCheckState(2)" />

                        </div>
                    </div>
                    @if (refunds.IsRefundItems)
                    {
                        <div class="row my-2">

                            <Card>
                                <CardBody>
                                    <table class="table table-responsive table-striped text-center">
                                        <thead>
                                            <tr>
                                                <th></th>
                                                <th></th>
                                                <th>@L["Quantity"]</th>
                                                <th>@L["UnitPrice"]</th>
                                                <th>@L["Subtotal"]</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @if (Order is not null && Order.OrderItems is not null)
                                            {
                                                @foreach (OrderItemDto item in Order.OrderItems)
                                                {
                                                    <tr>
                                                        <td>
                                                            @if (item.ItemType is not ItemType.SetItem)
                                                            {
                                                                if (item.Quantity > 0) 
                                                                {
                                                                    <InputCheckbox class="form-check-input"
                                                                                   ValueChanged="@((e) => CheckboxChanged(e, item))"
                                                                                   ValueExpression="@(() => item.IsSelected)"
                                                                                   Value="item.IsSelected" />
                                                                }

                                                                else 
                                                                {
                                                                    <input type="checkbox" disabled class="form-check-input" />
                                                                }
                                                            }
                                                        </td>
                                                        <td class="text-start" style="width: 50%;">
                                                            @if (item.ItemType == ItemType.Item)
                                                            {
                                                                var firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                @if (!string.IsNullOrEmpty(firstImage))
                                                                {
                                                                    <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                }
                                                                @item.Item?.ItemName
                                                            }

                                                            @if (item.ItemType == ItemType.SetItem)
                                                            {
                                                                var firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                <Div Class="mx-4">
                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.SetItem?.SetItemName
                                                                </Div>
                                                            }

                                                            @if (item.ItemType == ItemType.Freebie)
                                                            {
                                                                var firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;
                                                                @if (!string.IsNullOrEmpty(firstImage))
                                                                {
                                                                    <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                }
                                                                @item.Freebie?.ItemName
                                                            }

                                                        </td>
                                                        @if (item.IsSelected && IsItemsEditMode)
                                                        {
                                                            var thisItem = EditingItems.FirstOrDefault(e => e.Id == item.Id);
                                                            @if (thisItem != null)
                                                            {
                                                                <td>
                                                                    <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsQuantiyError ? "invalid" : "")" @bind-value="thisItem.Quantity" @onblur="() => CalculateTotal(thisItem)" />
                                                                </td>
                                                                <td>
                                                                    <input type="number" min="1" class="form-control form-control-sm @(thisItem.IsItemPriceError ? "invalid" : "")" @bind-value="thisItem.ItemPrice" @onblur="() => CalculateTotal(thisItem)" />
                                                                </td>
                                                                <td>
                                                                    $@thisItem.TotalAmount.ToString("N2")
                                                                </td>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        }
                                                    </tr>
                                                }


                                                <tr>
                                                    <td colspan="2" class="text-end">
                                                        @L["RefundAmount"]
                                                    </td>
                                                    <td>
                                                    </td>
                                                    <td>
                                                    </td>
                                                    <td>
                                                        $@Order.OrderItems.Where(x => x.IsSelected == true).Sum(x => x.ItemPrice * x.Quantity).ToString("N2")
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </CardBody>
                            </Card>


                        </div>
                    }
                    <div class="row my-2">
                        <label class="form-label">@L["RefundAmount"]</label>
                        <div class="col-12 mb-2">
                            <input type="checkbox" class="form-check-input" checked="@refunds.IsRefundAmount" @onchange="() => UpdateCheckState(3)" />

                        </div>
                    </div>
                    @if (refunds.IsRefundAmount)
                    {
                        <div class="row my-2">
                            <label class="form-label">@L["RefundAmount"]</label>
                            <div class="col-12 mb-2">


                                <InputNumber class="form-control" @bind-Value="@refunds.Amount" />

                            </div>
                        </div>
                    }
                </ModalBody>
                <ModalFooter>
                    <Button Color="Color.Secondary"
                            Clicked="CloseRefundModal">
                        @L["Cancel"]
                    </Button>
                    <Button Type="ButtonType.Submit" Class="btn btn-primary">
                        <i class="fa fa-check"></i>
                        @L["Save"]
                    </Button>
                </ModalFooter>
            </EditForm>
        </ModalContent>
    </Modal>
</LoadingIndicator>

@code {
    private Dictionary<Guid, bool> _deliveryCostRendered = new Dictionary<Guid, bool>();

    private decimal CalculateItemTotal(OrderItemDto item, bool includeDeliveryCost)
    {
        var itemTotal = item.TotalAmount;

        if (Order.DeliveryMethod == DeliveryMethod.DeliveredByStore)
        {
            // Add specific delivery cost based on temperature
            itemTotal += GetDeliveryCost(item.DeliveryTemperature);
        }
        else if (includeDeliveryCost)
        {
            // Only add the order-wide delivery cost for the first applicable item
            itemTotal += OrderDeliveryCost ?? 0.00M;
        }

        return itemTotal;
    }

    private bool ShouldDisplayDeliveryCost(Guid itemId)
    {
        if (!_deliveryCostRendered.ContainsKey(itemId))
        {
            _deliveryCostRendered[itemId] = true;
            return true;
        }

        return false;
    }
}
