@page "/Orders"
@using Kooco.Pikachu.DeliveryTemperatureCosts
@using Kooco.Pikachu.ElectronicInvoiceSettings
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.OrderDeliveries
@using Kooco.Pikachu.OrderItems;
@using Kooco.Pikachu.GroupBuys;
@using Kooco.Pikachu.Orders;
@using Kooco.Pikachu.StoreLogisticOrders
@using Microsoft.Extensions.Localization;
@using Blazorise;
@using Blazorise;
@using Volo.Abp.AspNetCore.Components.Messages;
@using Blazorise.LoadingIndicator;
@using Kooco.Pikachu.Items.Dtos;
@inject IStringLocalizer<PikachuResource> L;
@inject NavigationManager NavigationManager;
@inject IUiMessageService _uiMessageService;
@inject IElectronicInvoiceAppService _electronicInvoiceAppService;
@inject IOrderAppService _orderAppService;
@inject IStoreLogisticsOrderAppService _StoreLogisticsOrderAppService;
@inject IOrderDeliveryRepository _OrderDeliveryRepository;
@inject IOrderDeliveryAppService _OrderDeliveryAppService;
@inject IGroupBuyAppService _groupBuyAppService;
@inject IDeliveryTemperatureCostAppService _DeliveryTemperatureCostAppService;
@using Microsoft.JSInterop;
@inject IJSRuntime JSRuntime;

<LoadingIndicator @ref="loading" FullScreen FadeIn>
    <div class="row">
        <div class="col-3">
            <h3>@L["OrdersList"]</h3>
        </div>
        <br />
        <div class="col-9 text-lg-end">

            <div class="custom-check-group me-1">
                <input type="checkbox" class="form-check-input" checked="@IsAllSelected" @onchange="HandleSelectAllChange"></input>
                <Label Class="form-label">@L["SelectAll"]</Label>
            </div>

            @if (SelectedTabName is PikachuResource.ToBeShipped)
            {
                @if ((Orders.Where(x => x.IsSelected).Count() < 1))
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["Shipped"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button"
                            Clicked="OrderItemShipped"
                            Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>

                        @L["Shipped"]
                    </Button>
                }
            }

            @if (SelectedTabName is PikachuResource.ToBeShipped)
            {
                @if ((Orders.Where(x => x.IsSelected).Count() < 1))
                {
                    <Dropdown Disabled>
                        <Button Size="Size.ExtraSmall" Disabled class="btn btn-sm btn-primary" @onclick="OnPrintShippedLabel">@L["PrintShippedLabel"]</Button>
                        <DropdownToggle Size="Size.ExtraSmall" Class="btn-sm" Color="Color.Primary" Split />
                        <DropdownMenu>
                            <DropdownItem>Action</DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
                }
                else
                {
                    <Dropdown>
                        <Button Size="Size.ExtraSmall" class="btn btn-sm btn-primary" Clicked="OnPrintShippedLabel">@L["PrintShippedLabel"]</Button>
                        <DropdownToggle Size="Size.ExtraSmall" Class="btn-sm" Color="Color.Primary" Split />
                        <DropdownMenu>
                            <DropdownItem Clicked="OnPrintShippedLabel10Cm">@L["PrintShippedLabel10cm"]</DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
                }
            }
            @if (SelectedTabName is PikachuResource.PrepareShipment)
            {
                @if (Orders.Where(x => x.IsSelected).Count() < 1)
                {
                    <Button Type="@ButtonType.Button"
                            Disabled
                            Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print" />
                        @L["GenerateDeliveryNumber"]
                    </Button>
                }

                else if (Orders.Where(w => w.IsSelected && (w.DeliveryMethod is EnumValues.DeliveryMethod.SelfPickup ||
                w.DeliveryMethod is EnumValues.DeliveryMethod.HomeDelivery)).Count() >= 1)
                {
                    <Dropdown Display="Display.Inline">
                        <Button Type="@ButtonType.Button"
                                Clicked="OnGenerateDeliveryNumber"
                                Class="btn-sm btn-primary"
                                Border="Border.Rounded.Is2">
                            <i class="fa fa-print" />
                            @L["GenerateDeliveryNumber"]
                        </Button>
                        <DropdownToggle Color="Color.Primary"
                                        Size="Size.Small"
                                        Border="Border.Rounded.Is2"
                                        Split />
                        <DropdownMenu>
                            <DropdownItem Clicked="ShippingStatusChange"
                                          Disabled="@(Orders.Any(a => a.IsSelected &&
                                                                      a.DeliveryMethod is EnumValues.DeliveryMethod.HomeDelivery))">
                                @L["SelfPickupShipping"]
                            </DropdownItem>
                            <DropdownDivider />
                            <DropdownItem Clicked="ShippingStatusChange"
                                          Disabled="@(Orders.Any(a => a.IsSelected &&
                                                                      a.DeliveryMethod is EnumValues.DeliveryMethod.SelfPickup))">
                                @L["PersonalDeliveryShipping"]
                            </DropdownItem>
                        </DropdownMenu>
                    </Dropdown>
                }

                else if (Orders.Where(w => w.IsSelected && (w.DeliveryMethod is not EnumValues.DeliveryMethod.SelfPickup ||
                w.DeliveryMethod is not EnumValues.DeliveryMethod.HomeDelivery)).Count() >= 1)
                {
                    <Button Type="@ButtonType.Button"
                            Clicked="OnGenerateDeliveryNumber"
                            Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print" />
                        @L["GenerateDeliveryNumber"]
                    </Button>
                }
            }

            @if (SelectedTabName is PikachuResource.Shipped)
            {
                @if (Orders.Where(x => x.IsSelected).Count() < 1)
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["Delivered"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button"
                            Clicked="OrderItemDelivered"
                            Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["Delivered"]
                    </Button>
                }
            }

            @if (SelectedTabName is PikachuResource.Delivered)
            {
                @if (Orders.Where(x => x.IsSelected).Count() < 1)
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["PickedUp"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button"
                            Clicked="OrderItemPickedUp"
                            Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["PickedUp"]
                    </Button>
                }
            }

            @if (SelectedTabName is "All" ||
            SelectedTabName is PikachuResource.PrepareShipment ||
            SelectedTabName is PikachuResource.ToBeShipped ||
            SelectedTabName is PikachuResource.Shipped ||
            SelectedTabName is PikachuResource.Delivered ||
            SelectedTabName is PikachuResource.Completed)
            {
                @if ((Orders.Where(x => x.IsSelected).Count() < 1) || (Orders.Where(x => !x.InvoiceNumber.IsNullOrEmpty() && x.IsSelected).Any()))
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["IssueInvoice"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button" @onclick="IssueInvoice" Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["IssueInvoice"]
                    </Button>
                }
            }

            @if (SelectedTabName is "All" || SelectedTabName is PikachuResource.PrepareShipment)
            {
                @if (ShowCombineButton())
                {
                    <Button Type="@ButtonType.Button" Clicked="MergeOrders" Class="btn btn-sm btn-secondary">@L["CombineOrders"]</Button>
                }
                else
                {

                    <Button Disabled Type="@ButtonType.Button" Class="btn btn-sm btn-secondary">@L["CombineOrders"]</Button>
                }
            }

            @if (SelectedTabName is "All" || SelectedTabName is PikachuResource.PrepareShipment)
            {
                @if (Orders.Where(x => x.IsSelected).Count() < 1)
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["Print"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button" @onclick="NavigateToOrderPrint" Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["Print"]
                    </Button>
                }
            }

            @if (SelectedTabName is PikachuResource.WaitingForPayment)
            {
                @if (Orders.Where(x => x.IsSelected).Count() != 1)
                {
                    <Button Type="@ButtonType.Button" disabled Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["CloseOrder"]
                    </Button>
                }
                else
                {
                    <Button Type="@ButtonType.Button" Class="ms-1 btn btn-sm btn-primary">
                        <i class="fa fa-print"></i>
                        @L["CloseOrder"]
                    </Button>
                }
            }
              <PikachuButton Class="pk-btn-sm pk-btn-primary" Clicked="DownloadExcel">
                <Icon Name="IconName.FileDownload" Display="Display.InlineBlock"></Icon>
                @L["ExportAll"]
            </PikachuButton>
          
        </div>

        @if (SelectedTabName is PikachuResource.ToBeShipped)
        {
            <Div Class="col-12 text-lg-end">
                <h5>@L["Normal"]: @NormalCount @L["pieces"], @L["Freeze"]: @FreezeCount @L["pieces"], @L["Frozen"]: @FrozenCount @L["pieces"]</h5>
            </Div>
        }
    </div>
    <br />
    <Card>
        <CardBody>
            <Row>
                <Column ColumnSize="ColumnSize.Is10">
                    <Addons>
                        <Addon AddonType="AddonType.Body">
                            <TextEdit @bind-Text="@Filter" Style="border-radius: 0.5rem 0 0 0.5rem;" />
                        </Addon>
                        <Addon AddonType="AddonType.End">
                            <Button Type="ButtonType.Button" Color="Color.Primary" Clicked="(e) => OnSearch()"
                                    Style="border-radius: 0 0.5rem 0.5rem 0;">
                                <Icon Name="IconName.Search"></Icon>
                            </Button>
                        </Addon>
                    </Addons>
                </Column>
                <Column ColumnSize="ColumnSize.Is2">
                    <Button Class="btn-outline-primary w-100" Clicked="(() => FiltersVisible = !FiltersVisible)">
                        @L["Filters"]
                        <i class="fas @(FiltersVisible ? "fa-angles-up" : "fa-angles-down") ms-1"></i>
                    </Button>
                </Column>
            </Row>
            @if (FiltersVisible)
            {
                <Row Class="mt-2">
                    <Column ColumnSize="ColumnSize.Is3">
                        <Select TValue="Guid?"
                                SelectedValue="@SelectedGroupBuy"
                                SelectedValueChanged="@(e=>OnSearch(e))">
                            <SelectItem Value="@Guid.Empty">
                                @L["SelectGroupBuy"]
                            </SelectItem>
                            @foreach (var item in GroupBuyList)
                            {
                                <SelectItem Value="@item.Id">@item.Name</SelectItem>
                            }
                        </Select>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is3">
                        <Select TValue="string"
                                SelectedValueChanged="OnShippingMethodSelectChangeAsync">
                            <SelectItem Value="@string.Empty"> @L["SelectShippingMethod"] </SelectItem>
                            @foreach (string value in Enum.GetNames(typeof(DeliveryMethod)))
                            {
                                <SelectItem Value="@value">@L[value]</SelectItem>
                            }
                        </Select>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is6">
                        <Div Class="d-flex w-100 align-items-center gap-1">
                            <DateEdit Date="StartDate" DateChanged="(e) => OnDateChange(e, EndDate)" TValue="DateTime?" />
                            <Span>~</Span>
                            <DateEdit Date="EndDate" DateChanged="(e) => OnDateChange(StartDate, e)" TValue="DateTime?" />
                        </Div>
                    </Column>
                </Row>
            }
        </CardBody>
    </Card>
    <Tabs RenderMode="TabsRenderMode.LazyReload"
          SelectedTab="@SelectedTabName"
          SelectedTabChanged="SelectedTabChanged"
          Justified="true">
        <Items>
            <Tab Name="All" TextSize="TextSize.Small">All</Tab>
            @foreach (string value in Enum.GetNames(typeof(ShippingStatus)).Where(w => w is not PikachuResource.Exchange && w is not PikachuResource.EnterpricePurchase))
            {
                <Tab Name="@value" TextSize="TextSize.Small">@L[value]</Tab>
            }
        </Items>
        <Content>
            <TabPanel Name="All">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="OnDataGridReadAsync"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.OrderId == SelectedOrder?.OrderId)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                 
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate>
                                @{
                                    var orderItems = (context as OrderDto).OrderItems;
                                    <div class="mx-2 px-3 py-2 border">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@L["RecipientInformation"]</td>
                                                    @if (context.DeliveryMethod is not EnumValues.DeliveryMethod.DeliveredByStore)
                                                    {
                                                        <td>@context.RecipientName / @context.RecipientPhone</td>
                                                    }

                                                    else
                                                    {
                                                        <td>
                                                            <span>@L["Normal"] :- @context.RecipientNameDbsNormal / @context.RecipientPhoneDbsNormal</span>
                                                            <hr />
                                                            <span>@L["Freeze"] :- @context.RecipientNameDbsFreeze / @context.RecipientPhoneDbsFreeze</span>
                                                            <hr />
                                                            <span>@L["Frozen"] :- @context.RecipientNameDbsFrozen / @context.RecipientPhoneDbsFrozen</span>
                                                        </td>
                                                    }
                                                </tr>
                                                <tr>
                                                    <td>@L["ShippingMethod"]</td>
                                                    <td>@L[context.DeliveryMethod.ToString()]</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["PostalCode"]</td>

                                                    <td>@context.PostalCode</td>
                                                </tr>

                                                <tr>
                                                    <td>@L["City"]</td>

                                                    <td>@context.City</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Address"]</td>
                                                    <td class="d-none">@context.AddressDetails</td>
                                                    <td>@context.AddressDetails</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Remarks"]</td>
                                                    <td>@context.Remarks</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["MerchantRemarks"]</td>
                                                    <td>
                                                        @foreach (var item in context.StoreComments.OrderByDescending(x => x.CreationTime))
                                                        {
                                                            if (context.StoreComments.Count > 1)
                                                            {
                                                                <span> @item.Comment /</span>
                                                            }
                                                            else
                                                            {
                                                                <span> @item.Comment</span>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>@L["OrderItems"]</td>
                                                    <td>
                                                        @foreach (OrderItemDto item in orderItems.OrderBy(o => o.ItemType).ToList())
                                                        {
                                                            @if (item.ItemType is ItemType.Item)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Item?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType is ItemType.SetItem)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>- @item.SetItem?.SetItemName x @item.Quantity</span>
                                                                </div>

                                                                <div mb-1>
                                                                    <span>@item.SetItem?.SetItemName x @item.Quantity</span>
                                                                    <br />

                                                                    @{
                                                                        List<string> setItemNames = (item.Spec != null ? [.. item.Spec.Split(", ")] : []);
                                                                    }

                                                                    @foreach (string setItemName in setItemNames)
                                                                    {
                                                                        <span>- @setItemName</span>

                                                                        <br />
                                                                    }
                                                                </div>
                                                            }
                                                            @if (item.ItemType is ItemType.Freebie)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Freebie?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="WaitingForPayment">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "WaitingForPayment"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate>
                                @{
                                    var orderItems = (context as OrderDto).OrderItems;
                                    <div class="mx-2 px-3 py-2 border">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@L["RecipientInformation"]</td>
                                                    <td>@context.CustomerName / @context.CustomerPhone</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["ShippingMethod"]</td>
                                                    <td>@L[context.DeliveryMethod.ToString()]</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["PostalCode"]</td>

                                                    <td>@context.PostalCode</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["City"]</td>

                                                    <td>@context.City</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Address"]</td>
                                                    <td class="d-none">@context.AddressDetails</td>
                                                    <td>@context.AddressDetails</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Remarks"]</td>
                                                    <td>@context.Remarks</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["MerchantRemarks"]</td>
                                                    <td>
                                                        @foreach (var item in context.StoreComments.OrderByDescending(x => x.CreationTime))
                                                        {
                                                            if (context.StoreComments.Count > 1)
                                                            {
                                                                <span> @item.Comment /</span>
                                                            }
                                                            else
                                                            {
                                                                <span> @item.Comment</span>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>@L["OrderItems"]</td>
                                                    <td>
                                                        @foreach (OrderItemDto item in orderItems.OrderBy(o => o.ItemType).ToList())
                                                        {
                                                            @if (item.ItemType == ItemType.Item)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Item?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.SetItem)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.SetItem?.SetItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.Freebie)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Freebie?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="PrepareShipment">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "PrepareShipment"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && IsRowExpanded(e.Item))"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input"
                                                       Value="@context.IsSelected"
                                                       ValueExpression="@(() => context.IsSelected)"
                                                       ValueChanged="@(async (e) => await PrepareShipmentCheckboxChanged(e, context))" />
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate Context="order">
                                <DataGrid TItem="OrderDeliveryDto"
                                          @bind-SelectedRow="@SelectedOrderDelivery"
                                          ReadData="@(async (e) => await OnOrderDeliveryDataReadAsync(e, order.OrderId))"
                                          Data="@GetOrderDeliveries(order.OrderId)"
                                          DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrderDelivery?.Id)"
                                          Responsive
                                          Bordered
                                          Class="rm-table-min-height">
                                    <DataGridColumns>
                                        <DataGridColumn Caption="@L["Select"]" Width="30px">
                                            <DisplayTemplate>
                                                <input type="checkbox" class="form-check-input" />
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Method"]">
                                            <DisplayTemplate>@L[order.DeliveryMethod.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Last Updated Date"]">
                                            <DisplayTemplate>@L[order.LastModificationTime.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Editor"]">
                                            <DisplayTemplate>@L[context.Editor]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Status"]">
                                            <DisplayTemplate>@L[order.ShippingStatus.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Temperature"]">
                                            <DisplayTemplate>
                                                @if (context.Items.Count > 0)
                                                {
                                                    @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                                }
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                    </DataGridColumns>
                                    <DetailRowTemplate Context="orderDelivery">
                                                                            @{
                                isDeliveryCostDisplayed = false;

                                isNormal = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Normal);

                                isFreeze = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Freeze) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0;

                                isFrozen = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Frozen) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0 &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Freeze)) is 0;
                            }
                                        <table class="table table-responsive rm-table-min-height table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>@L["Temperature"]</th>
                                                    <th>@L["DeliveryCost"]</th>
                                                    <th>@L["Quantity"]</th>
                                                    <th>@L["UnitPrice"]</th>
                                                    <th>@L["Subtotal"]</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (orderDelivery.Items is not null && orderDelivery.Items.Count is not 0)
                                                {
                                                    @foreach (OrderItemDto item in orderDelivery.Items)
                                                    {
                                                        <tr>
                                                            <td class="text-start" style="width: 50%;">
                                                                @if (item.ItemType is ItemType.Item)
                                                                {
                                                                    string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Item?.ItemName
                                                                }

                                                                @if (item.ItemType is ItemType.SetItem)
                                                                {
                                                                    string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    <Div>
                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                        {
                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                        }
                                                                        @item.SetItem?.SetItemName
                                                                    </Div>
                                                                }

                                                                @if (item.ItemType is ItemType.Freebie)
                                                                {
                                                                    string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Freebie?.ItemName
                                                                }

                                                            </td>
                                                            <td>
                                                                @L[item.DeliveryTemperature.ToString()]
                                                            </td>
                                                                   <td>
                                                                
                                                        @if (!isDeliveryCostDisplayed && isNormal ||
                                                       !isDeliveryCostDisplayed && isFreeze ||
                                                       !isDeliveryCostDisplayed && isFrozen)
                                                        {
                                                            if (order.DeliveryMethod ==EnumValues.DeliveryMethod.DeliveredByStore)
                                                            {
                                                                @GetDeliveryCost(order,item.DeliveryTemperature).ToString("N2")
                                                            }
                                                            else
                                                            {
                                                                @(OrderDeliveryCost?.ToString("N2") ?? "0.00")
                                                            }

                                                            isDeliveryCostDisplayed = true;
                                                        }
                                                        else
                                                        {
                                                            @(0.00.ToString("N2"))
                                                        }
                                                    
                                                            </td>
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        </tr>

                                                        if (item.ItemType is ItemType.SetItem &&
                                                        item.SetItem is not null &&
                                                        item.SetItem.SetItemDetails is { Count: > 0 })
                                                        {
                                                            @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                            {
                                                                <tr>
                                                                    <td colspan="6">
                                                                        <Table>
                                                                            <tr>
                                                                                <td></td>
                                                                                <td class="text-start" style="width: 100%;">
                                                                                    @{
                                                                                        string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                                    }

                                                                                    <Div>
                                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                                        {
                                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                                        }
                                                                                        @setItem.Item?.ItemName
                                                                                    </Div>
                                                                                </td>
                                                                            </tr>
                                                                        </Table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </DetailRowTemplate>
                                </DataGrid>
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="ToBeShipped">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "ToBeShipped"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <Check TValue="bool"
                                               Checked="@context.IsSelected"
                                               CheckedChanged=@((e) => OnCheckboxValueChanged(e, context)) />
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            bool isExpanded = ExpandedRows.Contains(context.OrderId);

                                            string chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate Context="order">
                                <DataGrid TItem="OrderDeliveryDto"
                                          @bind-SelectedRow="@SelectedOrderDelivery"
                                          ReadData="@(async (e) => await OnOrderDeliveryDataReadAsync(e,order.OrderId))"
                                          Data="@GetOrderDeliveries(order.OrderId)"
                                          DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrderDelivery?.Id)"
                                          Responsive
                                          Bordered
                                          Class="rm-table-min-height">
                                    <DataGridColumns>
                                        <DataGridColumn Caption="@L["Select"]" Width="30px">
                                            <DisplayTemplate>
                                                <input type="checkbox" class="form-check-input" />
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Method"]">
                                            <DisplayTemplate>@L[order.DeliveryMethod.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Last Updated Date"]">
                                            <DisplayTemplate>@L[order.LastModificationTime.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Field="@nameof(OrderDeliveryDto.Editor)" Caption="@L["Editor"]">
                                            <DisplayTemplate>@L[context.Editor]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Status"]">
                                            <DisplayTemplate>@L[context.DeliveryStatus.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Temperature"]">
                                            <DisplayTemplate>
                                                @if (context.Items.Count > 0)
                                                {
                                                    @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                                }
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                    </DataGridColumns>
              
                                    <DetailRowTemplate Context="orderDelivery">
                                                                @{
                                isDeliveryCostDisplayed = false;

                                isNormal = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Normal);

                                isFreeze = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Freeze) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0;

                                isFrozen = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Frozen) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0 &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Freeze)) is 0;
                            }
                                        <table class="table table-responsive rm-table-min-height table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>@L["Temperature"]</th>
                                                    <th>@L["DeliveryCost"]</th>
                                                    <th>@L["Quantity"]</th>
                                                    <th>@L["UnitPrice"]</th>
                                                    <th>@L["Subtotal"]</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (orderDelivery.Items is not null && orderDelivery.Items.Count is not 0)
                                                {
                                                    @foreach (OrderItemDto item in orderDelivery.Items)
                                                    {
                                                        <tr>
                                                            <td class="text-start" style="width: 50%;">
                                                                @if (item.ItemType is ItemType.Item)
                                                                {
                                                                    string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Item?.ItemName
                                                                }

                                                                @if (item.ItemType is ItemType.SetItem)
                                                                {
                                                                    string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    <Div>
                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                        {
                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                        }
                                                                        @item.SetItem?.SetItemName
                                                                    </Div>
                                                                }

                                                                @if (item.ItemType is ItemType.Freebie)
                                                                {
                                                                    string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Freebie?.ItemName
                                                                }

                                                            </td>
                                                            <td>
                                                                @L[item.DeliveryTemperature.ToString()]
                                                            </td>
                                                            <td>
                                                                
                                                        @if (!isDeliveryCostDisplayed && isNormal ||
                                                       !isDeliveryCostDisplayed && isFreeze ||
                                                       !isDeliveryCostDisplayed && isFrozen)
                                                        {
                                                            if (order.DeliveryMethod ==EnumValues.DeliveryMethod.DeliveredByStore)
                                                            {
                                                                @GetDeliveryCost(order,item.DeliveryTemperature).ToString("N2")
                                                            }
                                                            else
                                                            {
                                                                @(OrderDeliveryCost?.ToString("N2") ?? "0.00")
                                                            }

                                                            isDeliveryCostDisplayed = true;
                                                        }
                                                        else
                                                        {
                                                            @(0.00.ToString("N2"))
                                                        }
                                                    
                                                            </td>
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        </tr>

                                                        if (item.ItemType is ItemType.SetItem &&
                                                        item.SetItem is not null &&
                                                        item.SetItem.SetItemDetails is { Count: > 0 })
                                                        {
                                                            @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                            {
                                                                <tr>
                                                                    <td colspan="6">
                                                                        <Table>
                                                                            <tr>
                                                                                <td></td>
                                                                                <td class="text-start" style="width: 100%;">
                                                                                    @{
                                                                                        string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                                    }

                                                                                    <Div>
                                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                                        {
                                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                                        }
                                                                                        @setItem.Item?.ItemName
                                                                                    </Div>
                                                                                </td>
                                                                            </tr>
                                                                        </Table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </DetailRowTemplate>
                                </DataGrid>
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="Shipped">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "Shipped"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate Context="order">
                                <DataGrid TItem="OrderDeliveryDto"
                                          @bind-SelectedRow="@SelectedOrderDelivery"
                                          ReadData="@(async (e) => await OnOrderDeliveryDataReadAsync(e, order.OrderId))"
                                          Data="@GetOrderDeliveries(order.OrderId)"
                                          DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrderDelivery?.Id)"
                                          Responsive
                                          Bordered
                                          Class="rm-table-min-height">
                                    <DataGridColumns>
                                        <DataGridColumn Caption="@L["Select"]" Width="30px">
                                            <DisplayTemplate>
                                                <input type="checkbox" class="form-check-input" />
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Method"]">
                                            <DisplayTemplate>@L[order.DeliveryMethod.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Last Updated Date"]">
                                            <DisplayTemplate>@L[order.LastModificationTime.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Editor"]">
                                            <DisplayTemplate>@L[context.Editor]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Status"]">
                                            <DisplayTemplate>@L[order.ShippingStatus.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Temperature"]">
                                            <DisplayTemplate>
                                                @if (context.Items.Count > 0)
                                                {
                                                    @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                                }
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                    </DataGridColumns>
                                    <DetailRowTemplate Context="orderDelivery">
                                                                               @{
                                isDeliveryCostDisplayed = false;

                                isNormal = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Normal);

                                isFreeze = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Freeze) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0;

                                isFrozen = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Frozen) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0 &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Freeze)) is 0;
                            }
                                        <table class="table table-responsive rm-table-min-height table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th></th>

                                                    <th>@L["Temperature"]</th>
                                                    <th>@L["DeliveryCost"]</th>
                                                    <th>@L["Quantity"]</th>
                                                    <th>@L["UnitPrice"]</th>
                                                    <th>@L["Subtotal"]</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (orderDelivery.Items is not null && orderDelivery.Items.Count is not 0)
                                                {
                                                    @foreach (OrderItemDto item in orderDelivery.Items)
                                                    {
                                                        <tr>
                                                            <td class="text-start" style="width: 50%;">
                                                                @if (item.ItemType is ItemType.Item)
                                                                {
                                                                    string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Item?.ItemName
                                                                }

                                                                @if (item.ItemType is ItemType.SetItem)
                                                                {
                                                                    string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    <Div>
                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                        {
                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                        }
                                                                        @item.SetItem?.SetItemName
                                                                    </Div>
                                                                }

                                                                @if (item.ItemType is ItemType.Freebie)
                                                                {
                                                                    string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Freebie?.ItemName
                                                                }

                                                            </td>
                                                            <td>
                                                                @L[item.DeliveryTemperature.ToString()]
                                                            </td>
                                                            <td>
                                                                
                                                        @if (!isDeliveryCostDisplayed && isNormal ||
                                                       !isDeliveryCostDisplayed && isFreeze ||
                                                       !isDeliveryCostDisplayed && isFrozen)
                                                        {
                                                            if (order.DeliveryMethod ==EnumValues.DeliveryMethod.DeliveredByStore)
                                                            {
                                                                @GetDeliveryCost(order,item.DeliveryTemperature).ToString("N2")
                                                            }
                                                            else
                                                            {
                                                                @(OrderDeliveryCost?.ToString("N2") ?? "0.00")
                                                            }

                                                            isDeliveryCostDisplayed = true;
                                                        }
                                                        else
                                                        {
                                                            @(0.00.ToString("N2"))
                                                        }
                                                    
                                                            </td>
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        </tr>

                                                        if (item.ItemType is ItemType.SetItem &&
                                                        item.SetItem is not null &&
                                                        item.SetItem.SetItemDetails is { Count: > 0 })
                                                        {
                                                            @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                            {
                                                                <tr>
                                                                    <td colspan="6">
                                                                        <Table>
                                                                            <tr>
                                                                                <td></td>
                                                                                <td class="text-start" style="width: 100%;">
                                                                                    @{
                                                                                        string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                                    }

                                                                                    <Div>
                                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                                        {
                                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                                        }
                                                                                        @setItem.Item?.ItemName
                                                                                    </Div>
                                                                                </td>
                                                                            </tr>
                                                                        </Table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </DetailRowTemplate>
                                </DataGrid>
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="Delivered">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "Delivered"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate Context="order">
                                <DataGrid TItem="OrderDeliveryDto"
                                          @bind-SelectedRow="@SelectedOrderDelivery"
                                          ReadData="@(async (e) => await OnOrderDeliveryDataReadAsync(e, order.OrderId))"
                                          Data="@GetOrderDeliveries(order.OrderId)"
                                          DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrderDelivery?.Id)"
                                          Responsive
                                          Bordered
                                          Class="rm-table-min-height">
                                    <DataGridColumns>
                                        <DataGridColumn Caption="@L["Select"]" Width="30px">
                                            <DisplayTemplate>
                                                <input type="checkbox" class="form-check-input" />
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Method"]">
                                            <DisplayTemplate>@L[order.DeliveryMethod.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Last Updated Date"]">
                                            <DisplayTemplate>@L[order.LastModificationTime.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Editor"]">
                                            <DisplayTemplate>@L[context.Editor]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Status"]">
                                            <DisplayTemplate>@L[order.ShippingStatus.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Temperature"]">
                                            <DisplayTemplate>
                                                @if (context.Items.Count > 0)
                                                {
                                                    @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                                }
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                    </DataGridColumns>
                                    <DetailRowTemplate Context="orderDelivery">
                                                                                          @{
                                isDeliveryCostDisplayed = false;

                                isNormal = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Normal);

                                isFreeze = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Freeze) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0;

                                isFrozen = orderDelivery.Items.Any(i => i.DeliveryTemperature is ItemStorageTemperature.Frozen) &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Normal)) is 0 &&
                                OrderDeliveries.Count(a => a.Items.Any(af => af.DeliveryTemperature is ItemStorageTemperature.Freeze)) is 0;
                            }
                                        <table class="table table-responsive rm-table-min-height table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>@L["Temperature"]</th>
                                                    <th>@L["DeliveryCost"]</th>
                                                    <th>@L["Quantity"]</th>
                                                    <th>@L["UnitPrice"]</th>
                                                    <th>@L["Subtotal"]</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (orderDelivery.Items is not null && orderDelivery.Items.Count is not 0)
                                                {
                                                    @foreach (OrderItemDto item in orderDelivery.Items)
                                                    {
                                                        <tr>
                                                            <td class="text-start" style="width: 50%;">
                                                                @if (item.ItemType is ItemType.Item)
                                                                {
                                                                    string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Item?.ItemName
                                                                }

                                                                @if (item.ItemType is ItemType.SetItem)
                                                                {
                                                                    string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    <Div>
                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                        {
                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                        }
                                                                        @item.SetItem?.SetItemName
                                                                    </Div>
                                                                }

                                                                @if (item.ItemType is ItemType.Freebie)
                                                                {
                                                                    string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Freebie?.ItemName
                                                                }

                                                            </td>
                                                            <td>
                                                                @L[item.DeliveryTemperature.ToString()]
                                                            </td>
                                                             <td>
                                                                
                                                        @if (!isDeliveryCostDisplayed && isNormal ||
                                                       !isDeliveryCostDisplayed && isFreeze ||
                                                       !isDeliveryCostDisplayed && isFrozen)
                                                        {
                                                            if (order.DeliveryMethod ==EnumValues.DeliveryMethod.DeliveredByStore)
                                                            {
                                                                @GetDeliveryCost(order,item.DeliveryTemperature).ToString("N2")
                                                            }
                                                            else
                                                            {
                                                                @(OrderDeliveryCost?.ToString("N2") ?? "0.00")
                                                            }

                                                            isDeliveryCostDisplayed = true;
                                                        }
                                                        else
                                                        {
                                                            @(0.00.ToString("N2"))
                                                        }
                                                    
                                                            </td>
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        </tr>

                                                        if (item.ItemType is ItemType.SetItem &&
                                                        item.SetItem is not null &&
                                                        item.SetItem.SetItemDetails is { Count: > 0 })
                                                        {
                                                            @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                            {
                                                                <tr>
                                                                    <td colspan="6">
                                                                        <Table>
                                                                            <tr>
                                                                                <td></td>
                                                                                <td class="text-start" style="width: 100%;">
                                                                                    @{
                                                                                        string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                                    }

                                                                                    <Div>
                                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                                        {
                                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                                        }
                                                                                        @setItem.Item?.ItemName
                                                                                    </Div>
                                                                                </td>
                                                                            </tr>
                                                                        </Table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </DetailRowTemplate>
                                </DataGrid>
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="Completed">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "Completed"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate>
                                @{
                                    var orderItems = (context as OrderDto).OrderItems;
                                    <div class="mx-2 px-3 py-2 border">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@L["RecipientInformation"]</td>
                                                    <td>@context.CustomerName / @context.CustomerPhone</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["ShippingMethod"]</td>
                                                    <td>@L[context.DeliveryMethod.ToString()]</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["PostalCode"]</td>

                                                    <td>@context.PostalCode</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["City"]</td>

                                                    <td>@context.City</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Address"]</td>
                                                    <td class="d-none">@context.AddressDetails</td>
                                                    <td>@context.AddressDetails</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Remarks"]</td>
                                                    <td>@context.Remarks</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["MerchantRemarks"]</td>
                                                    <td>
                                                        @foreach (var item in context.StoreComments.OrderByDescending(x => x.CreationTime))
                                                        {
                                                            if (context.StoreComments.Count > 1)
                                                            {
                                                                <span> @item.Comment /</span>
                                                            }
                                                            else
                                                            {
                                                                <span> @item.Comment</span>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>@L["OrderItems"]</td>
                                                    <td>
                                                        @foreach (OrderItemDto item in orderItems.OrderBy(o => o.ItemType).ToList())
                                                        {
                                                            @if (item.ItemType == ItemType.Item)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Item?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.SetItem)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.SetItem?.SetItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.Freebie)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Freebie?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            @*   <TabPanel Name="EnterpricePurchase">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "EnterpricePurchase"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.Id);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate>
                                @{
                                    var orderItems = (context as OrderDto).OrderItems;
                                    <div class="mx-2 px-3 py-2 border">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@L["RecipientInformation"]</td>
                                                    <td>@context.CustomerName / @context.CustomerPhone</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["ShippingMethod"]</td>
                                                    <td>@L[context.DeliveryMethod.ToString()]</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["PostalCode"]</td>

                                                    <td>@context.PostalCode</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["City"]</td>

                                                    <td>@context.City</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Address"]</td>
                                                    <td class="d-none">@context.AddressDetails</td>
                                                    <td>@context.AddressDetails</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Remarks"]</td>
                                                    <td>@context.Remarks</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["MerchantRemarks"]</td>
                                                    <td>
                                                        @foreach (var item in context.StoreComments.OrderByDescending(x => x.CreationTime))
                                                        {
                                                            if (context.StoreComments.Count > 1)
                                                            {
                                                                <span> @item.Comment /</span>
                                                            }
                                                            else
                                                            {
                                                                <span> @item.Comment</span>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>@L["OrderItems"]</td>
                                                    <td>
                                                        @foreach (var item in orderItems)
                                                        {
                                                            @if (item.ItemType == ItemType.Item)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Item?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.SetItem)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.SetItem?.SetItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.Freebie)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Freebie?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel> *@
            <TabPanel Name="Return">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "Return"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate Context="order">
                                <DataGrid TItem="OrderDeliveryDto"
                                          @bind-SelectedRow="@SelectedOrderDelivery"
                                          ReadData="@(async (e) => await OnOrderDeliveryDataReadAsync(e, order.OrderId))"
                                          Data="@GetOrderDeliveries(order.OrderId)"
                                          DetailRowTrigger="@((e) => e.Item.Items?.Count > 0 && e.Item.Id == SelectedOrderDelivery?.Id)"
                                          Responsive
                                          Bordered>
                                    <DataGridColumns>
                                        <DataGridColumn Caption="@L["Select"]" Width="30px">
                                            <DisplayTemplate>
                                                <input type="checkbox" class="form-check-input" />
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Method"]">
                                            <DisplayTemplate>@L[order.DeliveryMethod.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Last Updated Date"]">
                                            <DisplayTemplate>@L[order.LastModificationTime.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Editor"]">
                                            <DisplayTemplate>@L[context.Editor]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Status"]">
                                            <DisplayTemplate>@L[order.ShippingStatus.ToString()]</DisplayTemplate>
                                        </DataGridColumn>
                                        <DataGridColumn Caption="@L["Delivery Temperature"]">
                                            <DisplayTemplate>
                                                @if (context.Items.Count > 0)
                                                {
                                                    @L[context.Items[0]?.DeliveryTemperature.ToString()]
                                                }
                                            </DisplayTemplate>
                                        </DataGridColumn>
                                    </DataGridColumns>
                                    <DetailRowTemplate Context="orderDelivery">
                                        <table class="table table-responsive table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th></th>
                                                    <th>@L["Temperature"]</th>
                                                    <th>@L["DeliveryCost"]</th>
                                                    <th>@L["Quantity"]</th>
                                                    <th>@L["UnitPrice"]</th>
                                                    <th>@L["Subtotal"]</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @if (orderDelivery.Items is not null && orderDelivery.Items.Count is not 0)
                                                {
                                                    @foreach (OrderItemDto item in orderDelivery.Items)
                                                    {
                                                        <tr>
                                                            <td class="text-start" style="width: 50%;">
                                                                @if (item.ItemType is ItemType.Item)
                                                                {
                                                                    string? firstImage = item.Item?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Item?.ItemName
                                                                }

                                                                @if (item.ItemType is ItemType.SetItem)
                                                                {
                                                                    string? firstImage = item.SetItem?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    <Div>
                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                        {
                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                        }
                                                                        @item.SetItem?.SetItemName
                                                                    </Div>
                                                                }

                                                                @if (item.ItemType is ItemType.Freebie)
                                                                {
                                                                    string? firstImage = item.Freebie?.Images?.FirstOrDefault()?.ImageUrl;

                                                                    @if (!string.IsNullOrEmpty(firstImage))
                                                                    {
                                                                        <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                    }
                                                                    @item.Freebie?.ItemName
                                                                }

                                                            </td>
                                                            <td>
                                                                @L[item.DeliveryTemperature.ToString()]
                                                            </td>
                                                            <td>
                                                                @item.DeliveryTemperatureCost
                                                            </td>
                                                            <td>
                                                                @item.Quantity
                                                            </td>
                                                            <td>
                                                                <span>$@item.ItemPrice.ToString("N2")</span>
                                                            </td>
                                                            <td>
                                                                $@item.TotalAmount.ToString("N2")
                                                            </td>
                                                        </tr>

                                                        if (item.ItemType is ItemType.SetItem &&
                                                        item.SetItem is not null &&
                                                        item.SetItem.SetItemDetails is { Count: > 0 })
                                                        {
                                                            @foreach (Items.Dtos.SetItemDetailsDto setItem in item.SetItem.SetItemDetails)
                                                            {
                                                                <tr>
                                                                    <td colspan="6">
                                                                        <Table>
                                                                            <tr>
                                                                                <td></td>
                                                                                <td class="text-start" style="width: 100%;">
                                                                                    @{
                                                                                        string? firstImage = setItem.Item?.Images?.FirstOrDefault()?.ImageUrl;
                                                                                    }

                                                                                    <Div>
                                                                                        @if (!string.IsNullOrEmpty(firstImage))
                                                                                        {
                                                                                            <img src="@firstImage" class="img-fluid me-2" style="height: 50px; width: auto;" />
                                                                                        }
                                                                                        @setItem.Item?.ItemName
                                                                                    </Div>
                                                                                </td>
                                                                            </tr>
                                                                        </Table>
                                                                    </td>
                                                                </tr>
                                                            }
                                                        }
                                                    }
                                                }
                                            </tbody>
                                        </table>
                                    </DetailRowTemplate>
                                </DataGrid>
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
            <TabPanel Name="Closed">
                <Card>
                    <CardBody>
                        <DataGrid TItem="OrderDto"
                                  Data="@Orders"
                                  @bind-SelectedRow="@SelectedOrder"
                                  ReadData="@(async (e) => await OnTabLoadDataGridReadAsync(e, "Closed"))"
                                  TotalItems="TotalCount"
                                  DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                                  Responsive
                                  ShowPager="true"
                                  PageSize="PageSize"
                                  RowClicked="ToggleRow"
                                  RowDoubleClicked="NavigateToOrderDetails"
                                  SortChanged="OnSortChange">
                            <DataGridColumns>
                                <DataGridCommandColumn />
                                <DataGridColumn Caption="@L["Select"]" Width="30px">
                                    <DisplayTemplate>
                                        <InputCheckbox class="form-check-input" @bind-Value="@context.IsSelected"></InputCheckbox>
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                    <DisplayTemplate>
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.OrderId);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                                <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                                <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                    <DisplayTemplate>
                                        @L[context.OrderStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                    <DisplayTemplate>
                                        @L[context.ShippingStatus.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                    <DisplayTemplate>
                                        @L[context.PaymentMethod.ToString()]
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                    <DisplayTemplate>
                                        $ @context.TotalAmount.ToString("N2")
                                    </DisplayTemplate>
                                </DataGridColumn>
                                <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.OrderType)">
                                    <DisplayTemplate>
                                        @if (context.OrderType == OrderType.MargeToNew || context.OrderType == OrderType.SplitToNew)
                                        {
                                            @L["Orignal"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewSplit)
                                        {
                                            @L["Split"]
                                            ;
                                        }
                                        @if (context.OrderType == OrderType.NewMarge)
                                        {
                                            @L["Combined"]
                                            ;
                                        }
                                    </DisplayTemplate>
                                </DataGridColumn>
                            </DataGridColumns>
                            <DetailRowTemplate>
                                @{
                                    var orderItems = (context as OrderDto).OrderItems;
                                    <div class="mx-2 px-3 py-2 border">
                                        <table>
                                            <tbody>
                                                <tr>
                                                    <td>@L["RecipientInformation"]</td>
                                                    <td>@context.CustomerName / @context.CustomerPhone</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["ShippingMethod"]</td>
                                                    <td>@L[context.DeliveryMethod.ToString()]</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["PostalCode"]</td>

                                                    <td>@context.PostalCode</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["City"]</td>

                                                    <td>@context.City</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Address"]</td>
                                                    <td class="d-none">@context.AddressDetails</td>
                                                    <td>@context.AddressDetails</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["Remarks"]</td>
                                                    <td>@context.Remarks</td>
                                                </tr>
                                                <tr>
                                                    <td>@L["MerchantRemarks"]</td>
                                                    <td>
                                                        @foreach (var item in context.StoreComments.OrderByDescending(x => x.CreationTime))
                                                        {
                                                            if (context.StoreComments.Count > 1)
                                                            {
                                                                <span> @item.Comment /</span>
                                                            }
                                                            else
                                                            {
                                                                <span> @item.Comment</span>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                                <tr>
                                                    <td>@L["OrderItems"]</td>
                                                    <td>
                                                        @foreach (OrderItemDto item in orderItems.OrderBy(o => o.ItemType).ToList())
                                                        {
                                                            @if (item.ItemType == ItemType.Item)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Item?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.SetItem)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.SetItem?.SetItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                            @if (item.ItemType == ItemType.Freebie)
                                                            {
                                                                <div mb-1>
                                                                    <span>@item.Spec</span>
                                                                    <span>@item.Freebie?.ItemName x @item.Quantity</span>
                                                                </div>
                                                            }
                                                        }
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                }
                            </DetailRowTemplate>
                            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
                            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
                            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
                            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
                        </DataGrid>
                    </CardBody>
                </Card>
            </TabPanel>
        </Content>
    </Tabs>
</LoadingIndicator>

@code {
    bool isSmall = true;

    private int RowIndex = -1;

    private Dictionary<int, OrderDeliveryDto?> SelectedOrderDeliveries = [];

    private void GetOrderDeliveryDto(int rowIndex, OrderDeliveryDto? selectedOrderDelivery)
    {
        SelectedOrderDeliveries[rowIndex] = selectedOrderDelivery;
    }
}
