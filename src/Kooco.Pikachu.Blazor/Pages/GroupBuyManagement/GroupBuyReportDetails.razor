@page "/GroupBuyManagement/GroupBuyReportDetails/{Id}";
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.GroupBuys;
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.Orders;
@using Microsoft.Extensions.Localization;
@using Volo.Abp.AspNetCore.Components.Messages;
@using Blazorise.LoadingIndicator;

@inject IStringLocalizer<PikachuResource> L;
@inject IGroupBuyAppService _groupBuyAppService;
@inject IUiMessageService _uiMessageService;
@inject IJSRuntime JSRuntime;
@inject IOrderAppService _orderAppService;

@layout EmptyLayout;
<style>
    .container{
        padding-top: 3rem;
    }

    .tbl tbody td {
        border-bottom: 1px solid;
        border-color: lightgrey;
        color:black;
        font-weight:bold;
    }

    .tbl tr:nth-child(even) {
        background-color: #E0E0E0;

    }

    .tbl tr:nth-child(odd) {
        background-color: #F5F5F5; /* Even rows background color */
    }
</style>
<LoadingIndicator @ref="Loading" FullScreen></LoadingIndicator>
<div class="container">
    @if (ReportDetails != null)
    {
        <h3>@ReportDetails?.GroupBuyName</h3>
        <div class="row">
            <div class="col-md-6 col-sm-12">
                <Card>
                    <CardBody>
                        <table class="w-100">
                            <tbody>
                                <tr>
                                    <td>@L["OrderQuantityPaid/TotalOrderQuantity"]</td>
                                    <td class="text-end">@ReportDetails.OrderQuantityPaid.ToString("N0") / @ReportDetails.TotalOrderQuantity.ToString("N0")</td>
                                </tr>
                                <tr>
                                    <td>@L["SalesAmount/SalesAmountExcludingShipping"]</td>
                                    <td class="text-end">@ReportDetails.SalesAmount.ToString("N0") / @ReportDetails.SalesAmountExclShipping.ToString("N0")</td>
                                </tr>
                                <tr>
                                    <td>@L["AmountReceived/AmountReceivedExcludingShipping"]</td>
                                    <td class="text-end">@ReportDetails.AmountReceived.ToString("N0") / @ReportDetails.AmountReceivedExclShipping.ToString("N0")</td>
                                </tr>
                                <tr>
                                    <td>@L["SalesAmountMinusShippingCosts"]</td>
                                    <td class="text-end">@ReportDetails.SalesAmountMinusShipping.ToString("N0")</td>
                                </tr>
                                <tr>
                                    <td>@L["BloggersShareProfit"]</td>
                                    <td class="text-end">@ReportDetails.BloggersProfit.ToString("N0")</td>
                                </tr>
                            </tbody>
                        </table>
                    </CardBody>
                </Card>
            </div>
        </div>
    }
    @if(Orders != null && Orders.Count > 0)
    {
        <div class="row">
            <div class="col-12 text-end mb-2">
                <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="DownloadExcel">
                    <i class="fa-solid fa-circle-down"></i>
                    @L["DownloadExcel"]
                </Button>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-12">
            <Card>
                <CardBody>
                    <DataGrid TItem="OrderDto"
                              Data="@Orders"
                            @bind-SelectedRow="@SelectedOrder"
                              ReadData="OnDataGridReadAsync"
                              TotalItems="TotalCount"
                              DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                              Responsive
                               ShowPager="true"
                               PageSize="PageSize"
                               RowClicked="ToggleRow"
                               SortChanged="OnSortChange">
                         <DataGridColumns>
                             <DataGridCommandColumn />
                             <DataGridColumn Field="@nameof(OrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                 <DisplayTemplate>
                                     @{
                                        var isExpanded = ExpandedRows.Contains(context.Id);
                                        var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                    }
                                    <i class="@chevronClass"></i>
                                    @L[context.OrderNo]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                            <DataGridColumn Field="@nameof(OrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                            <DataGridColumn Field="@nameof(OrderDto.CustomerEmail)" Caption="@L["Email"]" />
                            <DataGridColumn Field="@nameof(OrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                <DisplayTemplate>
                                    @L[context.OrderStatus.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                <DisplayTemplate>
                                    @L[context.ShippingStatus.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(OrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                <DisplayTemplate>
                                    @L[context.PaymentMethod.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn TextAlignment="TextAlignment.Center" Field="@nameof(OrderDto.TotalAmount)" Caption="@L["CheckoutAmount"]">
                                <DisplayTemplate>
                                    $ @context.TotalAmount.ToString("N2")
                                </DisplayTemplate>
                            </DataGridColumn>
                        </DataGridColumns>
                        <DetailRowTemplate>
                            @{
                                var orderItems = (context as OrderDto).OrderItems;
                                <div class="mx-2  col-12" style="background-color:white;">
                                    <table class="tbl w-100 mb-3">
                                        <tbody>
                                            @foreach (var item in orderItems)
                                            {
                                                <tr>
                                                    <td>@item.SKU</td>
                                                    @if (item.ItemType == ItemType.Item)
                                                    {
                                                        <td>@item.Item?.ItemName</td>
                                                    }
                                                    else if (item.ItemType == ItemType.SetItem)
                                                    {
                                                        <td>@item.SetItem?.SetItemName</td>
                                                    }
                                                    else if (item.ItemType == ItemType.Freebie)
                                                    {
                                                        <td>@item.Freebie?.ItemName</td>
                                                    }
                                                    <td>@item.Spec</td>
                                                    <td>@item.Quantity</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </DetailRowTemplate>
                    </DataGrid>
                </CardBody>
            </Card>
        </div>
    </div>
</div>