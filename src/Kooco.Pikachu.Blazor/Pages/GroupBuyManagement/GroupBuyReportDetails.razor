@page "/GroupBuyManagement/GroupBuyReportDetails/{Id}";
@using Blazorise.LoadingIndicator;
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.GroupBuys;
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.Orders;
@using Kooco.Pikachu.Orders.Interfaces
@using Microsoft.Extensions.Localization;
@using Volo.Abp.AspNetCore.Components.Messages;

@inherits PikachuComponentBase
@inject IGroupBuyAppService _groupBuyAppService
@inject IJSRuntime JSRuntime
@inject IOrderAppService _orderAppService

@layout EmptyLayout;
<style>
    .container {
        padding-top: 3rem;
    }

    .tbl tbody td {
        border-bottom: 1px solid;
        border-color: lightgrey;
        color: black;
        font-weight: bold;
    }

    .tbl tr:nth-child(even) {
        background-color: #E0E0E0;
    }

    .tbl tr:nth-child(odd) {
        background-color: #F5F5F5; /* Even rows background color */
    }

    .table.table-striped > tbody > tr:nth-of-type(even) > td, .table.table-bordered > tbody > tr:nth-of-type(even) > td {
        background-color: transparent;
    }
</style>
<LoadingIndicator @ref="Loading" FullScreen></LoadingIndicator>
<div class="container">
    <div class="row">
        <div class="col-12 col-md-6 col-sm-12">
            <div class="d-flex justify-content-between">
                <h3>@ReportDetails?.GroupBuyName</h3>
            </div>
        </div>
        <div class="col-12 col-md-12 col-sm-12 mt-3 mt-sm-0">
            <div class="d-flex align-items-center w-100">
                <div class="form-group px-1">
                    <label for="start-date">@L["StartDate"]</label>
                    <input type="date" class="form-control form-control-sm" @bind-value="@StartDate" />
                </div>
                <div class="form-group px-1">
                    <label for="start-date">@L["EndDate"]</label>
                    <input type="date" class="form-control form-control-sm" @bind-value="@EndDate" />
                </div>
                <div class="form-group px-1">
                    <label for="start-date">@L["CompletionFrom"]</label>
                    <input type="date" class="form-control form-control-sm" @bind-value="@CompletionTimeFrom" />
                </div>
                <div class="form-group px-1">
                    <label for="start-date">@L["CompletionTo"]</label>
                    <input type="date" class="form-control form-control-sm" @bind-value="@CompletionTimeTo" />
                </div>
                <div class="form-group w-100 px-1">
                    <label for="start-date">@L["Status"]</label>
                    <select class="form-select form-select-sm" @bind="@OrderStatus">
                        <option value=""></option>
                        @foreach (var enumValue in Enum.GetValues(typeof(OrderStatus)))
                        {
                            <option value="@enumValue">@L[enumValue.ToString()]</option>
                        }
                    </select>
                </div>
                <div class="form-group w-100 px-1">
                    <label for="start-date">@L["ShippingStatus"]</label>
                    <select class="form-select form-select-sm" @bind="@ShippingStatus">
                        <option value=""></option>
                        @foreach (var enumValue in Enum.GetValues(typeof(ShippingStatus)))
                        {
                            <option value="@enumValue">@L[enumValue.ToString()]</option>
                        }
                    </select>
                </div>
                <Button Type="ButtonType.Button" class="btn btn-sm btn-primary" Clicked="FilterAsync">
                    <i class="fa fa-filter"></i>
                </Button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-8 col-sm-12">
            <Card>
                <CardBody>
                    <table class="w-100">
                        <tbody>
                            <tr>
                                <td>@L["OrderQuantityPaid/TotalOrderQuantity"]:</td>
                                <td class="text-end">@((ReportDetails?.OrderQuantityPaid ?? 0).ToString("N0")) / @((ReportDetails?.TotalOrderQuantity ?? 0).ToString("N0"))</td>
                            </tr>
                            <tr>
                                <td>@L["SalesAmount/SalesAmountExcludingShipping"]:</td>
                                <td class="text-end">$@((ReportDetails?.SalesAmountExclShipping ?? 0).ToString("N0")) / $@((ReportDetails?.SalesAmount ?? 0).ToString("N0"))</td>
                            </tr>
                            <tr>
                                <td>@L["AmountReceived/AmountReceivedExcludingShipping"]:</td>
                                <td class="text-end">$@((ReportDetails?.AmountReceivedExclShipping ?? 0).ToString("N0")) / $@((ReportDetails?.AmountReceived ?? 0).ToString("N0")) </td>
                            </tr>
                            <tr>
                                <td>@L["ProfitShareEarnings"]:</td>
                                <td class="text-end">$@((ReportDetails?.ProfitShareAmount ?? 0).ToString("N1"))</td>
                            </tr>
                        </tbody>
                    </table>
                </CardBody>
            </Card>
        </div>
    </div>

    @if (Orders != null && Orders.Count > 0)
    {
        <div class="row">
            <div class="col-12 text-end mb-2">
                <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="DownloadExcel">
                    <i class="fa-solid fa-circle-down"></i>
                    @L["DownloadExcel"]
                </Button>
            </div>
        </div>
    }
    <div class="row">
        <div class="col-12">
            <Card>
                <CardBody>
                    <DataGrid TItem="GroupBuyReportOrderDto"
                              Data="@Orders"
                              @bind-SelectedRow="@SelectedOrder"
                              ReadData="OnDataGridReadAsync"
                              TotalItems="TotalCount"
                              DetailRowTrigger="@((e) => e.Item.OrderItems?.Count > 0 && e.Item.Id == SelectedOrder?.Id)"
                              Responsive
                              Bordered
                              ShowPager="true"
                              PageSize="PageSize"
                              RowClicked="ToggleRow"
                              SortChanged="OnSortChange">
                        <DataGridColumns>
                            <DataGridCommandColumn />
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.OrderNo)" Caption="@L["OrderNo"]">
                                <DisplayTemplate>
                                    <Span Class="text-nowrap">
                                        @{
                                            var isExpanded = ExpandedRows.Contains(context.Id);
                                            var chevronClass = isExpanded ? "fa fa-caret-up" : "fa fa-caret-down";
                                        }
                                        <i class="@chevronClass"></i>
                                        @L[context.OrderNo]
                                    </Span>
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.CreationTime)" Caption="@L["OrderDate"]" />
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.CustomerName)" Caption="@L["CustomerName"]" />
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.CustomerEmail)" Caption="@L["Email"]" />
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.OrderStatus)" Caption="@L["OrderStatus"]">
                                <DisplayTemplate>
                                    @L[context.OrderStatus.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.ShippingStatus)" Caption="@L["ShippingStatus"]">
                                <DisplayTemplate>
                                    @L[context.ShippingStatus.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn Field="@nameof(GroupBuyReportOrderDto.PaymentMethod)" Caption="@L["PaymentMethod"]">
                                <DisplayTemplate>
                                    @L[context.PaymentMethod.ToString()]
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn TextAlignment="TextAlignment.End" Field="@nameof(GroupBuyReportOrderDto.ShippingFee)" Caption="@L["ShippingFee"]">
                                <DisplayTemplate>
                                    $ @context.ShippingFee?.ToString("N2")
                                </DisplayTemplate>
                            </DataGridColumn>
                            <DataGridColumn TextAlignment="TextAlignment.End" Field="@nameof(GroupBuyReportOrderDto.TotalAmount)" Caption="@L["TotalAmount"]">
                                <DisplayTemplate>
                                    $ @context.TotalAmount.ToString("N2")
                                </DisplayTemplate>
                            </DataGridColumn>
                        </DataGridColumns>
                        <DetailRowTemplate>
                            @{
                                var orderItems = (context as GroupBuyReportOrderDto).OrderItems;
                                <div class="mx-2  col-12" style="background-color:white;">
                                    <table class="tbl w-100 mb-3">
                                        <tbody>
                                            @foreach (var item in orderItems)
                                            {
                                                <tr>
                                                    <td>@item.SKU</td>
                                                    <td>@item.Name</td>
                                                    <td>@item.Spec</td>
                                                    <td>@item.Quantity</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            }
                        </DetailRowTemplate>
                    </DataGrid>
                </CardBody>
            </Card>
        </div>
    </div>
</div>