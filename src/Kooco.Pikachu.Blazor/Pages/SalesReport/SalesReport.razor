@page "/sales-report"
@using Kooco.Pikachu.GroupBuys
@using Kooco.Pikachu.Reports
@using Kooco.Pikachu.SalesReports
@using Kooco.Pikachu.Extensions
@attribute [Authorize]
@inherits PikachuComponentBase
@inject ISalesReportAppService SalesReportAppService
@inject IGroupBuyAppService GroupBuyAppService

<Div>
    <Row>
        <Column ColumnSize="ColumnSize.Is6">
            <h3 class="text-dark">@L["SalesReport"]</h3>
        </Column>
        <Column ColumnSize="ColumnSize.Is6" TextAlignment="TextAlignment.End">
            <PikachuButton Clicked="() => UnitChangedAsync(ReportCalculationUnits.Daily)"
                           Class="@("pk-btn-sm " + (Filters.ReportCalculationUnit == ReportCalculationUnits.Daily ? "pk-btn-primary" : "pk-btn-outline-primary"))"
                           Disabled="IsLoading">
                @L["Daily"]
            </PikachuButton>
            <PikachuButton Clicked="() => UnitChangedAsync(ReportCalculationUnits.Weekly)"
                           Class="@("pk-btn-sm " + (Filters.ReportCalculationUnit == ReportCalculationUnits.Weekly ? "pk-btn-primary" : "pk-btn-outline-primary"))"
                           Disabled="IsLoading">
                @L["Weekly"]
            </PikachuButton>
            <PikachuButton Clicked="() => UnitChangedAsync(ReportCalculationUnits.Monthly)"
                           Class="@("pk-btn-sm " + (Filters.ReportCalculationUnit == ReportCalculationUnits.Monthly ? "pk-btn-primary" : "pk-btn-outline-primary"))"
                           Disabled="IsLoading">
                @L["Monthly"]
            </PikachuButton>
        </Column>
    </Row>
</Div>

<Div Class="rounded-cards">
    <Card>
        <CardBody>
            <Row>
                <Column ColumnSize="ColumnSize.Is5">
                    <Div Class="d-flex align-items-center gap-1">
                        <Div Class="w-100">
                            <Label>@L["From"]</Label>
                            <DateEdit TValue="DateTime?" @bind-Date="Filters.StartDate" Size="Size.Small"></DateEdit>
                        </Div>
                        <Span Class="mt-3">~</Span>
                        <Div Class="w-100">
                            <Label>@L["To"]</Label>
                            <DateEdit TValue="DateTime?" @bind-Date="Filters.EndDate" Size="Size.Small"></DateEdit>
                        </Div>
                    </Div>
                </Column>
                <Column ColumnSize="ColumnSize.Is3">
                    <Label>@L["GroupBuy"]</Label>
                    <Select TValue="Guid?" @bind-SelectedValue="Filters.GroupBuyId" Size="Size.Small">
                        <SelectItem></SelectItem>
                        @foreach (var groupBuy in GroupBuyLookup)
                        {
                            <SelectItem Value="@groupBuy.Id">@groupBuy.Name</SelectItem>
                        }
                    </Select>
                </Column>
                <Column ColumnSize="ColumnSize.IsAuto" Class="d-flex align-items-end gap-1">
                    <PikachuButton Class="pk-btn-sm pk-btn-outline-primary" Clicked="ResetAsync" Disabled="IsLoading">
                        <Icon Name="IconName.Undo"></Icon>
                        @L["Reset"]
                    </PikachuButton>
                    <PikachuButton Class="pk-btn-sm pk-btn-primary" Clicked="FilterAsync" Loading="IsLoading">
                        <Icon Name="IconName.Filter"></Icon>
                        @L["Filter"]
                    </PikachuButton>
                </Column>
            </Row>
        </CardBody>
    </Card>
    <Card>
        <CardBody>
            <Table Responsive Narrow>
                <TableHeader>
                    <TableRow>
                        <TableHeaderCell>@L["Date"]</TableHeaderCell>
                        <TableHeaderCell>@L["GrossSales"]</TableHeaderCell>
                        <TableHeaderCell>@L["NetSales"]</TableHeaderCell>
                        <TableHeaderCell>@L["Discount"]</TableHeaderCell>
                        <TableHeaderCell>@L["NumberOfOrders"]</TableHeaderCell>
                        <TableHeaderCell>@L["AverageOrderValue"]</TableHeaderCell>
                        <TableHeaderCell>@L["CostOfGoodsSold"]</TableHeaderCell>
                        <TableHeaderCell>@L["ShippingCost"]</TableHeaderCell>
                        <TableHeaderCell>@L["GrossProfit"]</TableHeaderCell>
                        <TableHeaderCell>@L["GrossProfitMargin"]</TableHeaderCell>
                    </TableRow>
                </TableHeader>
                <TableBody>
                    @foreach (var r in SalesReportList)
                    {
                        <TableRow Class="@(r.ShowDetails ? "fw-bold" : "")">
                            <TableRowCell Class="text-nowrap">
                                <Span Style="cursor: pointer;" @onclick="() => OnShowDetails(r)">
                                    <Icon Class="@(r.ShowDetails ? "fas fa-arrow-alt-circle-up" : "fas fa-arrow-alt-circle-down")"
                                          TextColor="r.ShowDetails ? TextColor.Danger : TextColor.Info" Margin="Margin.Is2.FromEnd">
                                    </Icon>
                                </Span>
                                @r.Date
                            </TableRowCell>
                            <TableRowCell>@(r.GrossSales > 0 ? r.GrossSales.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.NetSales > 0 ? r.NetSales.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.Discount > 0 ? r.Discount.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.NumberOfOrders > 0 ? r.NumberOfOrders.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.AverageOrderValue > 0 ? r.AverageOrderValue.ToString("N2") : "-")</TableRowCell>
                            <TableRowCell>@(r.CostOfGoodsSold > 0 ? r.CostOfGoodsSold.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.ShippingCost > 0 ? r.ShippingCost.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.GrossProfit > 0 ? r.GrossProfit.ToString("N0") : "-")</TableRowCell>
                            <TableRowCell>@(r.GrossProfitMargin > 0 ? r.GrossProfitMargin.ToString("N3") : "-")</TableRowCell>
                        </TableRow>
                        @if (r.ShowDetails)
                        {
                            @foreach (var detail in r.Details)
                            {
                                <TableRow Class="border-1 bg-light">
                                    <TableRowCell ColumnSpan="10" Class="text-nowrap">
                                        @detail.GroupBuyName
                                    </TableRowCell>
                                </TableRow>
                                <TableRow Class="border-1">
                                    <TableRowCell></TableRowCell>
                                    <TableRowCell>@(detail.GrossSales > 0 ? detail.GrossSales.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.NetSales > 0 ? detail.NetSales.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.Discount > 0 ? detail.Discount.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.NumberOfOrders > 0 ? detail.NumberOfOrders.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.AverageOrderValue > 0 ? detail.AverageOrderValue.ToString("N2") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.CostOfGoodsSold > 0 ? detail.CostOfGoodsSold.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.ShippingCost > 0 ? detail.ShippingCost.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.GrossProfit > 0 ? detail.GrossProfit.ToString("N0") : "-")</TableRowCell>
                                    <TableRowCell>@(detail.GrossProfitMargin > 0 ? detail.GrossProfitMargin.ToString("N3") : "-")</TableRowCell>
                                </TableRow>
                            }
                        }
                    }
                </TableBody>
            </Table>
        </CardBody>
    </Card>
</Div>
