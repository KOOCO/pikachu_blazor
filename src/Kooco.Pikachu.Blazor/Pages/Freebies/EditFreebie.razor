@page "/Freebie/Edit/{id}"

@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.GroupBuys;
@using Kooco.Pikachu.Items.Dtos;
@using Pikachu.Items;
@using Pikachu.Localization;
@using Microsoft.Extensions.Localization;
@using System.ComponentModel
@using Blazorise.Components;

@inject NavigationManager NavigationManager
@inject IStringLocalizer<PikachuResource> L

<h3>@L["NewFreebie"]</h3>
<Card>

    <CardBody>
        <div class="card-body">
            <div class="col-12"> </div>
            <div class=" col-12 row">

                <div class="col-2">
                    <label>@L["ItemName"]</label>
                </div>
                <div class="col-8">
                    <TextEdit @bind-Text="UpdateFreebieDto.ItemName" />
                </div>
                <div class="col-1">
                    <span>

                        @(string.IsNullOrWhiteSpace(freebieCreateDto.ItemName) ? 60 : (MaxTextCount - freebieCreateDto.ItemName.Count()))/@MaxTextCount

                    </span>
                </div>

            </div>

            <div class="col-12 row mt-2">
                <div class="col-2">
                    <label>
                        @L["ItemImages"]<Span>
                            <Tooltip Text="Upload upto 10 images">

                                <Icon class="fa-question-circle "></Icon>
                            </Tooltip>
                        </Span>
                    </label>
                </div>
                <div class="col-9">
                    <Field>
                        <FilePicker @ref="FilePicker"
                                                Multiple
                                     Changed="OnImageUploadAsync"
                                     ShowMode="FilePickerShowMode.List"
                                     Accept=".jpg, .png, .svg">
                             <FileTemplate>
                                 <Div Flex="Flex.JustifyContent.Between">
                                     <Div>
                                         <Heading Size="HeadingSize.Is6">@context.File.Name</Heading>
                                         <Paragraph>@FilePicker.GetFileSizeReadable(context.File)</Paragraph>
                                     </Div>
                                     <Div Class="ps-2">
                                         <Div>
                                             @if (context.File.Status == FileEntryStatus.Ready)
                                            {
                                                <Icon TextColor="TextColor.Primary" Name="IconName.FileUpload" />
                                            }
                                            else if (context.File.Status == FileEntryStatus.Uploading)
                                            {
                                                <Icon TextColor="TextColor.Warning" Name="IconName.Bolt" />
                                            }
                                            else if (context.File.Status == FileEntryStatus.Uploaded)
                                            {
                                                <Icon TextColor="TextColor.Success" Name="IconName.CheckCircle" />
                                            }
                                            else if (context.File.Status == FileEntryStatus.Error)
                                            {
                                                <Icon TextColor="TextColor.Danger" Name="IconName.TimesCircle" />
                                            }
                                        </Div>
                                        <Div>
                                            <Icon TextColor="TextColor.Danger" Name="IconName.Delete" class="cursor-pointer" Clicked="context.RemoveFile" />
                                        </Div>
                                    </Div>
                                </Div>
                            </FileTemplate>
                            <ButtonsTemplate>
                                <Progress Value="@FilePicker.GetProgressPercentage()" />
                            </ButtonsTemplate>
                        </FilePicker>
                    </Field>

                </div>
                @if (UpdateFreebieDto?.Images != null && UpdateFreebieDto.Images.Count > 0)
                {
                    <div Class="col-12 row mt-2">
                        <div class="col-2"></div>
                        <div class="col-10">
                            <div class="image-list-container">
                                @foreach (var image in UpdateFreebieDto.Images)
                                {
                                    <div class="image-container">
                                        <Image class="blur-image" Source="@image.ImageUrl" Text="Item Image" Fluid />
                                         <button class="delete-button" @onclick="() => DeleteImageAsync(image.BlobImageName)">
                                             <i class="fa fa-trash"></i>
                                         </button>
                                     </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class=" col-12 row mt-2">
                <div class="col-2">
                    <label>@L["ItemDescription"]</label>
                </div>
                <div class=" col-9">
                    <Blazored.TextEditor.BlazoredTextEditor @ref="@ItemDescription">
                        <ToolbarContent>
                            <select class="ql-header">
                                <option selected=""></option>
                                <option value="1"></option>
                                <option value="2"></option>
                                <option value="3"></option>
                                <option value="4"></option>
                                <option value="5"></option>
                            </select>
                            <span class="ql-formats">
                                <button class="ql-bold"></button>
                                <button class="ql-italic"></button>
                                <button class="ql-underline"></button>
                                <button class="ql-strike"></button>
                            </span>
                            <span class="ql-formats">
                                <select class="ql-color"></select>
                                <select class="ql-background"></select>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-list" value="ordered"></button>
                                <button class="ql-list" value="bullet"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-link"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-image"></button>
                            </span>
                            <span class="ql-formats">
                                <button class="ql-video"></button>
                            </span>
                        </ToolbarContent>
                    </Blazored.TextEditor.BlazoredTextEditor>
                </div>
            </div>

            <div class=" col-12 row mt-5">
                <div class="row mb-2"></div>
                <div class="col-2">
                    <label>@L["ChooseGroupBuy"]</label>
                </div>
                <div class="col-4">

                    <Radio TValue="bool" @bind-Checked="UpdateFreebieDto.ApplyToAllGroupBuy" Value="true" Group="ApplyToAllGroupBuy">
                        @L["ApplyToAllGroupBuy"]
                    </Radio>
                </div>
            </div>
            <div class=" col-12 row mt-1">
                <div class="col-2">
                </div>
                <div class="col-2">
                    <Radio TValue="bool" @bind-Checked="UpdateFreebieDto.ApplyToAllGroupBuy" Value="false" Group="ApplyToAllGroupBuy"></Radio>
                </div>
                <div class="col-7">
                    <Autocomplete TItem="KeyValueDto"
                                  TValue="Guid"
                                  Data="@GroupBuyList"
                                  TextField="@(( item ) => item.Name)"
                                  ValueField="@(( item ) => item.Id)"
                    @bind-SelectedValues="SelectedItems"
                    @bind-SelectedTexts="SelectedTexts"
                                  Placeholder="Search..."
                                  Filter="AutocompleteFilter.StartsWith"
                                  SelectionMode="AutocompleteSelectionMode.Multiple"
                                  CustomFilter="@((item, searchValue) =>item.Name != null && item.Name.IndexOf(searchValue, 0, StringComparison.CurrentCultureIgnoreCase) >= 0)"
                                                HighlightSearch
                                   Immediate="true"
                     @ref="AutocompleteField"  
                                   Size="Size.Small">
                         <NotFoundContent> @L["NotFound"] </NotFoundContent>
                     </Autocomplete>
                 </div>
             </div>
             <div class=" col-12 row mt-1">
                 <div class="col-2">
                     @L["ApplyCondition"]
                 </div>
                 <div class="col-2">
                     <Radio TValue="bool" Group="Condition">
                         <Label>@L["Uncondition"]</Label>
                     </Radio>
                 </div>
             </div>
             <div class=" col-12 row mt-1">
                 <div class="col-2">
                 </div>
                 <div class="col-2">
                     <Radio TValue="bool" Group="Condition" @bind-value="UpdateFreebieDto.UnCondition">
                         <Label>@L["WhenOrderReach"]</Label>
                     </Radio>
                 </div>
                 <div class="col-3">
                     <select class="form-control form-control-sm">
                         @foreach (var enumValue in Enum.GetValues(typeof(FreebieOrderReach)))
                        {
                            <option value="@enumValue">@L[enumValue.ToString()]</option>
                        }
                    </select>
                    @* Data="@ShippingMethods"
                    @bind-SelectedValue="@CreateItemDto.ShippingMethodId" *@

                </div>
            </div>
            <div class=" col-12 row mt-1">
                <div class="col-2">
                </div>
                <div class="col-2">
                    <Label>@L["AmountReach"]</Label>
                </div>
                <div class="col-3">
                    <div class="input-group">
                        <Span Class="bg-primary text-light px-2 py-1">$</Span>
                        <NumericEdit TValue="decimal" @bind-Value="UpdateFreebieDto.MinimumAmount" Size="Size.Small" />

                    </div>


                </div>
                <div class="col-1 text-end">
                    <Label l>@L["Get"]</Label>
                </div>
                <div class="col-3">
                    <div class="input-group">
                        <NumericEdit Size="Size.Small" TValue="int" @bind-Value="UpdateFreebieDto.MinimumPiece" />
                        <Span Class="bg-primary text-light px-2 py-1">@L["Piece"]</Span>
                    </div>
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-2">@L["ActivityDate"]</div>
                <div class="col-4">


                    <DateEdit Class="form-control" @bind-Date="UpdateFreebieDto.ActivityStartDate" Placeholder="@L["StartDate"].ToString()" TValue="DateTime?" />

                </div>
                <div class="col-1">
                </div>
                <div class="col-4">

                    <DateEdit Class="form-control" @bind-Date="UpdateFreebieDto.ActivityEndDate" Placeholder="@L["EndDate"].ToString()" TValue="DateTime?" />


                </div>
            </div>
            <div class="row mt-2">

                <div class="col-2">
                    <label>@L["FreebieAmount"]</label>
                </div>
                <div class="col-9">
                    <NumericEdit @bind-Value="UpdateFreebieDto.FreebieAmount" TValue="decimal">
                    </NumericEdit>
                </div>

            </div>
        </div>
    </CardBody>
    <CardFooter>
        <div class="row">
            <div class="col-12 text-lg-end">
                <Button Type="@ButtonType.Button" class="btn btn-danger me-1">@L["Cancel"]</Button>
                <Button Type="@ButtonType.Button" Clicked="UpdateFreebieAsync" class="btn btn-primary me-1">
                    <i class="fa fa-check"></i>
                    @L["Save"]
                </Button>
            </div>
        </div>
    </CardFooter>
</Card>

@code {

 }
