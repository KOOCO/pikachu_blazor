@page "/CashFlowManagement/ElectronicInvoiceSetting"
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.ElectronicInvoiceSettings;
@using Pikachu.Items;
@using Pikachu.Localization;
@using Microsoft.Extensions.Localization;
@using System.ComponentModel
@using Blazorise.Components;


@inject NavigationManager NavigationManager
@inject IStringLocalizer<PikachuResource> L
@inject IMessageService _message
@attribute [Authorize]

<style>
    .row {
    margin-top: 10px;
    }

    .site-tag-plus {
    background: #fff;
    border-style: dashed;
    }
    /* you can make up upload button and sample style by using stylesheets */
    .ant-upload-select-picture-card i {
    color: #999;
    font-size: 32px;
    }

    .ant-upload-select-picture-card .ant-upload-text {
    margin-top: 8px;
    color: #666;
    }

    .anticon {
    vertical-align: 0.1em !important
    }

</style>


<div class="col-12">
    <div>
        <h3>@L["電子發票設定"]</h3>
    </div>
    <Card>
        <CardBody>
            <Validations @ref="@CreateValidationsRef" Model="@CreateUpdateElectronicInvoiceDto" ValidateOnLoad="false">
                <!-- Use ECPay electronic receipt -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end">
                        <FieldLabel>@L["UseECPayelectronicreceipt"]</FieldLabel>
                    </div>
                    <div class="col-9">
                        <Switch TValue="bool" Disabled="@(!CanSave)" @bind-Checked="@CreateUpdateElectronicInvoiceDto.IsEnable"></Switch>
                        @if (!CanSave)
                        {
                            <AntDesign.Alert Type="@AntDesign.AlertType.Error"
                            Message="@L["Error"]"
                            Description="@L["PleaseFillInTheRequiredInformation."]"
                            ShowIcon="true" /> 
                        }
                        else{
                            <AntDesign.Alert Type="@AntDesign.AlertType.Info"
                            Message="@L["Info"]"
                            Description="@L["Ifthissettingisturnedoff,pleaseprinttheinvoiceforthecustomer"]"
                            ShowIcon="true" />
                        }
                    </div>
                </div>

                <!-- Store Code -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["StoreName"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <TextEdit class="form-control"
                            @bind-Text="@CreateUpdateElectronicInvoiceDto.StoreCode">
                                <Feedback>
                                    <ValidationError></ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </div>
                </div>

                <!-- Hash Key -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["HashKey"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <TextEdit class="form-control"
                            @bind-Text="@CreateUpdateElectronicInvoiceDto.HashKey">
                                <Feedback>
                                    <ValidationError></ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </div>
                </div>

                <!-- Hash IV -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["HashIV"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <TextEdit class="form-control"
                            @bind-Text="@CreateUpdateElectronicInvoiceDto.HashIV">
                                <Feedback>
                                    <ValidationError></ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </div>
                </div>

                <!-- Display Invoice Name -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["InvoiceNameDisplay"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <TextEdit class="form-control"
                            @bind-Text="@CreateUpdateElectronicInvoiceDto.DisplayInvoiceName">
                                <Feedback>
                                    <ValidationError></ValidationError>
                                </Feedback>
                            </TextEdit>
                        </Validation>
                    </div>
                </div>

                <!-- Days After Shipment -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["DaysAfterShipmentToGenerateInvoice"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <NumericEdit TValue="int"
                            Min="0"
                            Max="90"
                            class="form-control"
                            @bind-Value="@CreateUpdateElectronicInvoiceDto.DaysAfterShipmentGenerateInvoice">
                                <Feedback>
                                    <ValidationError></ValidationError>
                                </Feedback>
                            </NumericEdit>
                        </Validation>
                    </div>
                </div>

                <!-- Status On Invoice Issue -->
                <div class="col-12 row mb-3">
                    <div class="col-3 text-lg-end pt-2">
                        <label>@L["StatusOnInvoiceIssue"]</label>
                    </div>
                    <div class="col-9">
                        <Validation>
                            <Select TValue="DeliveryStatus"
                            class="form-control"
                            @bind-SelectedValue="@CreateUpdateElectronicInvoiceDto.StatusOnInvoiceIssue">
                                @foreach (var status in Enum.GetValues<DeliveryStatus>())
                                {
                                    <SelectItem Value="@status">@L[status.ToString()]</SelectItem>
                                }
                            </Select>
                            <Feedback>
                                <ValidationError></ValidationError>
                            </Feedback>
                        </Validation>
                    </div>
                </div>
            </Validations>
        </CardBody>
    </Card>
</div>

<div class="row">
    <div class="col-12 text-lg-end">
        <Button Type="@ButtonType.Button"
        class="btn btn-primary"
        Clicked="CreateEntityAsync"
        Disabled="@(!CanSave)">
            <i class="fa fa-check"></i>
            @L["Save"]
        </Button>
    </div>
</div>

@code {
    private bool CanSave =>  IsValid();

    private bool IsValid()
    {
        // Ensure all required fields are not null or empty and match validation rules.
        var result= !string.IsNullOrWhiteSpace(CreateUpdateElectronicInvoiceDto.StoreCode)
            && !string.IsNullOrWhiteSpace(CreateUpdateElectronicInvoiceDto.HashKey)
            && !string.IsNullOrWhiteSpace(CreateUpdateElectronicInvoiceDto.HashIV)
            && !string.IsNullOrWhiteSpace(CreateUpdateElectronicInvoiceDto.DisplayInvoiceName)
            && CreateUpdateElectronicInvoiceDto.DaysAfterShipmentGenerateInvoice > -1
            && Enum.IsDefined(typeof(DeliveryStatus), CreateUpdateElectronicInvoiceDto.StatusOnInvoiceIssue);
        if (!result)
        {
            CreateUpdateElectronicInvoiceDto.IsEnable = false;
        }
        return result;
    }
}


