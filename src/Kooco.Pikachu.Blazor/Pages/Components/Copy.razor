@using Kooco.Pikachu.Localization
@using Microsoft.Extensions.Localization
@using Volo.Abp.AspNetCore.Components.Notifications
@inject IJSRuntime JSRuntime
@inject IUiNotificationService UiNotificationService
@inject IStringLocalizer<PikachuResource> L
@inject NavigationManager NavigationManager

<Span Style="cursor: pointer;">
    @if (ShouldDisplayText && IconAlignment != Alignment.Start)
    {
        <Span @onclick="CopyToClipboard">
            @_displayText
        </Span>
    }
    @if (!_text.IsNullOrWhiteSpace() && ShouldDisplayIcon)
    {
        <Span>
            <Span @onclick="CopyToClipboard" Class="text-dark">
                <Icon Class="fa-copy mx-1"></Icon>
            </Span>
            @if (IsLink)
            {
                <a href="@_text" target="_blank" class="text-dark">
                    <Icon Class="fa-arrow-up-right-from-square mx-1"></Icon>
                </a>
            }
        </Span>
    }
    @if (ShouldDisplayText && IconAlignment == Alignment.Start)
    {
        <Span>
            @_displayText
        </Span>
    }
</Span>

@code {

    [Parameter]
    public object? Text { get; set; }

    [Parameter]
    public object? DisplayText { get; set; }

    [Parameter]
    public bool ShouldDisplayText { get; set; } = true;

    [Parameter]
    public bool ShouldDisplayIcon { get; set; } = true;

    [Parameter]
    public Alignment IconAlignment { get; set; } = Alignment.End;

    [Parameter]
    public bool IsLink { get; set; } = false;

    private string? _text { get { return Text?.ToString(); } }

    private string? _displayText { get { return DisplayText?.ToString(); } }

    protected override void OnParametersSet()
    {
        DisplayText ??= _text;
    }

    private async Task CopyToClipboard()
    {
        try
        {
            await JSRuntime.InvokeVoidAsync("clipboard.copy", _text);
            await UiNotificationService.Success(L["TextCopied", _text]);
        }
        catch
        {
            await UiNotificationService.Error(L["UnableToCopyText"]);
        }
    }
}
