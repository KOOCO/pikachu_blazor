@page "/Product-Categories"
@attribute [Authorize(PikachuPermissions.ProductCategories.Default)]
@using Kooco.Pikachu.Permissions
@using Kooco.Pikachu.ProductCategories
@inherits PikachuComponentBase
@inject IProductCategoryAppService ProductCategoryAppService
@inject NavigationManager NavigationManager
@using System.Globalization

<Div>
    <Row>
        <Column ColumnSize="ColumnSize.Is12.Is6.OnDesktop">
            <h3 class="text-dark">@L["ProductCategories"]</h3>
        </Column>
        @if (CanCreateProductCategory)
        {
            <Column ColumnSize="ColumnSize.Is12.Is6.OnDesktop" TextAlignment="TextAlignment.End">
                <PikachuButton Class="pk-btn-sm pk-btn-primary" Clicked="Create">
                    <Icon Name="IconName.Add"></Icon>
                    @L["AddMain"]
                </PikachuButton>

                <PikachuButton Class="pk-btn-sm pk-btn-primary" Clicked="CreateSub">
                    <Icon Name="IconName.Add"></Icon>
                    @L["AddSub"]
                </PikachuButton>
            </Column>
        }
    </Row>
</Div>
<Card>
    <CardBody>
        <Div Class="input-group">
            <TextEdit @bind-Text="Filters.Filter" />
            <Button Color="Color.Primary" Clicked="ApplyFilters">
                <Icon Class="fas fa-search"></Icon>
            </Button>
        </Div>
    </CardBody>
</Card>
<Card>
    <CardBody>
        <DataGrid TItem="ProductCategoryDto"
        Data="ProductCategoryList"
        ReadData="OnDataGridReadAsync"
        TotalItems="TotalCount"
        ShowPager="true"
        PageSize="PageSize"
        CurrentPage="CurrentPage"
        @bind-SelectedRow="Selected"
        RowClicked="RowClicked"
        DetailRowTrigger="@((e)=>e.Item.Id == Selected?.Id)"
        Hoverable
        Narrow
        Responsive
        Striped>
            <DataGridColumns>
                <DataGridColumn Width="150px"
                TItem="ProductCategoryDto"
                Field="@nameof(ProductCategoryDto.Id)"
                Sortable="false"
                Caption="@L["Actions"]">
                    <DisplayTemplate>
                        <Dropdown>
                            <DropdownToggle Color="Color.Primary">
                                @L["Actions"]
                            </DropdownToggle>
                            <DropdownMenu>
                                @if (CanEditProductCategory)
                                {
                                    <DropdownItem Clicked="() => Edit(context)">
                                        @L["Edit"]
                                    </DropdownItem>
                                }
                                @if (CanDeleteProductCategory)
                                {
                                    <DropdownItem Clicked="() => DeleteAsync(context)">
                                        @L["Delete"]
                                    </DropdownItem>
                                }
                            </DropdownMenu>
                        </Dropdown>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductCategoryDto"
                Field="@nameof(ProductCategoryDto.Name)"
                Caption="@L["Name"]">
                    <DisplayTemplate >
                        @if (CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "zh")
                        {
                            if(context.ZHName.IsNullOrEmpty())
                            {
                                @context.Name;
                            }
                            else{
                                @context.ZHName;
                            }
                        }
                        else
                        {
                            @context.Name;
                        }
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductCategoryDto"
                Field="@nameof(ProductCategoryDto.Description)"
                Caption="@L["Description"]"
                TextAlignment="TextAlignment.Center"
                HeaderTextAlignment="TextAlignment.Center">
                    <DisplayTemplate>
                        <Icon Name="IconName.Eye" Clicked="() => ViewDescription(context)" Class="cursor-pointer"></Icon>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductCategoryDto"
                Field="@nameof(ProductCategoryDto.ProductCategoryImages)"
                Sortable="false"
                Caption="@L["CarousalImages"]"
                TextAlignment="TextAlignment.Center"
                HeaderTextAlignment="TextAlignment.Center">
                    <DisplayTemplate>
                        @if (context.ProductCategoryImages.Count > 0)
                        {
                            <Icon Name="IconName.Eye" Clicked="() => ViewCarousal(context)" Class="cursor-pointer"></Icon>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
            <DetailRowTemplate >


                <h4>@L["SubCategories"]</h4>
                <DataGrid TItem="ProductCategoryDto"
                Data="ProductSubCategoryList"

                Hoverable

                Responsive
                Striped>
                    <DataGridColumns>
                        <DataGridColumn Width="150px"
                        TItem="ProductCategoryDto"
                        Field="@nameof(ProductCategoryDto.Id)"
                        Sortable="false"
                        Caption="@L["Actions"]">
                            <DisplayTemplate Context="row">
                                <Dropdown>
                                    <DropdownToggle Color="Color.Primary">
                                        @L["Actions"]
                                    </DropdownToggle>
                                    <DropdownMenu>
                                        @if (CanEditProductCategory)
                                        {
                                            <DropdownItem Clicked="() => EditSub(row)">
                                                @L["Edit"]
                                            </DropdownItem>
                                        }
                                        @if (CanDeleteProductCategory)
                                        {
                                            <DropdownItem Clicked="() => DeleteAsync(row)">
                                                @L["Delete"]
                                            </DropdownItem>
                                        }
                                    </DropdownMenu>
                                </Dropdown>
                            </DisplayTemplate>
                        </DataGridColumn>
                        <DataGridColumn TItem="ProductCategoryDto"
                        Field="@nameof(ProductCategoryDto.Name)"
                        Caption="@L["Name"]">
                            <DisplayTemplate Context="item">
                                @if (CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "zh")
                                {
                                    if(item.ZHName.IsNullOrEmpty())
                                    {
                                        @item.Name;
                                    }
            else{
            @item.ZHName;
            }
        }
        else
        {
            @item.Name;
        }
    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductCategoryDto"
                                Field="@nameof(ProductCategoryDto.Description)"
                                Caption="@L["Description"]"
                                TextAlignment="TextAlignment.Center"
                                HeaderTextAlignment="TextAlignment.Center">
                    <DisplayTemplate Context="row">
                        <Icon Name="IconName.Eye" Clicked="() => ViewDescription(row)" Class="cursor-pointer"></Icon>
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="ProductCategoryDto"
                                Field="@nameof(ProductCategoryDto.ProductCategoryImages)"
                                Sortable="false"
                                Caption="@L["CarousalImages"]"
                                TextAlignment="TextAlignment.Center"
                                HeaderTextAlignment="TextAlignment.Center">
                    <DisplayTemplate Context="row">
                        @if (row.ProductCategoryImages.Count > 0)
                        {
                            <Icon Name="IconName.Eye" Clicked="() => ViewCarousal(row)" Class="cursor-pointer"></Icon>
                        }
                    </DisplayTemplate>
                </DataGridColumn>
            </DataGridColumns>
        
        </DataGrid>
        
    </DetailRowTemplate>
        </DataGrid>
    </CardBody>
</Card>
<Modal @ref="DescriptionModal">
    <ModalContent Centered Size="ModalSize.ExtraLarge" Overflow="Overflow.Auto">
        <ModalHeader>
            <h4> @if (CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "zh")
                        {
                            if(Selected.ZHName.IsNullOrEmpty())
                            {
                                @Selected.Name;
                            }
                            else{
                                @Selected.ZHName;
                            }
                        }
                        else
                        {
                             if(Selected.Name.IsNullOrEmpty())
                            {
                                @Selected.ZHName;
                            }
                            else{
                                @Selected.Name;
                            }
                        }</h4>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            @((MarkupString)Selected.Description)
        </ModalBody>
    </ModalContent>
</Modal>

<Modal @ref="CarousalModal">
    <ModalContent Centered Size="ModalSize.ExtraLarge" Style="min-height: 500px;">
        <ModalHeader>
            <h4>  @if (CultureInfo.CurrentCulture.TwoLetterISOLanguageName == "zh")
                        {
                            if(Selected.ZHName.IsNullOrEmpty())
                            {
                                @Selected.Name;
                            }
                            else{
                                @Selected.ZHName;
                            }
                        }
                        else
                        {
                             if(Selected.Name.IsNullOrEmpty())
                            {
                                @Selected.ZHName;
                            }
                            else{
                                @Selected.Name;
                            }
                        }</h4>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Div Class="d-flex justify-content-between mb-2">
                <PikachuButton Class="pk-btn-sm pk-btn-primary"
                               Disabled="@(SelectedSlide == 0)"
                               Clicked="@(() => SelectedSlide = SelectedSlide > 0 ? SelectedSlide - 1 : 0)">
                    <Icon Name="IconName.ArrowLeft"></Icon>
                    @L["Previous"]
                </PikachuButton>
                <h5 class="text-center m-0">@L["Image"] @(SelectedSlide + 1)</h5>
                <PikachuButton Class="pk-btn-sm pk-btn-primary"
                               Disabled="@(SelectedSlide == (Selected.ProductCategoryImages.Count - 1))"
                               Clicked="@(() => SelectedSlide = SelectedSlide < (Selected.ProductCategoryImages.Count - 1) ? SelectedSlide + 1 : (Selected.ProductCategoryImages.Count - 1))">
                    @L["Next"]
                    <Icon Name="IconName.ArrowRight"></Icon>
                </PikachuButton>
            </Div>
            <Div Class="text-center mb-3" Overflow="Overflow.Auto">
                @if (Selected.ProductCategoryImages.Count > SelectedSlide)
                {
                    var image = Selected.ProductCategoryImages[SelectedSlide];
                    @if (!image.Url.IsNullOrWhiteSpace())
                    {
                        <Image Source="@image.Url" Style="height: 500px;" />
                    }
                }
            </Div>
        </ModalBody>
    </ModalContent>
</Modal>