@using Kooco.Pikachu.ImageCompressors
@using Kooco.Pikachu.Localization
@using Volo.Abp.AspNetCore.Components.Notifications
@using Volo.Abp.AspNetCore.Components.Web
@inherits PikachuComponentBase
@inject AbpBlazorMessageLocalizerHelper<PikachuResource> LH
@inject IUiNotificationService UiNotificationService
@inject IJSRuntime JSRuntime
@inject IImageCompressorService ImageCompressorService

<Form>
    <Validations @ref="@ValidationsRef" Model="@Entity" ValidateOnLoad="false">
        <Card>
            <CardBody>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.Is3.OnDesktop">
                        <h4>@L["FrontendInformation"]</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.Is9.OnDesktop">
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["WebpageTitle"]<Span> *</Span></FieldLabel>
                                <TextEdit @bind-Text="Entity.WebpageTitle">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </TextEdit>
                            </Field>
                        </Validation>
                        <Validation MessageLocalizer="@LH.Localize">
                            <Field>
                                <FieldLabel>@L["Description"]</FieldLabel>
                                <MemoEdit @bind-Text="Entity.Description" Rows="6">
                                    <Feedback>
                                        <ValidationError />
                                    </Feedback>
                                </MemoEdit>
                            </Field>
                        </Validation>
                    </Column>
                </Row>
                <Divider></Divider>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.Is3.OnDesktop">
                        <h4>@L["Logo"]</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.Is9.OnDesktop">
                        <Div Class="@((!string.IsNullOrWhiteSpace(Entity.LogoBase64) || !string.IsNullOrWhiteSpace(Entity.LogoUrl) ? "has-images" : "") + " container-less-filepicker filepicker-sm")">
                            <Field>
                                <FilePicker Changed="@((e) => OnFileUploadAsync(e, "logo"))"
                                            ShowMode="FilePickerShowMode.List"
                                            Accept="@(string.Join(", ", Constant.ValidImageExtensions))">
                                    <FileTemplate></FileTemplate>
                                    <ButtonsTemplate></ButtonsTemplate>
                                </FilePicker>
                            </Field>
                        </Div>
                        <div class="image-list-container">
                            <div>
                                <div class="image-container">
                                    <Image class="blur-image" Source="@(Entity.LogoBase64 != null ? "data:image/png;base64," + Entity.LogoBase64 : Entity.LogoUrl)" Text="Logo Image" Fluid />
                                </div>
                            </div>
                        </div>
                    </Column>
                </Row>
                <Divider></Divider>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.Is3.OnDesktop">
                        <h4>@L["Banner"]</h4>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.Is9.OnDesktop">
                        <Div Class="@((!string.IsNullOrWhiteSpace(Entity.BannerBase64) || !string.IsNullOrWhiteSpace(Entity.BannerUrl) ? "has-images" : "") + " container-less-filepicker filepicker-sm")">
                            <Field>
                                <FilePicker Changed="@((e) => OnFileUploadAsync(e, "banner"))"
                                            ShowMode="FilePickerShowMode.List"
                                            Accept="@(string.Join(", ", Constant.ValidImageExtensions))">
                                    <FileTemplate></FileTemplate>
                                    <ButtonsTemplate></ButtonsTemplate>
                                </FilePicker>
                            </Field>
                        </Div>
                        <div class="image-list-container">
                            <div>
                                <div class="image-container">
                                    <Image class="blur-image" Source="@(Entity.BannerBase64 != null ? "data:image/png;base64," + Entity.BannerBase64 : Entity.BannerUrl)" Text="Banner Image" Fluid />
                                </div>
                            </div>
                        </div>
                    </Column>
                </Row>
                <Divider></Divider>
                <Row>
                    <Column ColumnSize="ColumnSize.Is12.Is3.OnDesktop">
                        <Div Class="d-flex gap-1">
                            <h4>
                                @L["Favicon"]
                            </h4>
                            <Span>
                                <Tooltip Display="Display.InlineBlock" Text="@L["OnlyAcceptsICO"]">
                                    <Icon class="fa-question-circle" />
                                </Tooltip>
                            </Span>
                        </Div>
                    </Column>
                    <Column ColumnSize="ColumnSize.Is12.Is9.OnDesktop">
                        <Div Class="@((!string.IsNullOrWhiteSpace(Entity.FaviconBase64) || !string.IsNullOrWhiteSpace(Entity.FaviconUrl) ? "has-images" : "") + " container-less-filepicker filepicker-sm")">
                            <Field>
                                <FilePicker Changed="@((e) => OnFileUploadAsync(e, "favicon"))"
                                            ShowMode="FilePickerShowMode.List"
                                            Accept="@(string.Join(", ", Constant.ValidFaviconExtensions))"
                                            drop-text="ICO">
                                    <FileTemplate></FileTemplate>
                                    <ButtonsTemplate></ButtonsTemplate>
                                </FilePicker>
                            </Field>
                        </Div>
                        <div class="image-list-container">
                            <div>
                                <div class="image-container">
                                    <Image class="blur-image" Source="@(Entity.FaviconBase64 != null ? "data:image/png;base64," + Entity.FaviconBase64 : Entity.FaviconUrl)" Text="Favicon Image" Fluid />
                                </div>
                            </div>
                        </div>
                    </Column>
                </Row>
            </CardBody>
        </Card>
    </Validations>

    <Div Class="text-end">
        <PikachuButton Class="pk-btn-transparent" Disabled="IsLoading" Loading="IsCancelling" Clicked="CancelAsync">
            @L["Cancel"]
        </PikachuButton>
        <PikachuButton Class="pk-btn-primary" Disabled="IsCancelling" Loading="IsLoading" Clicked="UpdateAsync">
            @L["Update"]
        </PikachuButton>
    </Div>
</Form>