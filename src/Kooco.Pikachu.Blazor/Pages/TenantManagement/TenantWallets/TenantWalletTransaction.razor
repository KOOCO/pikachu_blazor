@page "/wallet"
@using System.ComponentModel.DataAnnotations
@using Kooco.Pikachu.Tenants.Requests;
@using Kooco.Pikachu.Tenants;
@inherits FormComponentBase
@inject ITenantWalletAppService WalletService
@inject ExcelDownloadHelper ExcelDownloadHelper
@attribute [Authorize(PikachuPermissions.TenantWalletTransactions.Default)]
<PageTitle>Wallet Management</PageTitle>


        <div class="mb-4">
            <h3 class="text-dark fw-bold">@L["WalletManagement"]</h3>
        </div>

      
     

<Row Margin="Margin.Is4.FromBottom">
    <Column ColumnSize="ColumnSize.Is4">
        <Card Class="compact-card"
              Height="Height.Is100"
              Style="background-color: #72D9BF45;">
            <CardBody Class="compact-card-body">
                <Div Class="compact-card-content">
                    <Text Class="compact-card-text"
                          Style="color: #217762FF;">
                        @PL["TenantWallet:Balance"]
                    </Text>
                    <Text Class="compact-card-text"
                          Style="font-weight: bold; color: #217762FF;">
                       $@balance.ToString("N0")
                    </Text>
                </Div>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <Card Class="compact-card"
              Height="Height.Is100"
              Style="background-color: #FFDB5A45;">
            <CardBody Class="compact-card-body">
                <Div Class="compact-card-content">
                    <Text Class="compact-card-text"
                          Style="color: #FD9150FF;">
                        $@PL["TenantWallet:RechargeAmountOfStored"]
                    </Text>
                    <Text Class="compact-card-text"
                          Style="font-weight: bold; color: #FD9150FF;">
                        $@rechargeAmountOfStored.ToString("N0")
                    </Text>
                </Div>
            </CardBody>
        </Card>
    </Column>
    <Column ColumnSize="ColumnSize.Is4">
        <Card Class="compact-card"
              Height="Height.Is100"
              Style="background-color: #DE3B4045;">
            <CardBody Class="compact-card-body">
                <Div Class="compact-card-content">
                    <Text Class="compact-card-text"
                          Style="color: #B93448FF;">
                        @PL["TenantWallet:DeductionAmountOfStored"]
                    </Text>
                    <Text Class="compact-card-text"
                          Style="font-weight: bold; color: #B93448FF; ">
                        $@deductionAmountOfStored.ToString("N0")
                    </Text>
                </Div>
            </CardBody>
        </Card>
    </Column>
</Row>

  <Card Style="border-radius:1rem!important">
            <CardHeader  Class="d-flex justify-content-between align-items-center">
                <div class="text-muted">
                  
                        <span>@L["Showingtransactionsfromthepast6months"]</span>
                    
                </div>
                <div class="d-flex gap-2">
                    <Button Color="Color.Secondary" Outline  Clicked="() => ExportSelected()">
                        <Icon Name="IconName.Download" Class="me-2" />
                        @L["Export"] (@SelectedTransactions.Count)
                    </Button>
                    <Button Color="Color.Primary" Clicked="() => ExportAll()" >
                        <Icon Name="IconName.FileDownload" Class="me-2" />
                       @L["ExportAll"]
                    </Button>
                </div>
            </CardHeader>

            <CardBody style="padding-left:0px!important;padding-right:0px!important">
            <DataGrid TItem="TenantWalletTransactionDto" Data="@Transactions" ShowPager="false"  @bind-SelectedRows="@SelectedTransactions" SelectionMode="DataGridSelectionMode.Multiple" >
    <DataGridMultiSelectColumn TItem="TenantWalletTransactionDto" Width="30px"></DataGridMultiSelectColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.Timestamp)" Caption="@L["Timestamp"]">
        <DisplayTemplate>@context.Timestamp.ToString("M/d/yyyy h:mm tt")</DisplayTemplate>
    </DataGridColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.TransactionNo)" Caption="@L["TransactionNo"]"/>
      
   
    <DataGridColumn  Field="@nameof(TenantWalletTransactionDto.TransactionType)" Caption="@L["TransactionType"]" >
    <DisplayTemplate>
            @L["WalletTransactionType:"+context.TransactionType.ToString()]
    </DisplayTemplate> 
    
    </DataGridColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.TransactionStatus)" Caption="@L["TransactionStatus"]">
        <DisplayTemplate >
            @if(context.TransactionStatus == WalletDeductionStatus.Completed)
            {
                        <Badge Color="Color.Success">@L["Wallet:"+context.TransactionStatus.ToString()]</Badge>
            }
            else if (context.TransactionStatus == WalletDeductionStatus.Pending)
            {
                <Badge Color="Color.Warning">@L[context.TransactionStatus.ToString()]</Badge>
            }
            else
            {
                <Badge Color="Color.Danger">@L[context.TransactionStatus.ToString()]</Badge>
            }
        </DisplayTemplate>
    </DataGridColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.Amount)" Caption="@L["Amount"]">
       <DisplayTemplate>
    <span class="@((context.Amount > 0) ? "text-success" : "text-danger")">
        @(context.Amount > 0 ? $"+{context.Amount:N0}" : $"{context.Amount:N0}")
    </span>
</DisplayTemplate>
    </DataGridColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.Balance)" Caption="@L["Balance"]">
        <DisplayTemplate >@context.Balance.ToString("N0")</DisplayTemplate>
    </DataGridColumn>
    <DataGridColumn Field="@nameof(TenantWalletTransactionDto.Note)" Caption="@L["Note"]" />
</DataGrid>
            </CardBody>
     </Card>
    


<style>
    .compact-card {
        /* 基本外觀 */
        border: 1px solid #dee2e6; /* 邊框顏色 */
        border-radius: 8px; /* 圓角 */
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1); /* 陰影效果 */
        background-color: #f8f9fa; /* 預設背景色，會被內聯樣式覆蓋 */
        /* 尺寸與佈局 - Height.Is100 處理高度 */
        display: flex; /* 使用 Flexbox */
        flex-direction: column; /* 確保卡片主體在需要時可以垂直伸展 */
        /* 動畫效果 (可選) */
        transition: transform 0.2s ease, box-shadow 0.2s ease;
    }

    .compact-card-body {
        /* 內邊距 */
        padding: 0.75rem 1rem; /* 可根據需要調整內邊距 */
        /* 尺寸與佈局 */
        display: flex; /* 使用 Flexbox */
        align-items: center; /* 垂直置中內容 */
        justify-content: center; /* 水平置中內容 */
        flex-grow: 1; /* 允許主體增長以填滿卡片高度 */
        width: 100%; /* 寬度佔滿 */
    }

    .compact-card-content {
        /* 佈局：垂直堆疊 */
        display: flex;
        flex-direction: column; /* 主要設定：讓子元素 (Text) 垂直堆疊 */
        justify-content: center; /* 在其空間內垂直置中 */
        align-items: flex-start; /* 將文字對齊到起始處 (左側) */
        /* 尺寸 */
        width: 100%; /* 佔滿寬度 */
        /* 間距 */
        gap: 0.8rem; /* 標題和金額之間的間距 */
        text-align: left; /* 確保文字靠左對齊 */
    }

        .compact-card-content .compact-card-text {
            margin-bottom: 0; /* 移除預設的底部邊距 */
            line-height: 1.2; /* 調整行高以使其更緊湊 */
            white-space: nowrap; /* 防止文字換行 */
            overflow: hidden; /* 隱藏溢出的內容 */
            text-overflow: ellipsis; /* 如果文字溢出，顯示省略號 (...) */
            width: 100%; /* 允許文字在應用省略號前佔滿可用寬度 */
        }

            /* 標題的特定樣式 */
            .compact-card-content .compact-card-text:first-child {
                /* 移除了固定的寬度 */
                font-family: Inter, sans-serif; /* 加入備用字體 */
                font-size: clamp(1rem, 2.5vw, 1.5rem); /* 響應式字體大小 */
                font-weight: 400;
            }

            /* 金額的特定樣式 */
            .compact-card-content .compact-card-text:last-child {
                font-family: Inter, sans-serif; /* 加入備用字體 */
                font-size: clamp(1.5rem, 4vw, 2.25rem); /* 響應式字體大小 */
                font-weight: 700; /* 保持粗體 */
            }

    /* 確保編輯表單的卡片也伸展 */
    .row > .col-md-6 > .card { /* 針對第二行的欄位 (假設它們使用 ColumnSize.Is6.OnTablet 產生的預設 col-md-6 class) */
        height: 100%; /* 使其高度也為 100% */
    }

</style>