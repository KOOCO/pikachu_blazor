@page "/Refund"
@using Kooco.Pikachu.EnumValues;
@using Kooco.Pikachu.Localization;
@using Kooco.Pikachu.Orders;
@using Kooco.Pikachu.Refunds;
@using Microsoft.Extensions.Localization;
@using Blazorise;
@using Blazorise.LoadingIndicator;
@using Volo.Abp.AspNetCore.Components.Messages;
@inherits PikachuComponentBase;
@inject IRefundAppService _refundAppService;
@inject IStringLocalizer<PikachuResource> L;
@inject IUiMessageService _uiMessageService;
@inject IJSRuntime JSRunTime;

<LoadingIndicator @ref="loading" FullScreen FadeIn></LoadingIndicator>

 <div class="row">
     <div class="col-6">
         <h3>@L["Refunds"]</h3>
     </div>
     <div class="col-6 text-lg-end">
         <div class="input-group">
             <InputText class="form-control form-control-sm search-bar" @bind-Value="@Filter" placeholder="@L["Search"]"></InputText>
             <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="OnSearch">
                 <i class="fa fa-search"></i>
             </Button>
         </div>
     </div>
 </div>
 <Card>
     <CardBody>
         <DataGrid TItem="RefundDto"
                   Data="Refunds"
                   ReadData="OnDataGridReadAsync"
                   TotalItems="TotalCount"
                   ShowPager="true"
                   PageSize="PageSize"
                   SortChanged="OnSortChange">
             <DataGridColumns>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["OrderNo"]">
                    <DisplayTemplate>
                        @context.Order.OrderNo
                    </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["SubmissionTime"]">
                     <DisplayTemplate>
                         @context.CreationTime.ToShortDateString() @context.CreationTime.ToShortTimeString()
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["ReviewCompletionTime"]">
                     <DisplayTemplate>
                         @context.ReviewCompletionTime?.ToShortDateString() @context.ReviewCompletionTime?.ToShortTimeString()
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["CustomerName"]">
                     <DisplayTemplate>
                         @context.Order.CustomerName
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["RefundReview"]">
                     <DisplayTemplate>
                         <Div>
                            @if (!(context.RefundReview == RefundReviewStatus.Proccessing && context.Order.PaymentMethod == PaymentMethods.CreditCard))
                             {
                         <Select Disabled TValue="RefundReviewStatus" Class="form-select form-select-sm mb-1" 
                                    SelectedValue="@context.RefundReview" 
                                    SelectedValueChanged="@(e => RefundReviewChanged(e, context))">
                             @foreach (var enumValue in Enum.GetValues(typeof(RefundReviewStatus)))
                            {
                                <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                            }
                                </Select>
                            }
                            else if(context.RefundReview==RefundReviewStatus.Proccessing&& context.Order.PaymentMethod==PaymentMethods.CreditCard)
                            {
                                <Select  TValue="RefundReviewStatus" Class="form-select form-select-sm mb-1"
                                        SelectedValue="@context.RefundReview"
                                        SelectedValueChanged="@(e => RefundReviewChanged(e, context))">
                                  
                                    @foreach (var enumValue in Enum.GetValues(typeof(RefundReviewStatus)))
                                    {
                                        @if(enumValue.ToString() == "Success" || enumValue.ToString() == "Fail")
                                        {
                                        <SelectItem Value="@enumValue">@L[enumValue.ToString()]</SelectItem>
                                        }
                                    }
                                </Select>
                            }
                            @if (CanProcessRefund&&context.RefundReview==RefundReviewStatus.PendingReview)
                {
                            <Button Type="ButtonType.Button" Clicked="@(e => RefundApproved(context))" Class="btn btn-sm btn-primary">Approve</Button>
                                <Button Type="ButtonType.Button" Clicked="@(e => RefundReject(context))" Class="btn btn-sm btn-danger">Reject</Button>
                }
                        </Div>
                     </DisplayTemplate>
                 </DataGridColumn>
                <DataGridColumn TItem="RefundDto"
                                Caption="@L["Approver"]">
                    <DisplayTemplate>
                        @L[context.Approver??""]
                    </DisplayTemplate>
                </DataGridColumn>
                <DataGridColumn TItem="RefundDto"
                                Caption="@L["Refunder"]">
                    <DisplayTemplate>
                        @L[context.Refunder??""]
                    </DisplayTemplate>
                </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                Caption="@L["MerchantRemarks"]">
                     <DisplayTemplate>
                         @context.Order.Remarks
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["ShippingStatus"]">
                     <DisplayTemplate>
                         @L[context.Order.ShippingStatus.ToString()]
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["PaymentMethod"]">
                     <DisplayTemplate>
                         @L[context.Order.PaymentMethod.ToString()]
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn TItem="RefundDto"
                                 Caption="@L["CheckoutAmount"]">
                     <DisplayTemplate>
                         $@L[context.Order.TotalAmount.ToString("N2")]
                     </DisplayTemplate>
                 </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>
