@page "/AutomaticEmailing"
@using Blazorise.LoadingIndicator
@using Kooco.Pikachu.AutomaticEmails;
@using Kooco.Pikachu.Localization;
@using Microsoft.Extensions.Localization;
@using Volo.Abp.AspNetCore.Components.Messages;

@inject IAutomaticEmailAppService _automaticEmailAppService;
@inject IUiMessageService _uiMessageService;
@inject IJSRuntime JSRuntime;
@inject NavigationManager NavigationManager;
@inject IStringLocalizer<PikachuResource> L;
@attribute [Authorize]
@if (Loading == true)
{
    <Skeleton Animation="SkeletonAnimation.Pulse">
        <div class="row">
            <!-- Left column for the OrdersList heading -->
            <div class="col-3">
                <!-- This skeleton item is ~7/12 wide, you can adjust ColumnSize -->
                <SkeletonItem ColumnSize="ColumnSize.Is12" Class="mb-2" />
            </div>

            <!-- Right column for multiple button placeholders -->
            <div class="col-9 text-lg-end d-flex gap-2 justify-content-end">
                <!-- Make each skeleton item narrower or wider to mimic small buttons -->
                <!-- Add more SkeletonItem lines if needed -->
            </div>
        </div>
    </Skeleton>
    <Card>
        <CardBody>
            <Skeleton Animation="SkeletonAnimation.Pulse">
                <!-- For example, 5 horizontal bars to represent the table rows -->
                <SkeletonTable Rows="10" Columns="5" />
            </Skeleton>
        </CardBody>
    </Card>
}
<div style="@($"display: {(Loading ? "none" : "block")};" )">
<Div Class="row">
    <Div Class="col-md-6 col-sm-12">
        <h3>@L["AutomaticEmailing"]</h3>
    </Div>
    <Div Class="col-md-6 col-sm-12 text-end">
        <Button Type="ButtonType.Button" Class="btn btn-sm btn-primary" Clicked="CreateNew">
            <i class="fa fa-plus"></i>
            @L["New"]
        </Button>
    </Div>
</Div>



<Card>
    <CardBody>
        <DataGrid TItem="AutomaticEmailDto"
                  Data="Items"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="Total"
                  ShowPager="true"
                  PageSize="_pageSize"
                  RowDoubleClicked="OnEditItem"
                  SortChanged="OnSortChange">
            <DataGridColumns>
                 <DataGridColumn Field="@nameof(AutomaticEmailDto.TradeName)"
                                Caption="@L["EmailSubject"]">
                </DataGridColumn>
                 <DataGridColumn Field="@nameof(AutomaticEmailDto.StartDate)"
                                Caption="@L["StartDate"]">
                    <DisplayTemplate>
                        @context.StartDate.ToLongDateString()
                    </DisplayTemplate>
                </DataGridColumn>
                 <DataGridColumn Field="@nameof(AutomaticEmailDto.EndDate)"
                                 Caption="@L["EndDate"]">
                     <DisplayTemplate>
                         @context.EndDate.ToLongDateString()
                     </DisplayTemplate>
                 </DataGridColumn>
                 <DataGridColumn Field="@nameof(AutomaticEmailDto.SendTime)"
                                 Caption="@L["SendTime"]">
                     <DisplayTemplate>
                         @context.SendTime.ToShortTimeString()
                     </DisplayTemplate>
                 </DataGridColumn>
            </DataGridColumns>
            <FirstPageButtonTemplate>@L[PikachuResource.FirstPage]</FirstPageButtonTemplate>
            <PreviousPageButtonTemplate>@L[PikachuResource.PrevPage]</PreviousPageButtonTemplate>
            <NextPageButtonTemplate>@L[PikachuResource.NextPage]</NextPageButtonTemplate>
            <LastPageButtonTemplate>@L[PikachuResource.LastPage]</LastPageButtonTemplate>
              <TotalItemsTemplate>
                @(string.Format(
                         L["Range"],
                         ((_pageIndex) * _pageSize) + 1,
                         ((_pageIndex+1) * _pageSize > Total ? Total : (_pageIndex+1) * _pageSize),
                         Total
                         ))
            </TotalItemsTemplate>
        </DataGrid>
    </CardBody>
</Card>
</div>